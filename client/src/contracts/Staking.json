{
  "contractName": "Staking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "profitShare",
          "type": "uint256"
        }
      ],
      "name": "InvalidProfitShare",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "StakeNotFillable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "horse",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "backer",
          "type": "address"
        }
      ],
      "name": "StakingSelf",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProfitsReturned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "StakeCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "horse",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "backer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "horse",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeRequested",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "requestCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "horse",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "backer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profitShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "internalType": "enum Staking.StakeStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "horseWon",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profitShare",
          "type": "uint256"
        }
      ],
      "name": "createRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "stakeHorse",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "cancelStakeAsHorse",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "cancelStakeAsBacker",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "returnProfits",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"}],\"name\":\"InvalidProfitShare\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"StakeNotFillable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"horse\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"}],\"name\":\"StakingSelf\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProfitsReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"StakeCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"horse\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"horse\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeRequested\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancelStakeAsBacker\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancelStakeAsHorse\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"}],\"name\":\"createRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"returnProfits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"stakeHorse\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"horse\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"backer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakeStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"horseWon\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidProfitShare(uint256)\":[{\"notice\":\"Profit share must be between 0 and 100\"}],\"StakeNotFillable(uint256)\":[{\"notice\":\"Stake has already been filled/cancelled\"}],\"StakingSelf(uint256,address,address)\":[{\"notice\":\"You cannot stake yourself\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Staking.sol\":{\"keccak256\":\"0x191ab9209569c4b64376d3bb95da54377b57e68d20022fc238393999fddf5a55\",\"urls\":[\"bzz-raw://17809994f2b1109e1f0d5a256a92d11c50b955a2e52c03e0b0a4aa1e09e36333\",\"dweb:/ipfs/QmaCPcazKyNpUqu6ZM1kQrPmXvtPrLLq6ri5emnyfJc5KC\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805534801561001457600080fd5b50611607806100246000396000f3fe6080604052600436106100705760003560e01c806363c6ded31161004e57806363c6ded3146100d8578063a141efea14610101578063d5a44f861461011d578063e49953341461016157610070565b80630be3721d146100755780635badbe4c146100915780635f904775146100bc575b600080fd5b61008f600480360381019061008a9190610ff3565b61017d565b005b34801561009d57600080fd5b506100a661041f565b6040516100b3919061102f565b60405180910390f35b6100d660048036038101906100d19190610ff3565b610425565b005b3480156100e457600080fd5b506100ff60048036038101906100fa919061104a565b610760565b005b61011b60048036038101906101169190610ff3565b610997565b005b34801561012957600080fd5b50610144600480360381019061013f9190610ff3565b610d17565b60405161015898979695949392919061115d565b60405180910390f35b61017b60048036038101906101769190610ff3565b610db9565b005b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166005811115610297576102966110cb565b5b60058111156102a9576102a86110cb565b5b81526020016006820160019054906101000a900460ff16151515158152505090506102d382610f8e565b610312576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103099061125e565b60405180910390fd5b8060e00151610356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034d906112f0565b60405180910390fd5b806040015173ffffffffffffffffffffffffffffffffffffffff166108fc8260a001519081150290604051600060405180830381858888f193505050501580156103a4573d6000803e3d6000fd5b5060056001600084815260200190815260200160002060060160006101000a81548160ff021916908360058111156103df576103de6110cb565b5b02179055507f414aa128e641f6ec817056ff84c025b18f24ebc9161695c002d42a07b9634eea82604051610413919061102f565b60405180910390a15050565b60005481565b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600581111561053f5761053e6110cb565b5b6005811115610551576105506110cb565b5b81526020016006820160019054906101000a900460ff1615151515815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db90611382565b60405180910390fd5b600060058111156105f8576105f76110cb565b5b8160c00151600581111561060f5761060e6110cb565b5b1461064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690611414565b60405180910390fd5b61065882610f8e565b610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068e9061125e565b60405180910390fd5b806040015173ffffffffffffffffffffffffffffffffffffffff166108fc82606001519081150290604051600060405180830381858888f193505050501580156106e5573d6000803e3d6000fd5b5060036001600084815260200190815260200160002060060160006101000a81548160ff021916908360058111156107205761071f6110cb565b5b02179055507f228683e8c8f1f5c38d2eae8f5b8e5ef47a084a41ffc5de8b9b38164870c0009f82604051610754919061102f565b60405180910390a15050565b60648111156107a657806040517f7a59383600000000000000000000000000000000000000000000000000000000815260040161079d919061102f565b60405180910390fd5b60405180610100016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001600081526020016000600581111561081a576108196110cb565b5b81526020016000151581525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600581111561091b5761091a6110cb565b5b021790555060e08201518160060160016101000a81548160ff02191690831515021790555090505060008081548092919061095590611463565b91905055507f49cee4f5002995b36067cf0f209184d84f0b3cc2eb9e0bd67dbde672694beb82338360405161098b9291906114cd565b60405180910390a15050565b6109a081610f8e565b6109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d69061125e565b60405180910390fd5b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166005811115610af957610af86110cb565b5b6005811115610b0b57610b0a6110cb565b5b81526020016006820160019054906101000a900460ff161515151581525050905060006005811115610b4057610b3f6110cb565b5b8160c001516005811115610b5757610b566110cb565b5b14610b9957816040517f63d82b43000000000000000000000000000000000000000000000000000000008152600401610b90919061102f565b60405180910390fd5b60008160200151905060003390508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c1c578382826040517fb6ccca7f000000000000000000000000000000000000000000000000000000008152600401610c1393929190611555565b60405180910390fd5b60018360c001906005811115610c3557610c346110cb565b5b90816005811115610c4957610c486110cb565b5b8152505080836040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166108fc84606001519081150290604051600060405180830381858888f19350505050158015610ccf573d6000803e3d6000fd5b507fab1ccc3ac4f271f2e437d159236c5ceed2978a1949de79df70cf17069bac8e208483838660600151604051610d09949392919061158c565b60405180910390a150505050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166005811115610ed357610ed26110cb565b5b6005811115610ee557610ee46110cb565b5b81526020016006820160019054906101000a900460ff1615151515815250509050806040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f4257600080fd5b610f4b82610f8e565b610f8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f819061125e565b60405180910390fd5b5050565b600080821080610fa057506000548210155b15610fae5760009050610fb3565b600190505b919050565b600080fd5b6000819050919050565b610fd081610fbd565b8114610fdb57600080fd5b50565b600081359050610fed81610fc7565b92915050565b60006020828403121561100957611008610fb8565b5b600061101784828501610fde565b91505092915050565b61102981610fbd565b82525050565b60006020820190506110446000830184611020565b92915050565b6000806040838503121561106157611060610fb8565b5b600061106f85828601610fde565b925050602061108085828601610fde565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110b58261108a565b9050919050565b6110c5816110aa565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061110b5761110a6110cb565b5b50565b600081905061111c826110fa565b919050565b600061112c8261110e565b9050919050565b61113c81611121565b82525050565b60008115159050919050565b61115781611142565b82525050565b600061010082019050611173600083018b611020565b611180602083018a6110bc565b61118d60408301896110bc565b61119a6060830188611020565b6111a76080830187611020565b6111b460a0830186611020565b6111c160c0830185611133565b6111ce60e083018461114e565b9998505050505050505050565b600082825260208201905092915050565b7f54686973206973206e6f7420612076616c696420494420666f7220612073746160008201527f6b65210000000000000000000000000000000000000000000000000000000000602082015250565b60006112486023836111db565b9150611253826111ec565b604082019050919050565b600060208201905081810360008301526112778161123b565b9050919050565b7f54686520686f72736520646f6573206e65656420746f2072657475726e20616e60008201527f792070726f666974730000000000000000000000000000000000000000000000602082015250565b60006112da6029836111db565b91506112e58261127e565b604082019050919050565b60006020820190508181036000830152611309816112cd565b9050919050565b7f596f752063616e206f6e6c792063616e63656c20796f7572206f776e2073746160008201527f6b65732100000000000000000000000000000000000000000000000000000000602082015250565b600061136c6024836111db565b915061137782611310565b604082019050919050565b6000602082019050818103600083015261139b8161135f565b9050919050565b7f596f752063616e206f6e6c792063616e63656c20796f7572207374616b65206960008201527f6620697420686173206e6f74206265656e2066696c6c65642100000000000000602082015250565b60006113fe6039836111db565b9150611409826113a2565b604082019050919050565b6000602082019050818103600083015261142d816113f1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061146e82610fbd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114a1576114a0611434565b5b600182019050919050565b60006114b78261108a565b9050919050565b6114c7816114ac565b82525050565b60006040820190506114e260008301856114be565b6114ef6020830184611020565b9392505050565b6000819050919050565b600061151b6115166115118461108a565b6114f6565b61108a565b9050919050565b600061152d82611500565b9050919050565b600061153f82611522565b9050919050565b61154f81611534565b82525050565b600060608201905061156a6000830186611020565b6115776020830185611546565b6115846040830184611546565b949350505050565b60006080820190506115a16000830187611020565b6115ae6020830186611546565b6115bb6040830185611546565b6115c86060830184611020565b9594505050505056fea2646970667358221220e48ff542304a1aab15952fd3a6ae712bab4f58aa36f63c2578efdd9737e41a1b64736f6c63430008090033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11299:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:1",
                "type": ""
              }
            ],
            "src": "7:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:1",
                "type": ""
              }
            ],
            "src": "334:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:1",
                "type": ""
              }
            ],
            "src": "417:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:1",
                "type": ""
              }
            ],
            "src": "545:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:1",
                "type": ""
              }
            ],
            "src": "690:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1090:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1107:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1130:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1112:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1112:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1100:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1100:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1078:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1085:3:1",
                "type": ""
              }
            ],
            "src": "1025:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1269:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1280:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1265:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1257:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1337:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1350:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1361:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1293:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1293:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1219:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1231:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1242:4:1",
                "type": ""
              }
            ],
            "src": "1149:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1460:391:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1506:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1508:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1508:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1508:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1481:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1490:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1477:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1477:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1502:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1473:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1470:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1599:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1614:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1628:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1618:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1643:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1678:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1689:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1674:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1674:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1698:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1653:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1643:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1726:118:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1741:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1755:2:1",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1745:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1771:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1806:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1817:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1802:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1802:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1826:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1781:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1771:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1422:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1433:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1445:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1453:6:1",
                "type": ""
              }
            ],
            "src": "1377:474:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1902:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1912:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1927:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1934:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1923:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1923:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1912:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1884:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1894:7:1",
                "type": ""
              }
            ],
            "src": "1857:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2042:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2052:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2081:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2063:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2063:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2052:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2024:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2034:7:1",
                "type": ""
              }
            ],
            "src": "1989:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2180:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2197:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2228:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2202:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2202:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2190:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2190:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2190:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2168:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2175:3:1",
                "type": ""
              }
            ],
            "src": "2099:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2275:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2292:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2295:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2285:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2285:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2285:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2389:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2392:4:1",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2382:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2382:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2382:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2413:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2416:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2406:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2406:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2406:15:1"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2247:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2490:62:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2524:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "2526:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2526:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2526:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2513:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2520:1:1",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2510:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:12:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2503:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2503:20:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2500:46:1"
                }
              ]
            },
            "name": "validator_assert_t_enum$_StakeStatus_$16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2483:5:1",
                "type": ""
              }
            ],
            "src": "2433:119:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2617:80:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2627:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2638:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2627:7:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2685:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_StakeStatus_$16",
                      "nodeType": "YulIdentifier",
                      "src": "2644:40:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2644:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2644:47:1"
                }
              ]
            },
            "name": "cleanup_t_enum$_StakeStatus_$16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2599:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2609:7:1",
                "type": ""
              }
            ],
            "src": "2558:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2775:67:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2785:51:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2830:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_StakeStatus_$16",
                      "nodeType": "YulIdentifier",
                      "src": "2798:31:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2798:38:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2785:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_StakeStatus_$16_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2755:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2765:9:1",
                "type": ""
              }
            ],
            "src": "2703:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2925:78:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2942:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2990:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_StakeStatus_$16_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2947:42:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2947:49:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2935:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2935:62:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2935:62:1"
                }
              ]
            },
            "name": "abi_encode_t_enum$_StakeStatus_$16_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2913:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2920:3:1",
                "type": ""
              }
            ],
            "src": "2848:155:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3051:48:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3061:32:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3086:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3079:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3079:13:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3072:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3072:21:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3061:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3033:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3043:7:1",
                "type": ""
              }
            ],
            "src": "3009:90:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3164:50:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3181:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3201:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3186:14:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3186:21:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3174:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3174:34:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3174:34:1"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3152:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3159:3:1",
                "type": ""
              }
            ],
            "src": "3105:109:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3552:741:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3562:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3574:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3585:3:1",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3570:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3570:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3562:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3643:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3656:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3667:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3652:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3652:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3599:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3599:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3599:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3740:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3753:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3764:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3749:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3749:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3680:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3680:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3680:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3838:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3851:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3862:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3847:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3847:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3778:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3778:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3778:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3920:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3933:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3944:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3929:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3929:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3876:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3876:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3876:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "4002:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4015:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4026:3:1",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4011:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4011:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3958:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3958:73:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3958:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "4085:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4098:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4109:3:1",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4094:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4094:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4041:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4041:73:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4041:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "4180:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4193:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4204:3:1",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4189:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4189:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_StakeStatus_$16_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4124:55:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4124:85:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4124:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "4257:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4270:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4281:3:1",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4266:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4266:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4219:37:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4219:67:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4219:67:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_enum$_StakeStatus_$16_t_bool__to_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3468:9:1",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "3480:6:1",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "3488:6:1",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3496:6:1",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3504:6:1",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3512:6:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3520:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3528:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3536:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3547:4:1",
                "type": ""
              }
            ],
            "src": "3220:1073:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4395:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4412:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4417:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4405:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4405:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4405:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4433:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4452:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4457:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4448:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4448:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4433:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4367:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4372:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4383:11:1",
                "type": ""
              }
            ],
            "src": "4299:169:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4580:116:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4602:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4610:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4598:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4598:14:1"
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f72206120737461",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4614:34:1",
                        "type": "",
                        "value": "This is not a valid ID for a sta"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4591:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4591:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4591:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4670:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4678:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4666:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4666:15:1"
                      },
                      {
                        "hexValue": "6b6521",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4683:5:1",
                        "type": "",
                        "value": "ke!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4659:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4659:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4659:30:1"
                }
              ]
            },
            "name": "store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4572:6:1",
                "type": ""
              }
            ],
            "src": "4474:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4848:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4858:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4924:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4929:2:1",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4865:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4865:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4858:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5030:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                      "nodeType": "YulIdentifier",
                      "src": "4941:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4941:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4941:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5043:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5054:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5059:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5050:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5050:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5043:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4836:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4844:3:1",
                "type": ""
              }
            ],
            "src": "4702:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5245:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5255:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5267:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5278:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5263:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5263:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5255:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5302:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5313:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5298:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5298:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5321:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5327:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5317:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5317:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5291:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5291:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5291:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5347:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5481:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5355:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5355:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5347:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5225:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5240:4:1",
                "type": ""
              }
            ],
            "src": "5074:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5605:122:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5627:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5635:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5623:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5623:14:1"
                      },
                      {
                        "hexValue": "54686520686f72736520646f6573206e65656420746f2072657475726e20616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5639:34:1",
                        "type": "",
                        "value": "The horse does need to return an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5616:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5616:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5616:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5695:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5703:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5691:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5691:15:1"
                      },
                      {
                        "hexValue": "792070726f66697473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5708:11:1",
                        "type": "",
                        "value": "y profits"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5684:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5684:36:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5684:36:1"
                }
              ]
            },
            "name": "store_literal_in_memory_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5597:6:1",
                "type": ""
              }
            ],
            "src": "5499:228:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5879:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5889:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5955:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5960:2:1",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5896:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5889:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6061:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62",
                      "nodeType": "YulIdentifier",
                      "src": "5972:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5972:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5972:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6074:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6085:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6090:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6081:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6081:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6074:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5867:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5875:3:1",
                "type": ""
              }
            ],
            "src": "5733:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6276:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6286:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6298:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6309:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6294:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6294:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6286:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6333:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6344:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6329:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6329:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6352:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6358:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6348:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6348:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6322:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6322:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6322:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6378:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6512:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6386:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6386:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6378:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6256:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6271:4:1",
                "type": ""
              }
            ],
            "src": "6105:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6636:117:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6658:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6666:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6654:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6654:14:1"
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572206f776e20737461",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6670:34:1",
                        "type": "",
                        "value": "You can only cancel your own sta"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6647:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6647:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6647:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6726:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6734:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6722:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6722:15:1"
                      },
                      {
                        "hexValue": "6b657321",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6739:6:1",
                        "type": "",
                        "value": "kes!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6715:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6715:31:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6715:31:1"
                }
              ]
            },
            "name": "store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6628:6:1",
                "type": ""
              }
            ],
            "src": "6530:223:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6905:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6915:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6981:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6986:2:1",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6922:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6922:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6915:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7087:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                      "nodeType": "YulIdentifier",
                      "src": "6998:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6998:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6998:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7100:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7111:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7116:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7107:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7107:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7100:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6893:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6901:3:1",
                "type": ""
              }
            ],
            "src": "6759:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7302:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7312:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7324:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7335:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7320:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7320:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7312:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7359:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7370:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7355:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7355:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7378:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7384:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7374:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7374:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7348:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7348:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7348:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7404:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7538:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7412:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7412:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7404:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7282:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7297:4:1",
                "type": ""
              }
            ],
            "src": "7131:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7662:138:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7684:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7692:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7680:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7680:14:1"
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572207374616b652069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7696:34:1",
                        "type": "",
                        "value": "You can only cancel your stake i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7673:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7673:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7673:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7752:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7760:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7748:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7748:15:1"
                      },
                      {
                        "hexValue": "6620697420686173206e6f74206265656e2066696c6c656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7765:27:1",
                        "type": "",
                        "value": "f it has not been filled!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7741:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7741:52:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7741:52:1"
                }
              ]
            },
            "name": "store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7654:6:1",
                "type": ""
              }
            ],
            "src": "7556:244:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7952:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7962:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8028:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8033:2:1",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7969:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7969:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7962:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8134:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                      "nodeType": "YulIdentifier",
                      "src": "8045:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8045:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8045:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8147:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8158:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8163:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8154:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8154:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8147:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7940:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7948:3:1",
                "type": ""
              }
            ],
            "src": "7806:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8349:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8359:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8371:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8382:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8367:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8367:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8359:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8406:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8417:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8402:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8402:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8425:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8431:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8421:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8421:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8395:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8395:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8395:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8451:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8585:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8459:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8459:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8451:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8329:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8344:4:1",
                "type": ""
              }
            ],
            "src": "8178:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8631:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8648:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8651:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8641:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8641:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8641:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8745:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8748:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8738:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8738:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8738:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8769:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8772:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8762:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8762:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8762:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8603:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8832:190:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8842:33:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8869:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8851:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8851:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8842:5:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8965:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8967:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8967:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8967:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8890:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8897:66:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8887:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8887:77:1"
                  },
                  "nodeType": "YulIf",
                  "src": "8884:103:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8996:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9007:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9014:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9003:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9003:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8996:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8818:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8828:3:1",
                "type": ""
              }
            ],
            "src": "8789:233:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9073:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9083:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9112:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9094:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9094:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9083:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9055:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9065:7:1",
                "type": ""
              }
            ],
            "src": "9028:96:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9195:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9212:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9235:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9217:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9217:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9205:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9205:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9205:37:1"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9183:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9190:3:1",
                "type": ""
              }
            ],
            "src": "9130:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9380:206:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9390:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9402:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9413:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9398:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9398:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9390:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9470:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9483:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9494:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9479:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9479:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9426:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9426:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9426:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9551:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9564:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9575:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9560:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9560:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9507:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9507:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9507:72:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9344:9:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9356:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9364:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9375:4:1",
                "type": ""
              }
            ],
            "src": "9254:332:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9624:28:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9634:12:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9641:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9634:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9610:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9620:3:1",
                "type": ""
              }
            ],
            "src": "9592:60:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9718:82:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9728:66:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9786:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "9768:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9768:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "9759:8:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9759:34:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9741:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9741:53:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9728:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9698:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9708:9:1",
                "type": ""
              }
            ],
            "src": "9658:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9866:66:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9876:50:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9920:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9889:30:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9889:37:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9876:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9846:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9856:9:1",
                "type": ""
              }
            ],
            "src": "9806:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10006:66:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10016:50:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10060:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "10029:30:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10029:37:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "10016:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9986:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9996:9:1",
                "type": ""
              }
            ],
            "src": "9938:134:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10151:74:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10168:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10212:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10173:38:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10173:45:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10161:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10161:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10161:58:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10139:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10146:3:1",
                "type": ""
              }
            ],
            "src": "10078:147:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10401:304:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10411:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10423:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10434:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10419:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10419:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10411:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10491:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10504:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10515:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10500:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10500:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10447:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10447:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10447:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10580:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10593:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10604:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10589:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10589:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10528:51:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10528:80:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10528:80:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10670:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10683:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10694:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10679:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10679:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10618:51:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10618:80:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10618:80:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address_payable__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10357:9:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10369:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10377:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10385:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10396:4:1",
                "type": ""
              }
            ],
            "src": "10231:474:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10909:387:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10919:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10931:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10942:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10927:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10927:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10919:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11000:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11013:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11024:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11009:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11009:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10956:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10956:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10956:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11089:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11102:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11113:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11098:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11098:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11037:51:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11037:80:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11037:80:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11179:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11192:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11203:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11188:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11188:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11127:51:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11127:80:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11127:80:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11261:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11274:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11285:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11270:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11270:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11217:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11217:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11217:72:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10857:9:1",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10869:6:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10877:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10885:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10893:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10904:4:1",
                "type": ""
              }
            ],
            "src": "10711:585:1"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_StakeStatus_$16(value) {\n        if iszero(lt(value, 6)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_StakeStatus_$16(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_StakeStatus_$16(value)\n    }\n\n    function convert_t_enum$_StakeStatus_$16_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_StakeStatus_$16(value)\n    }\n\n    function abi_encode_t_enum$_StakeStatus_$16_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_StakeStatus_$16_to_t_uint8(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_enum$_StakeStatus_$16_t_bool__to_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_enum$_StakeStatus_$16_to_t_uint8_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84(memPtr) {\n\n        mstore(add(memPtr, 0), \"This is not a valid ID for a sta\")\n\n        mstore(add(memPtr, 32), \"ke!\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62(memPtr) {\n\n        mstore(add(memPtr, 0), \"The horse does need to return an\")\n\n        mstore(add(memPtr, 32), \"y profits\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only cancel your own sta\")\n\n        mstore(add(memPtr, 32), \"kes!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only cancel your stake i\")\n\n        mstore(add(memPtr, 32), \"f it has not been filled!\")\n\n    }\n\n    function abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address_payable__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "25:3526:0:-:0;;;75:1;48:28;;25:3526;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "25:3526:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:374;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;48:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2137:498;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;688:387;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1373:687;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;82:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2692:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3011:374;3070:18;3091:6;:10;3098:2;3091:10;;;;;;;;;;;3070:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3119:11;3127:2;3119:7;:11::i;:::-;3111:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3188:5;:14;;;3180:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3258:5;:12;;;:21;;:35;3280:5;:12;;;3258:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3323:21;3303:6;:10;3310:2;3303:10;;;;;;;;;;;:17;;;:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3359:19;3375:2;3359:19;;;;;;:::i;:::-;;;;;;;;3060:325;3011:374;:::o;48:28::-;;;;:::o;2137:498::-;2201:18;2222:6;:10;2229:2;2222:10;;;;;;;;;;;2201:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2264:5;:11;;;2250:25;;:10;:25;;;2242:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2349:21;2333:37;;;;;;;;:::i;:::-;;:5;:12;;;:37;;;;;;;;:::i;:::-;;;2325:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;2449:11;2457:2;2449:7;:11::i;:::-;2441:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2510:5;:12;;;:21;;:35;2532:5;:12;;;2510:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2575:21;2555:6;:10;2562:2;2555:10;;;;;;;;;;;:17;;;:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2611:17;2625:2;2611:17;;;;;;:::i;:::-;;;;;;;;2191:444;2137:498;:::o;688:387::-;779:3;765:11;:17;761:86;;;824:11;805:31;;;;;;;;;;;:::i;:::-;;;;;;;;761:86;880:114;;;;;;;;886:12;;880:114;;;;908:10;880:114;;;;;;937:1;880:114;;;;;;942:6;880:114;;;;950:11;880:114;;;;963:1;880:114;;;;966:21;880:114;;;;;;;;:::i;:::-;;;;;;988:5;880:114;;;;;857:6;:20;864:12;;857:20;;;;;;;;;;;:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:12;;:14;;;;;;;;;:::i;:::-;;;;;;1034:34;1049:10;1061:6;1034:34;;;;;;;:::i;:::-;;;;;;;;688:387;;:::o;1373:687::-;1437:11;1445:2;1437:7;:11::i;:::-;1429:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1503:18;1524:6;:10;1531:2;1524:10;;;;;;;;;;;1503:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1564:21;1548:37;;;;;;;;:::i;:::-;;:5;:12;;;:37;;;;;;;;:::i;:::-;;;1544:95;;1625:2;1608:20;;;;;;;;;;;:::i;:::-;;;;;;;;1544:95;1649:21;1673:5;:11;;;1649:35;;1694:22;1727:10;1694:44;;1761:6;1752:15;;:5;:15;;;1748:83;;;1802:2;1806:5;1813:6;1790:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;1748:83;1906:18;1891:5;:12;;:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;1949:6;1934:5;:12;;:21;;;;;;;;;;;1965:5;:14;;:28;1980:5;:12;;;1965:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2009:44;2021:2;2025:5;2032:6;2040:5;:12;;;2009:44;;;;;;;;;:::i;:::-;;;;;;;;1419:641;;;1373:687;:::o;82:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2692:217::-;2757:18;2778:6;:10;2785:2;2778:10;;;;;;;;;;;2757:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2820:5;:12;;;2806:26;;:10;:26;;;2798:35;;;;;;2851:11;2859:2;2851:7;:11::i;:::-;2843:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2747:162;2692:217;:::o;3391:157::-;3435:4;3459:1;3454:2;:6;:28;;;;3470:12;;3464:2;:18;;3454:28;3451:70;;;3505:5;3498:12;;;;3451:70;3537:4;3530:11;;3391:157;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:474::-;1445:6;1453;1502:2;1490:9;1481:7;1477:23;1473:32;1470:119;;;1508:79;;:::i;:::-;1470:119;1628:1;1653:53;1698:7;1689:6;1678:9;1674:22;1653:53;:::i;:::-;1643:63;;1599:117;1755:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1726:118;1377:474;;;;;:::o;1857:126::-;1894:7;1934:42;1927:5;1923:54;1912:65;;1857:126;;;:::o;1989:104::-;2034:7;2063:24;2081:5;2063:24;:::i;:::-;2052:35;;1989:104;;;:::o;2099:142::-;2202:32;2228:5;2202:32;:::i;:::-;2197:3;2190:45;2099:142;;:::o;2247:180::-;2295:77;2292:1;2285:88;2392:4;2389:1;2382:15;2416:4;2413:1;2406:15;2433:119;2520:1;2513:5;2510:12;2500:46;;2526:18;;:::i;:::-;2500:46;2433:119;:::o;2558:139::-;2609:7;2638:5;2627:16;;2644:47;2685:5;2644:47;:::i;:::-;2558:139;;;:::o;2703:::-;2765:9;2798:38;2830:5;2798:38;:::i;:::-;2785:51;;2703:139;;;:::o;2848:155::-;2947:49;2990:5;2947:49;:::i;:::-;2942:3;2935:62;2848:155;;:::o;3009:90::-;3043:7;3086:5;3079:13;3072:21;3061:32;;3009:90;;;:::o;3105:109::-;3186:21;3201:5;3186:21;:::i;:::-;3181:3;3174:34;3105:109;;:::o;3220:1073::-;3547:4;3585:3;3574:9;3570:19;3562:27;;3599:71;3667:1;3656:9;3652:17;3643:6;3599:71;:::i;:::-;3680:88;3764:2;3753:9;3749:18;3740:6;3680:88;:::i;:::-;3778;3862:2;3851:9;3847:18;3838:6;3778:88;:::i;:::-;3876:72;3944:2;3933:9;3929:18;3920:6;3876:72;:::i;:::-;3958:73;4026:3;4015:9;4011:19;4002:6;3958:73;:::i;:::-;4041;4109:3;4098:9;4094:19;4085:6;4041:73;:::i;:::-;4124:85;4204:3;4193:9;4189:19;4180:6;4124:85;:::i;:::-;4219:67;4281:3;4270:9;4266:19;4257:6;4219:67;:::i;:::-;3220:1073;;;;;;;;;;;:::o;4299:169::-;4383:11;4417:6;4412:3;4405:19;4457:4;4452:3;4448:14;4433:29;;4299:169;;;;:::o;4474:222::-;4614:34;4610:1;4602:6;4598:14;4591:58;4683:5;4678:2;4670:6;4666:15;4659:30;4474:222;:::o;4702:366::-;4844:3;4865:67;4929:2;4924:3;4865:67;:::i;:::-;4858:74;;4941:93;5030:3;4941:93;:::i;:::-;5059:2;5054:3;5050:12;5043:19;;4702:366;;;:::o;5074:419::-;5240:4;5278:2;5267:9;5263:18;5255:26;;5327:9;5321:4;5317:20;5313:1;5302:9;5298:17;5291:47;5355:131;5481:4;5355:131;:::i;:::-;5347:139;;5074:419;;;:::o;5499:228::-;5639:34;5635:1;5627:6;5623:14;5616:58;5708:11;5703:2;5695:6;5691:15;5684:36;5499:228;:::o;5733:366::-;5875:3;5896:67;5960:2;5955:3;5896:67;:::i;:::-;5889:74;;5972:93;6061:3;5972:93;:::i;:::-;6090:2;6085:3;6081:12;6074:19;;5733:366;;;:::o;6105:419::-;6271:4;6309:2;6298:9;6294:18;6286:26;;6358:9;6352:4;6348:20;6344:1;6333:9;6329:17;6322:47;6386:131;6512:4;6386:131;:::i;:::-;6378:139;;6105:419;;;:::o;6530:223::-;6670:34;6666:1;6658:6;6654:14;6647:58;6739:6;6734:2;6726:6;6722:15;6715:31;6530:223;:::o;6759:366::-;6901:3;6922:67;6986:2;6981:3;6922:67;:::i;:::-;6915:74;;6998:93;7087:3;6998:93;:::i;:::-;7116:2;7111:3;7107:12;7100:19;;6759:366;;;:::o;7131:419::-;7297:4;7335:2;7324:9;7320:18;7312:26;;7384:9;7378:4;7374:20;7370:1;7359:9;7355:17;7348:47;7412:131;7538:4;7412:131;:::i;:::-;7404:139;;7131:419;;;:::o;7556:244::-;7696:34;7692:1;7684:6;7680:14;7673:58;7765:27;7760:2;7752:6;7748:15;7741:52;7556:244;:::o;7806:366::-;7948:3;7969:67;8033:2;8028:3;7969:67;:::i;:::-;7962:74;;8045:93;8134:3;8045:93;:::i;:::-;8163:2;8158:3;8154:12;8147:19;;7806:366;;;:::o;8178:419::-;8344:4;8382:2;8371:9;8367:18;8359:26;;8431:9;8425:4;8421:20;8417:1;8406:9;8402:17;8395:47;8459:131;8585:4;8459:131;:::i;:::-;8451:139;;8178:419;;;:::o;8603:180::-;8651:77;8648:1;8641:88;8748:4;8745:1;8738:15;8772:4;8769:1;8762:15;8789:233;8828:3;8851:24;8869:5;8851:24;:::i;:::-;8842:33;;8897:66;8890:5;8887:77;8884:103;;;8967:18;;:::i;:::-;8884:103;9014:1;9007:5;9003:13;8996:20;;8789:233;;;:::o;9028:96::-;9065:7;9094:24;9112:5;9094:24;:::i;:::-;9083:35;;9028:96;;;:::o;9130:118::-;9217:24;9235:5;9217:24;:::i;:::-;9212:3;9205:37;9130:118;;:::o;9254:332::-;9375:4;9413:2;9402:9;9398:18;9390:26;;9426:71;9494:1;9483:9;9479:17;9470:6;9426:71;:::i;:::-;9507:72;9575:2;9564:9;9560:18;9551:6;9507:72;:::i;:::-;9254:332;;;;;:::o;9592:60::-;9620:3;9641:5;9634:12;;9592:60;;;:::o;9658:142::-;9708:9;9741:53;9759:34;9768:24;9786:5;9768:24;:::i;:::-;9759:34;:::i;:::-;9741:53;:::i;:::-;9728:66;;9658:142;;;:::o;9806:126::-;9856:9;9889:37;9920:5;9889:37;:::i;:::-;9876:50;;9806:126;;;:::o;9938:134::-;9996:9;10029:37;10060:5;10029:37;:::i;:::-;10016:50;;9938:134;;;:::o;10078:147::-;10173:45;10212:5;10173:45;:::i;:::-;10168:3;10161:58;10078:147;;:::o;10231:474::-;10396:4;10434:2;10423:9;10419:18;10411:26;;10447:71;10515:1;10504:9;10500:17;10491:6;10447:71;:::i;:::-;10528:80;10604:2;10593:9;10589:18;10580:6;10528:80;:::i;:::-;10618;10694:2;10683:9;10679:18;10670:6;10618:80;:::i;:::-;10231:474;;;;;;:::o;10711:585::-;10904:4;10942:3;10931:9;10927:19;10919:27;;10956:71;11024:1;11013:9;11009:17;11000:6;10956:71;:::i;:::-;11037:80;11113:2;11102:9;11098:18;11089:6;11037:80;:::i;:::-;11127;11203:2;11192:9;11188:18;11179:6;11127:80;:::i;:::-;11217:72;11285:2;11274:9;11270:18;11261:6;11217:72;:::i;:::-;10711:585;;;;;;;:::o",
  "source": "pragma solidity ^0.8.9;\n\ncontract Staking {\n    uint public requestCount = 0;\n    mapping(uint => Stake) public stakes;\n\n    enum StakeStatus {\n        Requested,\n        Filled,\n        Expired,\n        Cancelled,\n        AwaitingReturnPayment,\n        Completed\n    }\n\n    struct Stake {\n        uint id;\n        address payable horse;\n        address payable backer;\n        uint amount;\n        uint profitShare;\n        uint profit;\n        StakeStatus status;\n        bool horseWon;\n    }\n\n    // Creating a new stake request\n\n    event StakeRequested(address horse, uint amount);\n\n    /// Profit share must be between 0 and 100\n    error InvalidProfitShare(uint profitShare);\n\n    function createRequest(uint amount, uint profitShare) external {\n        if (profitShare > 100) {\n            revert InvalidProfitShare(profitShare);\n        } \n        stakes[requestCount] = Stake(requestCount, payable(msg.sender), payable(address(0)), amount, profitShare, 0, StakeStatus.Requested,false);\n        requestCount++;\n\n        emit StakeRequested(msg.sender, amount);\n    }\n\n    // Staking a request\n    event StakeFilled(uint stakeId, address horse, address backer, uint amount);\n    /// Stake has already been filled/cancelled\n    error StakeNotFillable(uint id);\n    /// You cannot stake yourself\n    error StakingSelf(uint id, address horse, address backer);\n   \n    function stakeHorse(uint id) external payable {\n        require(validId(id), \"This is not a valid ID for a stake!\");\n    \n        Stake memory stake = stakes[id];\n        if (stake.status != StakeStatus.Requested) {\n            revert StakeNotFillable(id);\n        }\n\n        address payable horse = stake.horse;\n        address payable backer = payable(msg.sender);\n        if (horse == backer) {\n            revert StakingSelf(id, horse, backer);\n        }\n\n        // Update stake status and transfer funds\n        stake.status = StakeStatus.Filled;\n        stake.backer = backer;\n        horse.transfer(stake.amount);\n\n        emit StakeFilled(id, horse, backer, stake.amount);\n    }\n\n    // Cancelling a reqested stake\n\n    event StakeCanceled(uint id);\n\n    function cancelStakeAsHorse(uint id) external payable {\n        Stake memory stake = stakes[id];\n        require(msg.sender == stake.horse,\"You can only cancel your own stakes!\");\n        require(stake.status == StakeStatus.Requested,\"You can only cancel your stake if it has not been filled!\");\n        require(validId(id), \"This is not a valid ID for a stake!\");\n        stake.backer.transfer(stake.amount);\n        stakes[id].status = StakeStatus.Cancelled;\n        emit StakeCanceled(id);\n    }\n    \n    // Still need to figure out this part\n    \n    function cancelStakeAsBacker(uint id) external payable {\n        Stake memory stake = stakes[id];\n        require(msg.sender == stake.backer);\n        require(validId(id), \"This is not a valid ID for a stake!\");\n    }\n\n    // Returning profits to backer after completing games\n\n    event ProfitsReturned(uint id);\n\n    function returnProfits(uint id) external payable {\n        Stake memory stake = stakes[id];\n        require(validId(id), \"This is not a valid ID for a stake!\");\n        require(stake.horseWon, \"The horse does need to return any profits\");\n        stake.backer.transfer(stake.profit);\n        stakes[id].status = StakeStatus.Completed;\n        emit ProfitsReturned(id);\n    }\n\n    function validId(uint id) internal returns (bool) {\n        if(id < 0 || id >= requestCount) {\n            return false;\n        }\n        return true;\n    }\n\n}",
  "sourcePath": "/home/dragonulq/decentralized_poker_staking/contracts/Staking.sol",
  "ast": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "Staking": [
        368
      ]
    },
    "id": 369,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 368,
        "linearizedBaseContracts": [
          368
        ],
        "name": "Staking",
        "nameLocation": "34:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5badbe4c",
            "id": 4,
            "mutability": "mutable",
            "name": "requestCount",
            "nameLocation": "60:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "48:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "48:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "75:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5a44f86",
            "id": 9,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "112:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "82:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
              "typeString": "mapping(uint256 => struct Staking.Stake)"
            },
            "typeName": {
              "id": 8,
              "keyType": {
                "id": 5,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "90:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "82:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                "typeString": "mapping(uint256 => struct Staking.Stake)"
              },
              "valueType": {
                "id": 7,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "98:5:0"
                },
                "referencedDeclaration": 34,
                "src": "98:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                  "typeString": "struct Staking.Stake"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Staking.StakeStatus",
            "id": 16,
            "members": [
              {
                "id": 10,
                "name": "Requested",
                "nameLocation": "152:9:0",
                "nodeType": "EnumValue",
                "src": "152:9:0"
              },
              {
                "id": 11,
                "name": "Filled",
                "nameLocation": "171:6:0",
                "nodeType": "EnumValue",
                "src": "171:6:0"
              },
              {
                "id": 12,
                "name": "Expired",
                "nameLocation": "187:7:0",
                "nodeType": "EnumValue",
                "src": "187:7:0"
              },
              {
                "id": 13,
                "name": "Cancelled",
                "nameLocation": "204:9:0",
                "nodeType": "EnumValue",
                "src": "204:9:0"
              },
              {
                "id": 14,
                "name": "AwaitingReturnPayment",
                "nameLocation": "223:21:0",
                "nodeType": "EnumValue",
                "src": "223:21:0"
              },
              {
                "id": 15,
                "name": "Completed",
                "nameLocation": "254:9:0",
                "nodeType": "EnumValue",
                "src": "254:9:0"
              }
            ],
            "name": "StakeStatus",
            "nameLocation": "130:11:0",
            "nodeType": "EnumDefinition",
            "src": "125:144:0"
          },
          {
            "canonicalName": "Staking.Stake",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "303:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "298:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "horse",
                "nameLocation": "331:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "315:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 19,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "315:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "backer",
                "nameLocation": "362:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "346:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "383:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "378:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "profitShare",
                "nameLocation": "404:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "399:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "399:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "profit",
                "nameLocation": "430:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "425:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "458:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "446:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_StakeStatus_$16",
                  "typeString": "enum Staking.StakeStatus"
                },
                "typeName": {
                  "id": 30,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 29,
                    "name": "StakeStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16,
                    "src": "446:11:0"
                  },
                  "referencedDeclaration": 16,
                  "src": "446:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_StakeStatus_$16",
                    "typeString": "enum Staking.StakeStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "horseWon",
                "nameLocation": "479:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "474:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 32,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "282:5:0",
            "nodeType": "StructDefinition",
            "scope": 368,
            "src": "275:219:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 40,
            "name": "StakeRequested",
            "nameLocation": "543:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "566:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "558:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "578:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "573:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "557:28:0"
            },
            "src": "537:49:0"
          },
          {
            "documentation": {
              "id": 41,
              "nodeType": "StructuredDocumentation",
              "src": "592:42:0",
              "text": "Profit share must be between 0 and 100"
            },
            "id": 45,
            "name": "InvalidProfitShare",
            "nameLocation": "645:18:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "669:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "664:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "663:18:0"
            },
            "src": "639:43:0"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "751:324:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 52,
                      "name": "profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "765:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "779:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "765:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60,
                  "nodeType": "IfStatement",
                  "src": "761:86:0",
                  "trueBody": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "784:63:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 56,
                              "name": "profitShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "824:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 55,
                            "name": "InvalidProfitShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "805:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "805:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "RevertStatement",
                        "src": "798:38:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 61,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "857:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 63,
                      "indexExpression": {
                        "id": 62,
                        "name": "requestCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "864:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "857:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 65,
                          "name": "requestCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "886:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 68,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "908:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "908:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "900:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 66,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "900:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "900:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 75,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "937:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "929:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 73,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "929:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "929:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "921:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 71,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "921:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 78,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "942:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 79,
                          "name": "profitShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "950:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "963:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 81,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "966:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "966:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "988:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 64,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "880:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Stake_$34_storage_ptr_$",
                          "typeString": "type(struct Staking.Stake storage pointer)"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "880:114:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "857:137:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "857:137:0"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1004:14:0",
                    "subExpression": {
                      "id": 87,
                      "name": "requestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1004:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:14:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1049:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1049:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 93,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1061:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90,
                      "name": "StakeRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1034:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "EmitStatement",
                  "src": "1029:39:0"
                }
              ]
            },
            "functionSelector": "63c6ded3",
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "697:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "716:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "711:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "729:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "724:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:31:0"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "751:0:0"
            },
            "scope": 368,
            "src": "688:387:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 107,
            "name": "StakeFilled",
            "nameLocation": "1112:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakeId",
                  "nameLocation": "1129:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1124:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1146:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1138:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1161:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1153:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1174:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1169:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:58:0"
            },
            "src": "1106:76:0"
          },
          {
            "documentation": {
              "id": 108,
              "nodeType": "StructuredDocumentation",
              "src": "1187:43:0",
              "text": "Stake has already been filled/cancelled"
            },
            "id": 112,
            "name": "StakeNotFillable",
            "nameLocation": "1241:16:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1263:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1258:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:9:0"
            },
            "src": "1235:32:0"
          },
          {
            "documentation": {
              "id": 113,
              "nodeType": "StructuredDocumentation",
              "src": "1272:29:0",
              "text": "You cannot stake yourself"
            },
            "id": 121,
            "name": "StakingSelf",
            "nameLocation": "1312:11:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1329:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1324:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1341:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1333:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1356:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1348:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1323:40:0"
            },
            "src": "1306:58:0"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "1419:641:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 128,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "1445:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 127,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "1437:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1437:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1450:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1429:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:59:0"
                },
                {
                  "assignments": [
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "1516:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1503:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 134,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 133,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "1503:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "1503:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "baseExpression": {
                      "id": 136,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1524:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 138,
                    "indexExpression": {
                      "id": 137,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "1531:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1524:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1503:31:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 140,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1548:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "1548:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 142,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1564:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Requested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1564:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "1548:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 150,
                  "nodeType": "IfStatement",
                  "src": "1544:95:0",
                  "trueBody": {
                    "id": 149,
                    "nodeType": "Block",
                    "src": "1587:52:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 146,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "1625:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 145,
                            "name": "StakeNotFillable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 112,
                            "src": "1608:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1608:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 148,
                        "nodeType": "RevertStatement",
                        "src": "1601:27:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "horse",
                      "nameLocation": "1665:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1649:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1649:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 155,
                  "initialValue": {
                    "expression": {
                      "id": 153,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "1673:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "horse",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20,
                    "src": "1673:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1649:35:0"
                },
                {
                  "assignments": [
                    157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 157,
                      "mutability": "mutable",
                      "name": "backer",
                      "nameLocation": "1710:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1694:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1694:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 160,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1727:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1727:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1719:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 158,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1719:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1694:44:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 164,
                      "name": "horse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "1752:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 165,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "1761:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1752:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 174,
                  "nodeType": "IfStatement",
                  "src": "1748:83:0",
                  "trueBody": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "1769:62:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 168,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "1802:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 169,
                              "name": "horse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "1806:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 170,
                              "name": "backer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "1813:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 167,
                            "name": "StakingSelf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1790:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address) pure"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1790:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 172,
                        "nodeType": "RevertStatement",
                        "src": "1783:37:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 175,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1891:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "1891:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 178,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1906:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Filled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1906:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "1891:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:33:0"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 182,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1934:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "backer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "1934:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 185,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "1949:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1934:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "1934:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 191,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "1980:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "1980:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 188,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1965:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1965:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 196,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2021:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 197,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "2025:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 198,
                        "name": "backer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2032:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 199,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "2040:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2040:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 195,
                      "name": "StakeFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "2009:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "EmitStatement",
                  "src": "2004:49:0"
                }
              ]
            },
            "functionSelector": "a141efea",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeHorse",
            "nameLocation": "1382:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1398:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1393:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1392:9:0"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1419:0:0"
            },
            "scope": 368,
            "src": "1373:687:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 208,
            "name": "StakeCanceled",
            "nameLocation": "2108:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2127:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2122:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2121:9:0"
            },
            "src": "2102:29:0"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "2191:444:0",
              "statements": [
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "2214:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 266,
                      "src": "2201:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 214,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 213,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "2201:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "2201:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 219,
                  "initialValue": {
                    "baseExpression": {
                      "id": 216,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2222:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 218,
                    "indexExpression": {
                      "id": 217,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2229:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2222:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2201:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 221,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2250:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2250:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 223,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "2264:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "2264:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2250:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572206f776e207374616b657321",
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2276:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        },
                        "value": "You can only cancel your own stakes!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2242:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_StakeStatus_$16",
                          "typeString": "enum Staking.StakeStatus"
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 230,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "2333:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2333:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 232,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "2349:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "2349:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "src": "2333:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572207374616b6520696620697420686173206e6f74206265656e2066696c6c656421",
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2371:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        },
                        "value": "You can only cancel your stake if it has not been filled!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        }
                      ],
                      "id": 229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2325:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2325:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:106:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 240,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "2457:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 239,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "2449:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2449:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2462:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2441:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2441:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2441:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 250,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "2532:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2532:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 245,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "2510:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "2510:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2510:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2510:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2510:35:0"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 254,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "2555:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                            "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                          }
                        },
                        "id": 256,
                        "indexExpression": {
                          "id": 255,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2562:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2555:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage",
                          "typeString": "struct Staking.Stake storage ref"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "2555:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 258,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2575:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2575:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "2555:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2555:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 263,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2625:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 262,
                      "name": "StakeCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "2611:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2611:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "EmitStatement",
                  "src": "2606:22:0"
                }
              ]
            },
            "functionSelector": "5f904775",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelStakeAsHorse",
            "nameLocation": "2146:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2170:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "2165:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2164:9:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2191:0:0"
            },
            "scope": 368,
            "src": "2137:498:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "2747:162:0",
              "statements": [
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "2770:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "2757:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 273,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 272,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "2757:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "2757:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 278,
                  "initialValue": {
                    "baseExpression": {
                      "id": 275,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2778:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 277,
                    "indexExpression": {
                      "id": 276,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "2785:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2778:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2757:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 280,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2806:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2806:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 282,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 274,
                            "src": "2820:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "backer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "2820:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2806:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2798:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2798:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "2798:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 289,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "2859:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 288,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "2851:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2851:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2864:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2843:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2843:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "2843:59:0"
                }
              ]
            },
            "functionSelector": "e4995334",
            "id": 295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelStakeAsBacker",
            "nameLocation": "2701:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2726:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2721:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2721:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2720:9:0"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2747:0:0"
            },
            "scope": 368,
            "src": "2692:217:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 299,
            "name": "ProfitsReturned",
            "nameLocation": "2980:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3001:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "2996:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2996:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2995:9:0"
            },
            "src": "2974:31:0"
          },
          {
            "body": {
              "id": 345,
              "nodeType": "Block",
              "src": "3060:325:0",
              "statements": [
                {
                  "assignments": [
                    306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "3083:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 345,
                      "src": "3070:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 305,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 304,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "3070:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "3070:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 310,
                  "initialValue": {
                    "baseExpression": {
                      "id": 307,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3091:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 309,
                    "indexExpression": {
                      "id": 308,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "3098:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3091:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3070:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 313,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "3127:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 312,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "3119:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3119:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3132:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3111:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3111:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "3111:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 319,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "3188:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "horseWon",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "3188:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520686f72736520646f6573206e65656420746f2072657475726e20616e792070726f66697473",
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3204:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62",
                          "typeString": "literal_string \"The horse does need to return any profits\""
                        },
                        "value": "The horse does need to return any profits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62",
                          "typeString": "literal_string \"The horse does need to return any profits\""
                        }
                      ],
                      "id": 318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3180:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3180:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3180:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 329,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "3280:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "profit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "3280:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 324,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "3258:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "3258:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3258:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3258:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "3258:35:0"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 333,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "3303:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                            "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                          }
                        },
                        "id": 335,
                        "indexExpression": {
                          "id": 334,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "3310:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3303:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage",
                          "typeString": "struct Staking.Stake storage ref"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "3303:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 337,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3323:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "3323:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "3303:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "3303:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 342,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "3375:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 341,
                      "name": "ProfitsReturned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "3359:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "EmitStatement",
                  "src": "3354:24:0"
                }
              ]
            },
            "functionSelector": "0be3721d",
            "id": 346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnProfits",
            "nameLocation": "3020:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3039:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "3034:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3034:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3033:9:0"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3060:0:0"
            },
            "scope": 368,
            "src": "3011:374:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "3441:107:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 353,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "3454:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3459:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3454:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 356,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "3464:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 357,
                        "name": "requestCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "3470:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3464:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3454:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 363,
                  "nodeType": "IfStatement",
                  "src": "3451:70:0",
                  "trueBody": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "3484:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3505:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 352,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "3498:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3537:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 352,
                  "id": 365,
                  "nodeType": "Return",
                  "src": "3530:11:0"
                }
              ]
            },
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validId",
            "nameLocation": "3400:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3413:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "3408:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3407:9:0"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "3435:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3434:6:0"
            },
            "scope": 368,
            "src": "3391:157:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 369,
        "src": "25:3526:0",
        "usedErrors": [
          45,
          112,
          121
        ]
      }
    ],
    "src": "0:3551:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "Staking": [
        368
      ]
    },
    "id": 369,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 368,
        "linearizedBaseContracts": [
          368
        ],
        "name": "Staking",
        "nameLocation": "34:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5badbe4c",
            "id": 4,
            "mutability": "mutable",
            "name": "requestCount",
            "nameLocation": "60:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "48:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "48:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "75:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5a44f86",
            "id": 9,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "112:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "82:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
              "typeString": "mapping(uint256 => struct Staking.Stake)"
            },
            "typeName": {
              "id": 8,
              "keyType": {
                "id": 5,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "90:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "82:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                "typeString": "mapping(uint256 => struct Staking.Stake)"
              },
              "valueType": {
                "id": 7,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "98:5:0"
                },
                "referencedDeclaration": 34,
                "src": "98:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                  "typeString": "struct Staking.Stake"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Staking.StakeStatus",
            "id": 16,
            "members": [
              {
                "id": 10,
                "name": "Requested",
                "nameLocation": "152:9:0",
                "nodeType": "EnumValue",
                "src": "152:9:0"
              },
              {
                "id": 11,
                "name": "Filled",
                "nameLocation": "171:6:0",
                "nodeType": "EnumValue",
                "src": "171:6:0"
              },
              {
                "id": 12,
                "name": "Expired",
                "nameLocation": "187:7:0",
                "nodeType": "EnumValue",
                "src": "187:7:0"
              },
              {
                "id": 13,
                "name": "Cancelled",
                "nameLocation": "204:9:0",
                "nodeType": "EnumValue",
                "src": "204:9:0"
              },
              {
                "id": 14,
                "name": "AwaitingReturnPayment",
                "nameLocation": "223:21:0",
                "nodeType": "EnumValue",
                "src": "223:21:0"
              },
              {
                "id": 15,
                "name": "Completed",
                "nameLocation": "254:9:0",
                "nodeType": "EnumValue",
                "src": "254:9:0"
              }
            ],
            "name": "StakeStatus",
            "nameLocation": "130:11:0",
            "nodeType": "EnumDefinition",
            "src": "125:144:0"
          },
          {
            "canonicalName": "Staking.Stake",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "303:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "298:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "horse",
                "nameLocation": "331:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "315:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 19,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "315:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "backer",
                "nameLocation": "362:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "346:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "383:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "378:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "profitShare",
                "nameLocation": "404:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "399:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "399:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "profit",
                "nameLocation": "430:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "425:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "458:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "446:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_StakeStatus_$16",
                  "typeString": "enum Staking.StakeStatus"
                },
                "typeName": {
                  "id": 30,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 29,
                    "name": "StakeStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16,
                    "src": "446:11:0"
                  },
                  "referencedDeclaration": 16,
                  "src": "446:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_StakeStatus_$16",
                    "typeString": "enum Staking.StakeStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "horseWon",
                "nameLocation": "479:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "474:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 32,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "282:5:0",
            "nodeType": "StructDefinition",
            "scope": 368,
            "src": "275:219:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 40,
            "name": "StakeRequested",
            "nameLocation": "543:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "566:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "558:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "578:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "573:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "557:28:0"
            },
            "src": "537:49:0"
          },
          {
            "documentation": {
              "id": 41,
              "nodeType": "StructuredDocumentation",
              "src": "592:42:0",
              "text": "Profit share must be between 0 and 100"
            },
            "id": 45,
            "name": "InvalidProfitShare",
            "nameLocation": "645:18:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "669:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "664:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "663:18:0"
            },
            "src": "639:43:0"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "751:324:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 52,
                      "name": "profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "765:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "779:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "765:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60,
                  "nodeType": "IfStatement",
                  "src": "761:86:0",
                  "trueBody": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "784:63:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 56,
                              "name": "profitShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "824:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 55,
                            "name": "InvalidProfitShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "805:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "805:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "RevertStatement",
                        "src": "798:38:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 61,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "857:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 63,
                      "indexExpression": {
                        "id": 62,
                        "name": "requestCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "864:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "857:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 65,
                          "name": "requestCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "886:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 68,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "908:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "908:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "900:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 66,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "900:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "900:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 75,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "937:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "929:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 73,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "929:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "929:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "921:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 71,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "921:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 78,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "942:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 79,
                          "name": "profitShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "950:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "963:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 81,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "966:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "966:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "988:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 64,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "880:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Stake_$34_storage_ptr_$",
                          "typeString": "type(struct Staking.Stake storage pointer)"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "880:114:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "857:137:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "857:137:0"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1004:14:0",
                    "subExpression": {
                      "id": 87,
                      "name": "requestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1004:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:14:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1049:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1049:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 93,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1061:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90,
                      "name": "StakeRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1034:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "EmitStatement",
                  "src": "1029:39:0"
                }
              ]
            },
            "functionSelector": "63c6ded3",
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "697:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "716:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "711:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "729:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "724:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:31:0"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "751:0:0"
            },
            "scope": 368,
            "src": "688:387:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 107,
            "name": "StakeFilled",
            "nameLocation": "1112:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakeId",
                  "nameLocation": "1129:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1124:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1146:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1138:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1161:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1153:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1174:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1169:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:58:0"
            },
            "src": "1106:76:0"
          },
          {
            "documentation": {
              "id": 108,
              "nodeType": "StructuredDocumentation",
              "src": "1187:43:0",
              "text": "Stake has already been filled/cancelled"
            },
            "id": 112,
            "name": "StakeNotFillable",
            "nameLocation": "1241:16:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1263:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1258:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:9:0"
            },
            "src": "1235:32:0"
          },
          {
            "documentation": {
              "id": 113,
              "nodeType": "StructuredDocumentation",
              "src": "1272:29:0",
              "text": "You cannot stake yourself"
            },
            "id": 121,
            "name": "StakingSelf",
            "nameLocation": "1312:11:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1329:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1324:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1341:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1333:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1356:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1348:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1323:40:0"
            },
            "src": "1306:58:0"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "1419:641:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 128,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "1445:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 127,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "1437:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1437:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1450:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1429:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:59:0"
                },
                {
                  "assignments": [
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "1516:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1503:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 134,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 133,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "1503:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "1503:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "baseExpression": {
                      "id": 136,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1524:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 138,
                    "indexExpression": {
                      "id": 137,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "1531:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1524:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1503:31:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 140,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1548:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "1548:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 142,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1564:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Requested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1564:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "1548:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 150,
                  "nodeType": "IfStatement",
                  "src": "1544:95:0",
                  "trueBody": {
                    "id": 149,
                    "nodeType": "Block",
                    "src": "1587:52:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 146,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "1625:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 145,
                            "name": "StakeNotFillable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 112,
                            "src": "1608:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1608:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 148,
                        "nodeType": "RevertStatement",
                        "src": "1601:27:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "horse",
                      "nameLocation": "1665:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1649:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1649:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 155,
                  "initialValue": {
                    "expression": {
                      "id": 153,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "1673:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "horse",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20,
                    "src": "1673:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1649:35:0"
                },
                {
                  "assignments": [
                    157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 157,
                      "mutability": "mutable",
                      "name": "backer",
                      "nameLocation": "1710:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1694:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1694:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 160,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1727:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1727:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1719:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 158,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1719:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1694:44:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 164,
                      "name": "horse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "1752:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 165,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "1761:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1752:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 174,
                  "nodeType": "IfStatement",
                  "src": "1748:83:0",
                  "trueBody": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "1769:62:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 168,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "1802:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 169,
                              "name": "horse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "1806:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 170,
                              "name": "backer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "1813:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 167,
                            "name": "StakingSelf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1790:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address) pure"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1790:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 172,
                        "nodeType": "RevertStatement",
                        "src": "1783:37:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 175,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1891:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "1891:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 178,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1906:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Filled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1906:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "1891:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:33:0"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 182,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1934:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "backer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "1934:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 185,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "1949:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1934:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "1934:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 191,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "1980:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "1980:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 188,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1965:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1965:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 196,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2021:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 197,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "2025:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 198,
                        "name": "backer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2032:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 199,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "2040:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2040:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 195,
                      "name": "StakeFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "2009:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "EmitStatement",
                  "src": "2004:49:0"
                }
              ]
            },
            "functionSelector": "a141efea",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeHorse",
            "nameLocation": "1382:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1398:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1393:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1392:9:0"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1419:0:0"
            },
            "scope": 368,
            "src": "1373:687:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 208,
            "name": "StakeCanceled",
            "nameLocation": "2108:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2127:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2122:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2121:9:0"
            },
            "src": "2102:29:0"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "2191:444:0",
              "statements": [
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "2214:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 266,
                      "src": "2201:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 214,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 213,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "2201:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "2201:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 219,
                  "initialValue": {
                    "baseExpression": {
                      "id": 216,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2222:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 218,
                    "indexExpression": {
                      "id": 217,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2229:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2222:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2201:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 221,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2250:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2250:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 223,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "2264:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "2264:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2250:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572206f776e207374616b657321",
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2276:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        },
                        "value": "You can only cancel your own stakes!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2242:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_StakeStatus_$16",
                          "typeString": "enum Staking.StakeStatus"
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 230,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "2333:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2333:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 232,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "2349:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "2349:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "src": "2333:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572207374616b6520696620697420686173206e6f74206265656e2066696c6c656421",
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2371:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        },
                        "value": "You can only cancel your stake if it has not been filled!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        }
                      ],
                      "id": 229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2325:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2325:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:106:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 240,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "2457:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 239,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "2449:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2449:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2462:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2441:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2441:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2441:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 250,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "2532:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2532:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 245,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "2510:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "2510:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2510:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2510:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2510:35:0"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 254,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "2555:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                            "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                          }
                        },
                        "id": 256,
                        "indexExpression": {
                          "id": 255,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2562:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2555:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage",
                          "typeString": "struct Staking.Stake storage ref"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "2555:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 258,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2575:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2575:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "2555:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2555:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 263,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2625:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 262,
                      "name": "StakeCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "2611:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2611:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "EmitStatement",
                  "src": "2606:22:0"
                }
              ]
            },
            "functionSelector": "5f904775",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelStakeAsHorse",
            "nameLocation": "2146:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2170:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "2165:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2164:9:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2191:0:0"
            },
            "scope": 368,
            "src": "2137:498:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "2747:162:0",
              "statements": [
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "2770:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "2757:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 273,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 272,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "2757:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "2757:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 278,
                  "initialValue": {
                    "baseExpression": {
                      "id": 275,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2778:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 277,
                    "indexExpression": {
                      "id": 276,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "2785:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2778:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2757:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 280,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2806:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2806:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 282,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 274,
                            "src": "2820:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "backer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "2820:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2806:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2798:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2798:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "2798:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 289,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "2859:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 288,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "2851:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2851:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2864:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2843:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2843:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "2843:59:0"
                }
              ]
            },
            "functionSelector": "e4995334",
            "id": 295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelStakeAsBacker",
            "nameLocation": "2701:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2726:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2721:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2721:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2720:9:0"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2747:0:0"
            },
            "scope": 368,
            "src": "2692:217:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 299,
            "name": "ProfitsReturned",
            "nameLocation": "2980:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3001:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "2996:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2996:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2995:9:0"
            },
            "src": "2974:31:0"
          },
          {
            "body": {
              "id": 345,
              "nodeType": "Block",
              "src": "3060:325:0",
              "statements": [
                {
                  "assignments": [
                    306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "3083:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 345,
                      "src": "3070:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 305,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 304,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "3070:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "3070:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 310,
                  "initialValue": {
                    "baseExpression": {
                      "id": 307,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3091:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 309,
                    "indexExpression": {
                      "id": 308,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "3098:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3091:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3070:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 313,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "3127:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 312,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "3119:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3119:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3132:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3111:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3111:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "3111:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 319,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "3188:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "horseWon",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "3188:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520686f72736520646f6573206e65656420746f2072657475726e20616e792070726f66697473",
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3204:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62",
                          "typeString": "literal_string \"The horse does need to return any profits\""
                        },
                        "value": "The horse does need to return any profits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee99edeb288c05e30b30070d01481bf03a3790b36eaf2f2244d5b93cb3f27a62",
                          "typeString": "literal_string \"The horse does need to return any profits\""
                        }
                      ],
                      "id": 318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3180:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3180:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3180:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 329,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "3280:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "profit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "3280:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 324,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "3258:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "3258:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3258:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3258:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "3258:35:0"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 333,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "3303:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                            "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                          }
                        },
                        "id": 335,
                        "indexExpression": {
                          "id": 334,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "3310:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3303:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage",
                          "typeString": "struct Staking.Stake storage ref"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "3303:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 337,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3323:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "3323:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "3303:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "3303:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 342,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "3375:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 341,
                      "name": "ProfitsReturned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "3359:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "EmitStatement",
                  "src": "3354:24:0"
                }
              ]
            },
            "functionSelector": "0be3721d",
            "id": 346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnProfits",
            "nameLocation": "3020:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3039:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "3034:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3034:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3033:9:0"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3060:0:0"
            },
            "scope": 368,
            "src": "3011:374:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "3441:107:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 353,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "3454:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3459:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3454:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 356,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "3464:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 357,
                        "name": "requestCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "3470:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3464:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3454:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 363,
                  "nodeType": "IfStatement",
                  "src": "3451:70:0",
                  "trueBody": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "3484:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3505:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 352,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "3498:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3537:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 352,
                  "id": 365,
                  "nodeType": "Return",
                  "src": "3530:11:0"
                }
              ]
            },
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validId",
            "nameLocation": "3400:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3413:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "3408:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3407:9:0"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "3435:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3434:6:0"
            },
            "scope": 368,
            "src": "3391:157:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 369,
        "src": "25:3526:0",
        "usedErrors": [
          45,
          112,
          121
        ]
      }
    ],
    "src": "0:3551:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4F2d6C492A8a4b4B29993168152ee9Cb957e0339",
      "transactionHash": "0xa0870f58e5e966230b5cb252384bdc9a0305b0763e15c1479582c57d2ca08f5c"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-21T11:24:13.367Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidProfitShare(uint256)": [
        {
          "notice": "Profit share must be between 0 and 100"
        }
      ],
      "StakeNotFillable(uint256)": [
        {
          "notice": "Stake has already been filled/cancelled"
        }
      ],
      "StakingSelf(uint256,address,address)": [
        {
          "notice": "You cannot stake yourself"
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}