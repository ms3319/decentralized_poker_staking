{
  "contractName": "Staking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "profitShare",
          "type": "uint256"
        }
      ],
      "name": "InvalidProfitShare",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "StakeNotFillable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "horse",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "backer",
          "type": "address"
        }
      ],
      "name": "StakingSelf",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "backerReturns",
          "type": "uint256"
        }
      ],
      "name": "ProfitsReturned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "StakeCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "horse",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "backer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "horse",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeRequested",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "requestCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "horse",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "backer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profitShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "internalType": "enum Staking.StakeStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "horseWon",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "horse",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "backer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "profitShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            },
            {
              "internalType": "enum Staking.StakeStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "horseWon",
              "type": "bool"
            }
          ],
          "internalType": "struct Staking.Stake",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profitShare",
          "type": "uint256"
        }
      ],
      "name": "createRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "stakeHorse",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "cancelStakeAsHorse",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "name": "returnProfits",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"}],\"name\":\"InvalidProfitShare\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"StakeNotFillable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"horse\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"}],\"name\":\"StakingSelf\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"backerReturns\",\"type\":\"uint256\"}],\"name\":\"ProfitsReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"StakeCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"horse\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"horse\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeRequested\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancelStakeAsHorse\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"}],\"name\":\"createRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"horse\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"backer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakeStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"horseWon\",\"type\":\"bool\"}],\"internalType\":\"struct Staking.Stake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"returnProfits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"stakeHorse\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"horse\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"backer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakeStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"horseWon\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidProfitShare(uint256)\":[{\"notice\":\"Profit share must be between 0 and 100\"}],\"StakeNotFillable(uint256)\":[{\"notice\":\"Stake has already been filled/cancelled\"}],\"StakingSelf(uint256,address,address)\":[{\"notice\":\"You cannot stake yourself\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Staking.sol\":{\"keccak256\":\"0x2700167447cc30b97a1de404ed990f6015bc777107c0c45b6fcca8389d95da98\",\"urls\":[\"bzz-raw://72f37cee9a287b28f7d24eba1468a91a08fc8feb5b964f49f7eaf7c5a0b46479\",\"dweb:/ipfs/QmXeNVT7RM4iwiDsLxZ7AXsKQc8adFPhfVjVmSpZyfNUJy\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805534801561001457600080fd5b50611ddc806100246000396000f3fe6080604052600436106100705760003560e01c8063a141efea1161004e578063a141efea146100e5578063a274425014610101578063ce325bf81461011d578063d5a44f861461015a57610070565b80635badbe4c146100755780635f904775146100a057806363c6ded3146100bc575b600080fd5b34801561008157600080fd5b5061008a61019e565b604051610097919061144f565b60405180910390f35b6100ba60048036038101906100b5919061149b565b6101a4565b005b3480156100c857600080fd5b506100e360048036038101906100de91906114c8565b6105ee565b005b6100ff60048036038101906100fa919061149b565b610825565b005b61011b600480360381019061011691906114c8565b610cc2565b005b34801561012957600080fd5b50610144600480360381019061013f919061149b565b611145565b604051610151919061168c565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c919061149b565b6112e5565b6040516101959897969594939291906116d5565b60405180910390f35b60005481565b6101ad81611387565b6101ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e3906117d6565b60405180910390fd5b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600581111561030657610305611558565b5b600581111561031857610317611558565b5b81526020016006820160019054906101000a900460ff1615151515815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a290611868565b60405180910390fd5b600060058111156103bf576103be611558565b5b8160c0015160058111156103d6576103d5611558565b5b14610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d906118fa565b60405180910390fd5b806040015173ffffffffffffffffffffffffffffffffffffffff166108fc82606001519081150290604051600060405180830381858888f19350505050158015610464573d6000803e3d6000fd5b5060038160c00190600581111561047e5761047d611558565b5b9081600581111561049257610491611558565b5b8152505080600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600581111561058b5761058a611558565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507f228683e8c8f1f5c38d2eae8f5b8e5ef47a084a41ffc5de8b9b38164870c0009f826040516105e2919061144f565b60405180910390a15050565b606481111561063457806040517f7a59383600000000000000000000000000000000000000000000000000000000815260040161062b919061144f565b60405180910390fd5b60405180610100016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200160008152602001600060058111156106a8576106a7611558565b5b81526020016000151581525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360058111156107a9576107a8611558565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050506000808154809291906107e390611949565b91905055507f49cee4f5002995b36067cf0f209184d84f0b3cc2eb9e0bd67dbde672694beb8233836040516108199291906119b3565b60405180910390a15050565b61082e81611387565b61086d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610864906117d6565b60405180910390fd5b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600581111561098757610986611558565b5b600581111561099957610998611558565b5b81526020016006820160019054906101000a900460ff1615151515815250509050600060058111156109ce576109cd611558565b5b8160c0015160058111156109e5576109e4611558565b5b14610a2757816040517f63d82b43000000000000000000000000000000000000000000000000000000008152600401610a1e919061144f565b60405180910390fd5b60008160200151905060003390508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aaa578382826040517fb6ccca7f000000000000000000000000000000000000000000000000000000008152600401610aa193929190611a3b565b60405180910390fd5b60018360c001906005811115610ac357610ac2611558565b5b90816005811115610ad757610ad6611558565b5b8152505080836040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166108fc84606001519081150290604051600060405180830381858888f19350505050158015610b5d573d6000803e3d6000fd5b5082600160008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836005811115610c5357610c52611558565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507fab1ccc3ac4f271f2e437d159236c5ceed2978a1949de79df70cf17069bac8e208483838660600151604051610cb49493929190611a72565b60405180910390a150505050565b610ccb82611387565b610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d01906117d6565b60405180910390fd5b60006001600084815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166005811115610e2457610e23611558565b5b6005811115610e3657610e35611558565b5b81526020016006820160019054906101000a900460ff1615151515815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ec9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec090611b29565b60405180910390fd5b60016005811115610edd57610edc611558565b5b8160c001516005811115610ef457610ef3611558565b5b14610f34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2b90611be1565b60405180910390fd5b818160a0018181525050600060648260800151610f519190611c30565b83610f5c9190611c61565b8260600151610f6b9190611cbb565b9050816040015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610fb7573d6000803e3d6000fd5b5060058260c001906005811115610fd157610fd0611558565b5b90816005811115610fe557610fe4611558565b5b8152505081600160008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360058111156110de576110dd611558565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507f120c71dc5e7cec3dab59d0ac108c8fcf42b7789d60d79cadf046b35476c321b98482604051611137929190611d11565b60405180910390a150505050565b61114d6113b1565b61115682611387565b611195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118c90611d86565b60405180910390fd5b6001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660058111156112ad576112ac611558565b5b60058111156112bf576112be611558565b5b81526020016006820160019054906101000a900460ff1615151515815250509050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b60008082108061139957506000548210155b156113a757600090506113ac565b600190505b919050565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000600581111561142757611426611558565b5b81526020016000151581525090565b6000819050919050565b61144981611436565b82525050565b60006020820190506114646000830184611440565b92915050565b600080fd5b61147881611436565b811461148357600080fd5b50565b6000813590506114958161146f565b92915050565b6000602082840312156114b1576114b061146a565b5b60006114bf84828501611486565b91505092915050565b600080604083850312156114df576114de61146a565b5b60006114ed85828601611486565b92505060206114fe85828601611486565b9150509250929050565b61151181611436565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061154282611517565b9050919050565b61155281611537565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061159857611597611558565b5b50565b60008190506115a982611587565b919050565b60006115b98261159b565b9050919050565b6115c9816115ae565b82525050565b60008115159050919050565b6115e4816115cf565b82525050565b610100820160008201516116016000850182611508565b5060208201516116146020850182611549565b5060408201516116276040850182611549565b50606082015161163a6060850182611508565b50608082015161164d6080850182611508565b5060a082015161166060a0850182611508565b5060c082015161167360c08501826115c0565b5060e082015161168660e08501826115db565b50505050565b6000610100820190506116a260008301846115ea565b92915050565b6116b181611537565b82525050565b6116c0816115ae565b82525050565b6116cf816115cf565b82525050565b6000610100820190506116eb600083018b611440565b6116f8602083018a6116a8565b61170560408301896116a8565b6117126060830188611440565b61171f6080830187611440565b61172c60a0830186611440565b61173960c08301856116b7565b61174660e08301846116c6565b9998505050505050505050565b600082825260208201905092915050565b7f54686973206973206e6f7420612076616c696420494420666f7220612073746160008201527f6b65210000000000000000000000000000000000000000000000000000000000602082015250565b60006117c0602383611753565b91506117cb82611764565b604082019050919050565b600060208201905081810360008301526117ef816117b3565b9050919050565b7f596f752063616e206f6e6c792063616e63656c20796f7572206f776e2073746160008201527f6b65732100000000000000000000000000000000000000000000000000000000602082015250565b6000611852602483611753565b915061185d826117f6565b604082019050919050565b6000602082019050818103600083015261188181611845565b9050919050565b7f596f752063616e206f6e6c792063616e63656c20796f7572207374616b65206960008201527f6620697420686173206e6f74206265656e2066696c6c65642100000000000000602082015250565b60006118e4603983611753565b91506118ef82611888565b604082019050919050565b60006020820190508181036000830152611913816118d7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061195482611436565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119875761198661191a565b5b600182019050919050565b600061199d82611517565b9050919050565b6119ad81611992565b82525050565b60006040820190506119c860008301856119a4565b6119d56020830184611440565b9392505050565b6000819050919050565b6000611a016119fc6119f784611517565b6119dc565b611517565b9050919050565b6000611a13826119e6565b9050919050565b6000611a2582611a08565b9050919050565b611a3581611a1a565b82525050565b6000606082019050611a506000830186611440565b611a5d6020830185611a2c565b611a6a6040830184611a2c565b949350505050565b6000608082019050611a876000830187611440565b611a946020830186611a2c565b611aa16040830185611a2c565b611aae6060830184611440565b95945050505050565b7f4f6e6c792074686520686f7273652063616e2072657475726e2070726f66697460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b13602183611753565b9150611b1e82611ab7565b604082019050919050565b60006020820190508181036000830152611b4281611b06565b9050919050565b7f43616e206f6e6c792072657475726e2070726f66697473206f6e20612073746160008201527f6b65207468617420686173206265656e2066696c6c656420616e6420706c617960208201527f65642e0000000000000000000000000000000000000000000000000000000000604082015250565b6000611bcb604383611753565b9150611bd682611b49565b606082019050919050565b60006020820190508181036000830152611bfa81611bbe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c3b82611436565b9150611c4683611436565b925082611c5657611c55611c01565b5b828204905092915050565b6000611c6c82611436565b9150611c7783611436565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611cb057611caf61191a565b5b828202905092915050565b6000611cc682611436565b9150611cd183611436565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d0657611d0561191a565b5b828201905092915050565b6000604082019050611d266000830185611440565b611d336020830184611440565b9392505050565b7f54686973206973206e6f7420612076616c6964207374616b6520696421000000600082015250565b6000611d70601d83611753565b9150611d7b82611d3a565b602082019050919050565b60006020820190508181036000830152611d9f81611d63565b905091905056fea2646970667358221220fd46e57786c04ec3bae9e794eef63c4238161fa8b36650e2a9e7176e3f3a818464736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063a141efea1161004e578063a141efea146100e5578063a274425014610101578063ce325bf81461011d578063d5a44f861461015a57610070565b80635badbe4c146100755780635f904775146100a057806363c6ded3146100bc575b600080fd5b34801561008157600080fd5b5061008a61019e565b604051610097919061144f565b60405180910390f35b6100ba60048036038101906100b5919061149b565b6101a4565b005b3480156100c857600080fd5b506100e360048036038101906100de91906114c8565b6105ee565b005b6100ff60048036038101906100fa919061149b565b610825565b005b61011b600480360381019061011691906114c8565b610cc2565b005b34801561012957600080fd5b50610144600480360381019061013f919061149b565b611145565b604051610151919061168c565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c919061149b565b6112e5565b6040516101959897969594939291906116d5565b60405180910390f35b60005481565b6101ad81611387565b6101ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e3906117d6565b60405180910390fd5b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600581111561030657610305611558565b5b600581111561031857610317611558565b5b81526020016006820160019054906101000a900460ff1615151515815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a290611868565b60405180910390fd5b600060058111156103bf576103be611558565b5b8160c0015160058111156103d6576103d5611558565b5b14610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d906118fa565b60405180910390fd5b806040015173ffffffffffffffffffffffffffffffffffffffff166108fc82606001519081150290604051600060405180830381858888f19350505050158015610464573d6000803e3d6000fd5b5060038160c00190600581111561047e5761047d611558565b5b9081600581111561049257610491611558565b5b8152505080600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600581111561058b5761058a611558565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507f228683e8c8f1f5c38d2eae8f5b8e5ef47a084a41ffc5de8b9b38164870c0009f826040516105e2919061144f565b60405180910390a15050565b606481111561063457806040517f7a59383600000000000000000000000000000000000000000000000000000000815260040161062b919061144f565b60405180910390fd5b60405180610100016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200160008152602001600060058111156106a8576106a7611558565b5b81526020016000151581525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360058111156107a9576107a8611558565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050506000808154809291906107e390611949565b91905055507f49cee4f5002995b36067cf0f209184d84f0b3cc2eb9e0bd67dbde672694beb8233836040516108199291906119b3565b60405180910390a15050565b61082e81611387565b61086d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610864906117d6565b60405180910390fd5b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600581111561098757610986611558565b5b600581111561099957610998611558565b5b81526020016006820160019054906101000a900460ff1615151515815250509050600060058111156109ce576109cd611558565b5b8160c0015160058111156109e5576109e4611558565b5b14610a2757816040517f63d82b43000000000000000000000000000000000000000000000000000000008152600401610a1e919061144f565b60405180910390fd5b60008160200151905060003390508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aaa578382826040517fb6ccca7f000000000000000000000000000000000000000000000000000000008152600401610aa193929190611a3b565b60405180910390fd5b60018360c001906005811115610ac357610ac2611558565b5b90816005811115610ad757610ad6611558565b5b8152505080836040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166108fc84606001519081150290604051600060405180830381858888f19350505050158015610b5d573d6000803e3d6000fd5b5082600160008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836005811115610c5357610c52611558565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507fab1ccc3ac4f271f2e437d159236c5ceed2978a1949de79df70cf17069bac8e208483838660600151604051610cb49493929190611a72565b60405180910390a150505050565b610ccb82611387565b610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d01906117d6565b60405180910390fd5b60006001600084815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166005811115610e2457610e23611558565b5b6005811115610e3657610e35611558565b5b81526020016006820160019054906101000a900460ff1615151515815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ec9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec090611b29565b60405180910390fd5b60016005811115610edd57610edc611558565b5b8160c001516005811115610ef457610ef3611558565b5b14610f34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2b90611be1565b60405180910390fd5b818160a0018181525050600060648260800151610f519190611c30565b83610f5c9190611c61565b8260600151610f6b9190611cbb565b9050816040015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610fb7573d6000803e3d6000fd5b5060058260c001906005811115610fd157610fd0611558565b5b90816005811115610fe557610fe4611558565b5b8152505081600160008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360058111156110de576110dd611558565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507f120c71dc5e7cec3dab59d0ac108c8fcf42b7789d60d79cadf046b35476c321b98482604051611137929190611d11565b60405180910390a150505050565b61114d6113b1565b61115682611387565b611195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118c90611d86565b60405180910390fd5b6001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660058111156112ad576112ac611558565b5b60058111156112bf576112be611558565b5b81526020016006820160019054906101000a900460ff1615151515815250509050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b60008082108061139957506000548210155b156113a757600090506113ac565b600190505b919050565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000600581111561142757611426611558565b5b81526020016000151581525090565b6000819050919050565b61144981611436565b82525050565b60006020820190506114646000830184611440565b92915050565b600080fd5b61147881611436565b811461148357600080fd5b50565b6000813590506114958161146f565b92915050565b6000602082840312156114b1576114b061146a565b5b60006114bf84828501611486565b91505092915050565b600080604083850312156114df576114de61146a565b5b60006114ed85828601611486565b92505060206114fe85828601611486565b9150509250929050565b61151181611436565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061154282611517565b9050919050565b61155281611537565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061159857611597611558565b5b50565b60008190506115a982611587565b919050565b60006115b98261159b565b9050919050565b6115c9816115ae565b82525050565b60008115159050919050565b6115e4816115cf565b82525050565b610100820160008201516116016000850182611508565b5060208201516116146020850182611549565b5060408201516116276040850182611549565b50606082015161163a6060850182611508565b50608082015161164d6080850182611508565b5060a082015161166060a0850182611508565b5060c082015161167360c08501826115c0565b5060e082015161168660e08501826115db565b50505050565b6000610100820190506116a260008301846115ea565b92915050565b6116b181611537565b82525050565b6116c0816115ae565b82525050565b6116cf816115cf565b82525050565b6000610100820190506116eb600083018b611440565b6116f8602083018a6116a8565b61170560408301896116a8565b6117126060830188611440565b61171f6080830187611440565b61172c60a0830186611440565b61173960c08301856116b7565b61174660e08301846116c6565b9998505050505050505050565b600082825260208201905092915050565b7f54686973206973206e6f7420612076616c696420494420666f7220612073746160008201527f6b65210000000000000000000000000000000000000000000000000000000000602082015250565b60006117c0602383611753565b91506117cb82611764565b604082019050919050565b600060208201905081810360008301526117ef816117b3565b9050919050565b7f596f752063616e206f6e6c792063616e63656c20796f7572206f776e2073746160008201527f6b65732100000000000000000000000000000000000000000000000000000000602082015250565b6000611852602483611753565b915061185d826117f6565b604082019050919050565b6000602082019050818103600083015261188181611845565b9050919050565b7f596f752063616e206f6e6c792063616e63656c20796f7572207374616b65206960008201527f6620697420686173206e6f74206265656e2066696c6c65642100000000000000602082015250565b60006118e4603983611753565b91506118ef82611888565b604082019050919050565b60006020820190508181036000830152611913816118d7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061195482611436565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119875761198661191a565b5b600182019050919050565b600061199d82611517565b9050919050565b6119ad81611992565b82525050565b60006040820190506119c860008301856119a4565b6119d56020830184611440565b9392505050565b6000819050919050565b6000611a016119fc6119f784611517565b6119dc565b611517565b9050919050565b6000611a13826119e6565b9050919050565b6000611a2582611a08565b9050919050565b611a3581611a1a565b82525050565b6000606082019050611a506000830186611440565b611a5d6020830185611a2c565b611a6a6040830184611a2c565b949350505050565b6000608082019050611a876000830187611440565b611a946020830186611a2c565b611aa16040830185611a2c565b611aae6060830184611440565b95945050505050565b7f4f6e6c792074686520686f7273652063616e2072657475726e2070726f66697460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b13602183611753565b9150611b1e82611ab7565b604082019050919050565b60006020820190508181036000830152611b4281611b06565b9050919050565b7f43616e206f6e6c792072657475726e2070726f66697473206f6e20612073746160008201527f6b65207468617420686173206265656e2066696c6c656420616e6420706c617960208201527f65642e0000000000000000000000000000000000000000000000000000000000604082015250565b6000611bcb604383611753565b9150611bd682611b49565b606082019050919050565b60006020820190508181036000830152611bfa81611bbe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c3b82611436565b9150611c4683611436565b925082611c5657611c55611c01565b5b828204905092915050565b6000611c6c82611436565b9150611c7783611436565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611cb057611caf61191a565b5b828202905092915050565b6000611cc682611436565b9150611cd183611436565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d0657611d0561191a565b5b828201905092915050565b6000604082019050611d266000830185611440565b611d336020830184611440565b9392505050565b7f54686973206973206e6f7420612076616c6964207374616b6520696421000000600082015250565b6000611d70601d83611753565b9150611d7b82611d3a565b602082019050919050565b60006020820190508181036000830152611d9f81611d63565b905091905056fea2646970667358221220fd46e57786c04ec3bae9e794eef63c4238161fa8b36650e2a9e7176e3f3a818464736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:17227:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:1",
                "type": ""
              }
            ],
            "src": "7:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:1",
                "type": ""
              }
            ],
            "src": "90:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:1",
                "type": ""
              }
            ],
            "src": "214:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:1",
                "type": ""
              }
            ],
            "src": "442:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:1",
                "type": ""
              }
            ],
            "src": "769:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:1",
                "type": ""
              }
            ],
            "src": "897:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1154:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1156:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1156:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1156:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1129:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1118:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1247:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1262:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1291:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1326:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1337:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1346:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1301:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1291:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:1",
                "type": ""
              }
            ],
            "src": "1042:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1460:391:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1506:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1508:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1508:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1508:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1481:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1490:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1477:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1477:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1502:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1473:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1470:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1599:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1614:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1628:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1618:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1643:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1678:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1689:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1674:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1674:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1698:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1653:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1643:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1726:118:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1741:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1755:2:1",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1745:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1771:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1806:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1817:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1802:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1802:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1826:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1781:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1771:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1422:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1433:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1445:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1453:6:1",
                "type": ""
              }
            ],
            "src": "1377:474:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1912:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1929:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1952:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1934:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1934:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1922:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1922:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1900:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1907:3:1",
                "type": ""
              }
            ],
            "src": "1857:108:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2016:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2026:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2041:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2048:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2037:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2037:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2026:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1998:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2008:7:1",
                "type": ""
              }
            ],
            "src": "1971:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2156:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2166:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2195:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2177:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2177:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2166:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2138:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2148:7:1",
                "type": ""
              }
            ],
            "src": "2103:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2284:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2301:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2332:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2306:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2306:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2294:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2294:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2272:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2279:3:1",
                "type": ""
              }
            ],
            "src": "2213:132:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2379:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2396:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2399:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2389:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2389:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2389:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2493:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2496:4:1",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2486:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2486:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2486:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2517:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2520:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2510:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2510:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2510:15:1"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2351:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2594:62:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2628:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "2630:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2630:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2630:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2617:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2624:1:1",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2614:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2614:12:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2607:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2607:20:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2604:46:1"
                }
              ]
            },
            "name": "validator_assert_t_enum$_StakeStatus_$16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2587:5:1",
                "type": ""
              }
            ],
            "src": "2537:119:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2721:80:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2731:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2742:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2731:7:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2789:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_StakeStatus_$16",
                      "nodeType": "YulIdentifier",
                      "src": "2748:40:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2748:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2748:47:1"
                }
              ]
            },
            "name": "cleanup_t_enum$_StakeStatus_$16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2703:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2713:7:1",
                "type": ""
              }
            ],
            "src": "2662:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2879:67:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2889:51:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2934:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_StakeStatus_$16",
                      "nodeType": "YulIdentifier",
                      "src": "2902:31:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2902:38:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2889:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_StakeStatus_$16_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2859:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2869:9:1",
                "type": ""
              }
            ],
            "src": "2807:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3019:78:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3036:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3084:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_StakeStatus_$16_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3041:42:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3041:49:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3029:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3029:62:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3029:62:1"
                }
              ]
            },
            "name": "abi_encode_t_enum$_StakeStatus_$16_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3007:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3014:3:1",
                "type": ""
              }
            ],
            "src": "2952:145:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3145:48:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3155:32:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3180:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3173:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3173:13:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3166:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3166:21:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3155:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3127:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3137:7:1",
                "type": ""
              }
            ],
            "src": "3103:90:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3248:50:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3265:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3285:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3270:14:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3270:21:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3258:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3258:34:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3258:34:1"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3236:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3243:3:1",
                "type": ""
              }
            ],
            "src": "3199:99:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3464:1493:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3474:28:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3490:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3495:6:1",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3486:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3486:16:1"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "3478:4:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3512:162:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3545:43:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3575:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3582:4:1",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3571:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3571:16:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3565:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3565:23:1"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3549:12:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3635:12:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3653:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3658:4:1",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3649:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3649:14:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3601:33:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3601:63:1"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3601:63:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3684:181:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3720:43:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3750:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3757:4:1",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3746:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3746:16:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3740:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3740:23:1"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3724:12:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3826:12:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3844:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3849:4:1",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3840:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3840:14:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_payable_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3776:49:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3776:79:1"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3776:79:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3875:182:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3912:43:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3942:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3949:4:1",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3938:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3938:16:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3932:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3932:23:1"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3916:12:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4018:12:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4036:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4041:4:1",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4032:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4032:14:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_payable_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3968:49:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3968:79:1"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3968:79:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4067:166:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4104:43:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4134:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4141:4:1",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4130:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4130:16:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4124:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4124:23:1"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4108:12:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4194:12:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4212:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4217:4:1",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4208:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4208:14:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4160:33:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4160:63:1"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4160:63:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4243:171:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4285:43:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4315:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4322:4:1",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4311:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4311:16:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4305:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4305:23:1"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4289:12:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4375:12:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4393:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4398:4:1",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4389:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4389:14:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4341:33:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4341:63:1"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4341:63:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4424:166:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4461:43:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4491:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4498:4:1",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4487:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4487:16:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4481:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4481:23:1"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4465:12:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4551:12:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4569:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4574:4:1",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4565:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4565:14:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4517:33:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4517:63:1"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4517:63:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4600:178:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4637:43:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4667:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4674:4:1",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4663:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4663:16:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4657:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4657:23:1"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4641:12:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4739:12:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4757:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4762:4:1",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4753:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4753:14:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_enum$_StakeStatus_$16_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "4693:45:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4693:75:1"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4693:75:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4788:162:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4827:43:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4857:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4864:4:1",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4853:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4853:16:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4847:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4847:23:1"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4831:12:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4911:12:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4929:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4934:4:1",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4925:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4925:14:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4883:27:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4883:57:1"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4883:57:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Stake_$34_memory_ptr_to_t_struct$_Stake_$34_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3451:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3458:3:1",
                "type": ""
              }
            ],
            "src": "3356:1601:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5103:167:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5113:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5125:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5136:3:1",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5121:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5121:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5113:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5236:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5249:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5260:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5245:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5245:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Stake_$34_memory_ptr_to_t_struct$_Stake_$34_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5150:85:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5150:113:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5150:113:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Stake_$34_memory_ptr__to_t_struct$_Stake_$34_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5075:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5087:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5098:4:1",
                "type": ""
              }
            ],
            "src": "4963:307:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5357:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5374:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5405:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "5379:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5379:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5367:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5367:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5367:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5345:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5352:3:1",
                "type": ""
              }
            ],
            "src": "5276:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5501:78:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5518:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5566:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_StakeStatus_$16_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "5523:42:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5523:49:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5511:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5511:62:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5511:62:1"
                }
              ]
            },
            "name": "abi_encode_t_enum$_StakeStatus_$16_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5489:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5496:3:1",
                "type": ""
              }
            ],
            "src": "5424:155:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5644:50:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5661:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5681:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5666:14:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5666:21:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5654:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5654:34:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5654:34:1"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5632:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5639:3:1",
                "type": ""
              }
            ],
            "src": "5585:109:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6032:741:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6042:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6054:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6065:3:1",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6050:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6050:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6042:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6123:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6136:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6147:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6132:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6132:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6079:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6079:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6079:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6220:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6233:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6244:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6229:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6229:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6160:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6160:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6160:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6318:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6331:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6342:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6327:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6327:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6258:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6258:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6258:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6400:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6413:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6424:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6409:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6409:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6356:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6356:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6356:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "6482:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6495:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6506:3:1",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6491:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6491:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6438:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6438:73:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6438:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "6565:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6578:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6589:3:1",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6574:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6574:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6521:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6521:73:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6521:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "6660:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6673:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6684:3:1",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6669:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6669:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_StakeStatus_$16_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6604:55:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6604:85:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6604:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "6737:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6750:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6761:3:1",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6746:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6746:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6699:37:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6699:67:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6699:67:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_enum$_StakeStatus_$16_t_bool__to_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5948:9:1",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "5960:6:1",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "5968:6:1",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "5976:6:1",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5984:6:1",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5992:6:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6000:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6008:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6016:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6027:4:1",
                "type": ""
              }
            ],
            "src": "5700:1073:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6875:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6892:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6897:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6885:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6885:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6885:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6913:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6932:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6937:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6928:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6928:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6913:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6847:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6852:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6863:11:1",
                "type": ""
              }
            ],
            "src": "6779:169:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7060:116:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7082:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7090:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7078:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7078:14:1"
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f72206120737461",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7094:34:1",
                        "type": "",
                        "value": "This is not a valid ID for a sta"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7071:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7071:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7071:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7150:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7158:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7146:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7146:15:1"
                      },
                      {
                        "hexValue": "6b6521",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7163:5:1",
                        "type": "",
                        "value": "ke!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7139:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7139:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7139:30:1"
                }
              ]
            },
            "name": "store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7052:6:1",
                "type": ""
              }
            ],
            "src": "6954:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7328:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7338:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7404:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7409:2:1",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7345:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7345:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7338:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7510:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                      "nodeType": "YulIdentifier",
                      "src": "7421:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7421:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7421:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7523:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7534:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7539:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7530:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7530:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7523:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7316:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7324:3:1",
                "type": ""
              }
            ],
            "src": "7182:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7725:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7735:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7747:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7758:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7743:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7743:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7735:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7782:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7793:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7778:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7778:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7801:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7807:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7797:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7797:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7771:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7771:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7771:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7827:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7961:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7835:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7835:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7827:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7705:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7720:4:1",
                "type": ""
              }
            ],
            "src": "7554:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8085:117:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8107:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8115:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8103:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8103:14:1"
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572206f776e20737461",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8119:34:1",
                        "type": "",
                        "value": "You can only cancel your own sta"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8096:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8096:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8096:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8175:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8183:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8171:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8171:15:1"
                      },
                      {
                        "hexValue": "6b657321",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8188:6:1",
                        "type": "",
                        "value": "kes!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8164:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8164:31:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8164:31:1"
                }
              ]
            },
            "name": "store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8077:6:1",
                "type": ""
              }
            ],
            "src": "7979:223:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8354:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8364:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8430:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8435:2:1",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8371:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8371:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8364:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8536:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                      "nodeType": "YulIdentifier",
                      "src": "8447:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8447:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8447:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8549:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8560:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8565:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8556:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8556:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8549:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8342:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8350:3:1",
                "type": ""
              }
            ],
            "src": "8208:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8751:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8761:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8773:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8784:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8769:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8769:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8761:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8808:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8819:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8804:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8804:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8827:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8833:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8823:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8823:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8797:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8797:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8797:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8853:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8987:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8861:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8861:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8853:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8731:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8746:4:1",
                "type": ""
              }
            ],
            "src": "8580:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9111:138:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9133:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9141:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9129:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9129:14:1"
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572207374616b652069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9145:34:1",
                        "type": "",
                        "value": "You can only cancel your stake i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9122:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9122:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9122:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9201:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9209:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9197:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9197:15:1"
                      },
                      {
                        "hexValue": "6620697420686173206e6f74206265656e2066696c6c656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9214:27:1",
                        "type": "",
                        "value": "f it has not been filled!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9190:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9190:52:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9190:52:1"
                }
              ]
            },
            "name": "store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9103:6:1",
                "type": ""
              }
            ],
            "src": "9005:244:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9401:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9411:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9477:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9482:2:1",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9418:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9418:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9411:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9583:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                      "nodeType": "YulIdentifier",
                      "src": "9494:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9494:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9494:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9596:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9607:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9612:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9603:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9603:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9596:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9389:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9397:3:1",
                "type": ""
              }
            ],
            "src": "9255:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9798:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9808:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9820:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9831:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9816:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9816:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9808:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9855:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9866:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9851:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9851:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9874:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9880:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9870:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9870:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9844:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9844:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9844:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9900:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10034:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9908:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9908:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9900:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9778:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9793:4:1",
                "type": ""
              }
            ],
            "src": "9627:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10080:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10097:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10100:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10090:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10090:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10090:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10194:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10197:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10187:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10187:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10218:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10221:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10211:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10211:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10211:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10052:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10281:190:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10291:33:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10318:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10300:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10300:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10291:5:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10414:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10416:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10416:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10416:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10339:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10346:66:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10336:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10336:77:1"
                  },
                  "nodeType": "YulIf",
                  "src": "10333:103:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10445:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10456:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10463:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10452:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10452:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10445:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10267:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10277:3:1",
                "type": ""
              }
            ],
            "src": "10238:233:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10522:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10532:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10561:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "10543:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10543:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10532:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10504:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10514:7:1",
                "type": ""
              }
            ],
            "src": "10477:96:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10644:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10661:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10684:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10666:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10666:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10654:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10654:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10654:37:1"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10632:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10639:3:1",
                "type": ""
              }
            ],
            "src": "10579:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10829:206:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10839:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10851:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10862:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10847:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10847:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10839:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10919:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10932:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10943:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10928:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10928:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10875:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10875:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10875:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11000:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11013:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11024:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11009:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11009:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10956:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10956:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10956:72:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10793:9:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10805:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10813:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10824:4:1",
                "type": ""
              }
            ],
            "src": "10703:332:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11073:28:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11083:12:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11090:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "11083:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11059:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "11069:3:1",
                "type": ""
              }
            ],
            "src": "11041:60:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11167:82:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11177:66:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11235:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "11217:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11217:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "11208:8:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11208:34:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11190:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11190:53:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11177:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11147:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11157:9:1",
                "type": ""
              }
            ],
            "src": "11107:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11315:66:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11325:50:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11369:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11338:30:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11338:37:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11325:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11295:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11305:9:1",
                "type": ""
              }
            ],
            "src": "11255:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11455:66:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11465:50:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11509:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "11478:30:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11478:37:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11465:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11435:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11445:9:1",
                "type": ""
              }
            ],
            "src": "11387:134:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11600:74:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11617:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11661:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "11622:38:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11622:45:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11610:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11610:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11610:58:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11588:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11595:3:1",
                "type": ""
              }
            ],
            "src": "11527:147:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11850:304:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11860:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11872:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11883:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11868:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11868:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11860:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11940:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11953:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11964:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11949:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11949:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11896:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11896:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11896:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12029:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12042:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12053:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12038:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12038:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11977:51:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11977:80:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11977:80:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12119:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12132:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12143:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12128:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12128:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12067:51:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12067:80:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12067:80:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address_payable__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11806:9:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11818:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11826:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11834:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11845:4:1",
                "type": ""
              }
            ],
            "src": "11680:474:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12358:387:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12368:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12380:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12391:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12376:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12376:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12368:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12449:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12462:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12473:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12458:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12458:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12405:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12405:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12405:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12538:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12551:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12562:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12547:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12547:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12486:51:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12486:80:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12486:80:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12628:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12641:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12652:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12637:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12637:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12576:51:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12576:80:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12576:80:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "12710:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12723:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12734:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12719:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12719:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12666:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12666:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12666:72:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12306:9:1",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12318:6:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12326:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12334:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12342:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12353:4:1",
                "type": ""
              }
            ],
            "src": "12160:585:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12857:114:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12879:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12887:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12875:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12875:14:1"
                      },
                      {
                        "hexValue": "4f6e6c792074686520686f7273652063616e2072657475726e2070726f666974",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12891:34:1",
                        "type": "",
                        "value": "Only the horse can return profit"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12868:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12868:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12868:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12947:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12955:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12943:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12943:15:1"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12960:3:1",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12936:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12936:28:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12936:28:1"
                }
              ]
            },
            "name": "store_literal_in_memory_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12849:6:1",
                "type": ""
              }
            ],
            "src": "12751:220:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13123:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13133:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13199:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13204:2:1",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13140:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13140:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13133:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13305:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
                      "nodeType": "YulIdentifier",
                      "src": "13216:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13216:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13216:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13318:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13329:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13334:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13325:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13325:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13318:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13111:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13119:3:1",
                "type": ""
              }
            ],
            "src": "12977:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13520:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13530:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13542:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13553:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13538:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13538:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13530:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13577:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13588:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13573:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13573:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13596:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13602:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13592:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13592:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13566:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13566:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13566:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13622:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13756:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13630:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13630:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13622:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13500:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13515:4:1",
                "type": ""
              }
            ],
            "src": "13349:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13880:185:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13902:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13910:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13898:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13898:14:1"
                      },
                      {
                        "hexValue": "43616e206f6e6c792072657475726e2070726f66697473206f6e206120737461",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13914:34:1",
                        "type": "",
                        "value": "Can only return profits on a sta"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13891:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13891:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13891:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13970:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13978:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13966:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13966:15:1"
                      },
                      {
                        "hexValue": "6b65207468617420686173206265656e2066696c6c656420616e6420706c6179",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13983:34:1",
                        "type": "",
                        "value": "ke that has been filled and play"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13959:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13959:59:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13959:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14039:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14047:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14035:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14035:15:1"
                      },
                      {
                        "hexValue": "65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14052:5:1",
                        "type": "",
                        "value": "ed."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14028:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14028:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14028:30:1"
                }
              ]
            },
            "name": "store_literal_in_memory_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13872:6:1",
                "type": ""
              }
            ],
            "src": "13774:291:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14217:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14227:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14293:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14298:2:1",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14234:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14234:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14227:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14399:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
                      "nodeType": "YulIdentifier",
                      "src": "14310:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14310:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14310:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14412:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14423:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14428:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14419:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14419:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14412:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14205:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14213:3:1",
                "type": ""
              }
            ],
            "src": "14071:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14614:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14624:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14636:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14647:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14632:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14632:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14624:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14671:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14682:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14667:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14667:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14690:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14696:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14686:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14686:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14660:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14660:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14660:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14716:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14850:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14724:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14724:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14716:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14594:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14609:4:1",
                "type": ""
              }
            ],
            "src": "14443:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14896:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14913:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14916:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14906:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14906:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14906:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15010:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15013:4:1",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15003:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15003:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15003:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15034:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15037:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15027:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15027:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15027:15:1"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "14868:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15096:143:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15106:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15129:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15111:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15111:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15106:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15140:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15163:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15145:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15145:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15140:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15187:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "15189:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15189:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15189:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15184:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15177:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15177:9:1"
                  },
                  "nodeType": "YulIf",
                  "src": "15174:35:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15219:14:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15228:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15231:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "15224:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15224:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "15219:1:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15085:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15088:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "15094:1:1",
                "type": ""
              }
            ],
            "src": "15054:185:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15293:300:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15303:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15326:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15308:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15308:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15303:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15337:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15360:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15342:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15342:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15337:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15535:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15537:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15537:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15537:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "15447:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "15440:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15440:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15433:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15433:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15455:1:1"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15462:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "15530:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "15458:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15458:74:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "15452:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15452:81:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15429:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15429:105:1"
                  },
                  "nodeType": "YulIf",
                  "src": "15426:131:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15567:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15582:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15585:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "15578:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15578:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "15567:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15276:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15279:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "15285:7:1",
                "type": ""
              }
            ],
            "src": "15245:348:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15643:261:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15653:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15676:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15658:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15658:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15653:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15687:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15710:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15692:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15692:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15687:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15850:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15852:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15852:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15852:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15771:1:1"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15778:66:1",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15846:1:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15774:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15774:74:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15768:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15768:81:1"
                  },
                  "nodeType": "YulIf",
                  "src": "15765:107:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15882:16:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15893:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15896:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15889:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15889:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "15882:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15630:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15633:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "15639:3:1",
                "type": ""
              }
            ],
            "src": "15599:305:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16036:206:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16046:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16058:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16069:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16054:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16054:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16046:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16126:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16139:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16150:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16135:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16135:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16082:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16082:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16082:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16207:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16220:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16231:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16216:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16216:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16163:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16163:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16163:72:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16000:9:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16012:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16020:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16031:4:1",
                "type": ""
              }
            ],
            "src": "15910:332:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16354:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16376:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16384:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16372:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16372:14:1"
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c6964207374616b6520696421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16388:31:1",
                        "type": "",
                        "value": "This is not a valid stake id!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16365:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16365:55:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16365:55:1"
                }
              ]
            },
            "name": "store_literal_in_memory_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16346:6:1",
                "type": ""
              }
            ],
            "src": "16248:179:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16579:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16589:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16655:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16660:2:1",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16596:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16596:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16589:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16761:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
                      "nodeType": "YulIdentifier",
                      "src": "16672:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16672:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16672:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16774:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16785:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16790:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16781:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16781:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16774:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16567:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16575:3:1",
                "type": ""
              }
            ],
            "src": "16433:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16976:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16986:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16998:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17009:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16994:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16994:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16986:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17033:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17044:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17029:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17029:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17052:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17058:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17048:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17048:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17022:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17022:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17022:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17078:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17212:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17086:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17086:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17078:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16956:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16971:4:1",
                "type": ""
              }
            ],
            "src": "16805:419:1"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_StakeStatus_$16(value) {\n        if iszero(lt(value, 6)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_StakeStatus_$16(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_StakeStatus_$16(value)\n    }\n\n    function convert_t_enum$_StakeStatus_$16_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_StakeStatus_$16(value)\n    }\n\n    function abi_encode_t_enum$_StakeStatus_$16_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_StakeStatus_$16_to_t_uint8(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Staking.Stake -> struct Staking.Stake\n    function abi_encode_t_struct$_Stake_$34_memory_ptr_to_t_struct$_Stake_$34_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // horse\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // backer\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // profitShare\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // profit\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // status\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_enum$_StakeStatus_$16_to_t_uint8(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // horseWon\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Stake_$34_memory_ptr__to_t_struct$_Stake_$34_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_Stake_$34_memory_ptr_to_t_struct$_Stake_$34_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_enum$_StakeStatus_$16_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_StakeStatus_$16_to_t_uint8(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_enum$_StakeStatus_$16_t_bool__to_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_enum$_StakeStatus_$16_to_t_uint8_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84(memPtr) {\n\n        mstore(add(memPtr, 0), \"This is not a valid ID for a sta\")\n\n        mstore(add(memPtr, 32), \"ke!\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only cancel your own sta\")\n\n        mstore(add(memPtr, 32), \"kes!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only cancel your stake i\")\n\n        mstore(add(memPtr, 32), \"f it has not been filled!\")\n\n    }\n\n    function abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address_payable__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the horse can return profit\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can only return profits on a sta\")\n\n        mstore(add(memPtr, 32), \"ke that has been filled and play\")\n\n        mstore(add(memPtr, 64), \"ed.\")\n\n    }\n\n    function abi_encode_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 67)\n        store_literal_in_memory_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c(memPtr) {\n\n        mstore(add(memPtr, 0), \"This is not a valid stake id!\")\n\n    }\n\n    function abi_encode_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "25:4259:0:-:0;;;75:1;48:28;;25:4259;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "25:4259:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:526;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;888:387;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1573:715;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3352:761;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;532:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;82:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;48:28;;;;:::o;2365:526::-;2437:11;2445:2;2437:7;:11::i;:::-;2429:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2498:18;2519:6;:10;2526:2;2519:10;;;;;;;;;;;2498:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2562:5;:11;;;2548:25;;:10;:25;;;2540:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2648:21;2632:37;;;;;;;;:::i;:::-;;:5;:12;;;:37;;;;;;;;:::i;:::-;;;2624:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;2742:5;:12;;;:21;;:35;2764:5;:12;;;2742:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2802:21;2787:5;:12;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;2847:5;2834:6;:10;2841:2;2834:10;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2867:17;2881:2;2867:17;;;;;;:::i;:::-;;;;;;;;2419:472;2365:526;:::o;888:387::-;979:3;965:11;:17;961:86;;;1024:11;1005:31;;;;;;;;;;;:::i;:::-;;;;;;;;961:86;1080:114;;;;;;;;1086:12;;1080:114;;;;1108:10;1080:114;;;;;;1137:1;1080:114;;;;;;1142:6;1080:114;;;;1150:11;1080:114;;;;1163:1;1080:114;;;;1166:21;1080:114;;;;;;;;:::i;:::-;;;;;;1188:5;1080:114;;;;;1057:6;:20;1064:12;;1057:20;;;;;;;;;;;:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:12;;:14;;;;;;;;;:::i;:::-;;;;;;1234:34;1249:10;1261:6;1234:34;;;;;;;:::i;:::-;;;;;;;;888:387;;:::o;1573:715::-;1637:11;1645:2;1637:7;:11::i;:::-;1629:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1703:18;1724:6;:10;1731:2;1724:10;;;;;;;;;;;1703:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:21;1748:37;;;;;;;;:::i;:::-;;:5;:12;;;:37;;;;;;;;:::i;:::-;;;1744:95;;1825:2;1808:20;;;;;;;;;;;:::i;:::-;;;;;;;;1744:95;1849:21;1873:5;:11;;;1849:35;;1894:22;1927:10;1894:44;;1961:6;1952:15;;:5;:15;;;1948:83;;;2002:2;2006:5;2013:6;1990:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;1948:83;2106:18;2091:5;:12;;:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;2149:6;2134:5;:12;;:21;;;;;;;;;;;2165:5;:14;;:28;2180:5;:12;;;2165:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2217:5;2204:6;:10;2211:2;2204:10;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2237:44;2249:2;2253:5;2260:6;2268:5;:12;;;2237:44;;;;;;;;;:::i;:::-;;;;;;;;1619:669;;;1573:715;:::o;3352:761::-;3432:11;3440:2;3432:7;:11::i;:::-;3424:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3493:18;3514:6;:10;3521:2;3514:10;;;;;;;;;;;3493:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3557:5;:11;;;3543:25;;:10;:25;;;3535:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3640:18;3624:34;;;;;;;;:::i;:::-;;:5;:12;;;:34;;;;;;;;:::i;:::-;;;3616:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;3847:6;3832:5;:12;;:21;;;;;3863:18;3930:3;3910:5;:17;;;:23;;;;:::i;:::-;3900:6;:34;;;;:::i;:::-;3884:5;:12;;;:51;;;;:::i;:::-;3863:72;;3946:5;:12;;;:21;;:36;3968:13;3946:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:21;3992:5;:12;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;4052:5;4039:6;:10;4046:2;4039:10;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4072:34;4088:2;4092:13;4072:34;;;;;;;:::i;:::-;;;;;;;;3414:699;;3352:761;;:::o;532:162::-;582:12;;:::i;:::-;614:11;622:2;614:7;:11::i;:::-;606:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;677:6;:10;684:2;677:10;;;;;;;;;;;670:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:162;;;:::o;82:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4119:162::-;4168:4;4192:1;4187:2;:6;:28;;;;4203:12;;4197:2;:18;;4187:28;4184:70;;;4238:5;4231:12;;;;4184:70;4270:4;4263:11;;4119:162;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:474::-;1445:6;1453;1502:2;1490:9;1481:7;1477:23;1473:32;1470:119;;;1508:79;;:::i;:::-;1470:119;1628:1;1653:53;1698:7;1689:6;1678:9;1674:22;1653:53;:::i;:::-;1643:63;;1599:117;1755:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1726:118;1377:474;;;;;:::o;1857:108::-;1934:24;1952:5;1934:24;:::i;:::-;1929:3;1922:37;1857:108;;:::o;1971:126::-;2008:7;2048:42;2041:5;2037:54;2026:65;;1971:126;;;:::o;2103:104::-;2148:7;2177:24;2195:5;2177:24;:::i;:::-;2166:35;;2103:104;;;:::o;2213:132::-;2306:32;2332:5;2306:32;:::i;:::-;2301:3;2294:45;2213:132;;:::o;2351:180::-;2399:77;2396:1;2389:88;2496:4;2493:1;2486:15;2520:4;2517:1;2510:15;2537:119;2624:1;2617:5;2614:12;2604:46;;2630:18;;:::i;:::-;2604:46;2537:119;:::o;2662:139::-;2713:7;2742:5;2731:16;;2748:47;2789:5;2748:47;:::i;:::-;2662:139;;;:::o;2807:::-;2869:9;2902:38;2934:5;2902:38;:::i;:::-;2889:51;;2807:139;;;:::o;2952:145::-;3041:49;3084:5;3041:49;:::i;:::-;3036:3;3029:62;2952:145;;:::o;3103:90::-;3137:7;3180:5;3173:13;3166:21;3155:32;;3103:90;;;:::o;3199:99::-;3270:21;3285:5;3270:21;:::i;:::-;3265:3;3258:34;3199:99;;:::o;3356:1601::-;3495:6;3490:3;3486:16;3582:4;3575:5;3571:16;3565:23;3601:63;3658:4;3653:3;3649:14;3635:12;3601:63;:::i;:::-;3512:162;3757:4;3750:5;3746:16;3740:23;3776:79;3849:4;3844:3;3840:14;3826:12;3776:79;:::i;:::-;3684:181;3949:4;3942:5;3938:16;3932:23;3968:79;4041:4;4036:3;4032:14;4018:12;3968:79;:::i;:::-;3875:182;4141:4;4134:5;4130:16;4124:23;4160:63;4217:4;4212:3;4208:14;4194:12;4160:63;:::i;:::-;4067:166;4322:4;4315:5;4311:16;4305:23;4341:63;4398:4;4393:3;4389:14;4375:12;4341:63;:::i;:::-;4243:171;4498:4;4491:5;4487:16;4481:23;4517:63;4574:4;4569:3;4565:14;4551:12;4517:63;:::i;:::-;4424:166;4674:4;4667:5;4663:16;4657:23;4693:75;4762:4;4757:3;4753:14;4739:12;4693:75;:::i;:::-;4600:178;4864:4;4857:5;4853:16;4847:23;4883:57;4934:4;4929:3;4925:14;4911:12;4883:57;:::i;:::-;4788:162;3464:1493;3356:1601;;:::o;4963:307::-;5098:4;5136:3;5125:9;5121:19;5113:27;;5150:113;5260:1;5249:9;5245:17;5236:6;5150:113;:::i;:::-;4963:307;;;;:::o;5276:142::-;5379:32;5405:5;5379:32;:::i;:::-;5374:3;5367:45;5276:142;;:::o;5424:155::-;5523:49;5566:5;5523:49;:::i;:::-;5518:3;5511:62;5424:155;;:::o;5585:109::-;5666:21;5681:5;5666:21;:::i;:::-;5661:3;5654:34;5585:109;;:::o;5700:1073::-;6027:4;6065:3;6054:9;6050:19;6042:27;;6079:71;6147:1;6136:9;6132:17;6123:6;6079:71;:::i;:::-;6160:88;6244:2;6233:9;6229:18;6220:6;6160:88;:::i;:::-;6258;6342:2;6331:9;6327:18;6318:6;6258:88;:::i;:::-;6356:72;6424:2;6413:9;6409:18;6400:6;6356:72;:::i;:::-;6438:73;6506:3;6495:9;6491:19;6482:6;6438:73;:::i;:::-;6521;6589:3;6578:9;6574:19;6565:6;6521:73;:::i;:::-;6604:85;6684:3;6673:9;6669:19;6660:6;6604:85;:::i;:::-;6699:67;6761:3;6750:9;6746:19;6737:6;6699:67;:::i;:::-;5700:1073;;;;;;;;;;;:::o;6779:169::-;6863:11;6897:6;6892:3;6885:19;6937:4;6932:3;6928:14;6913:29;;6779:169;;;;:::o;6954:222::-;7094:34;7090:1;7082:6;7078:14;7071:58;7163:5;7158:2;7150:6;7146:15;7139:30;6954:222;:::o;7182:366::-;7324:3;7345:67;7409:2;7404:3;7345:67;:::i;:::-;7338:74;;7421:93;7510:3;7421:93;:::i;:::-;7539:2;7534:3;7530:12;7523:19;;7182:366;;;:::o;7554:419::-;7720:4;7758:2;7747:9;7743:18;7735:26;;7807:9;7801:4;7797:20;7793:1;7782:9;7778:17;7771:47;7835:131;7961:4;7835:131;:::i;:::-;7827:139;;7554:419;;;:::o;7979:223::-;8119:34;8115:1;8107:6;8103:14;8096:58;8188:6;8183:2;8175:6;8171:15;8164:31;7979:223;:::o;8208:366::-;8350:3;8371:67;8435:2;8430:3;8371:67;:::i;:::-;8364:74;;8447:93;8536:3;8447:93;:::i;:::-;8565:2;8560:3;8556:12;8549:19;;8208:366;;;:::o;8580:419::-;8746:4;8784:2;8773:9;8769:18;8761:26;;8833:9;8827:4;8823:20;8819:1;8808:9;8804:17;8797:47;8861:131;8987:4;8861:131;:::i;:::-;8853:139;;8580:419;;;:::o;9005:244::-;9145:34;9141:1;9133:6;9129:14;9122:58;9214:27;9209:2;9201:6;9197:15;9190:52;9005:244;:::o;9255:366::-;9397:3;9418:67;9482:2;9477:3;9418:67;:::i;:::-;9411:74;;9494:93;9583:3;9494:93;:::i;:::-;9612:2;9607:3;9603:12;9596:19;;9255:366;;;:::o;9627:419::-;9793:4;9831:2;9820:9;9816:18;9808:26;;9880:9;9874:4;9870:20;9866:1;9855:9;9851:17;9844:47;9908:131;10034:4;9908:131;:::i;:::-;9900:139;;9627:419;;;:::o;10052:180::-;10100:77;10097:1;10090:88;10197:4;10194:1;10187:15;10221:4;10218:1;10211:15;10238:233;10277:3;10300:24;10318:5;10300:24;:::i;:::-;10291:33;;10346:66;10339:5;10336:77;10333:103;;;10416:18;;:::i;:::-;10333:103;10463:1;10456:5;10452:13;10445:20;;10238:233;;;:::o;10477:96::-;10514:7;10543:24;10561:5;10543:24;:::i;:::-;10532:35;;10477:96;;;:::o;10579:118::-;10666:24;10684:5;10666:24;:::i;:::-;10661:3;10654:37;10579:118;;:::o;10703:332::-;10824:4;10862:2;10851:9;10847:18;10839:26;;10875:71;10943:1;10932:9;10928:17;10919:6;10875:71;:::i;:::-;10956:72;11024:2;11013:9;11009:18;11000:6;10956:72;:::i;:::-;10703:332;;;;;:::o;11041:60::-;11069:3;11090:5;11083:12;;11041:60;;;:::o;11107:142::-;11157:9;11190:53;11208:34;11217:24;11235:5;11217:24;:::i;:::-;11208:34;:::i;:::-;11190:53;:::i;:::-;11177:66;;11107:142;;;:::o;11255:126::-;11305:9;11338:37;11369:5;11338:37;:::i;:::-;11325:50;;11255:126;;;:::o;11387:134::-;11445:9;11478:37;11509:5;11478:37;:::i;:::-;11465:50;;11387:134;;;:::o;11527:147::-;11622:45;11661:5;11622:45;:::i;:::-;11617:3;11610:58;11527:147;;:::o;11680:474::-;11845:4;11883:2;11872:9;11868:18;11860:26;;11896:71;11964:1;11953:9;11949:17;11940:6;11896:71;:::i;:::-;11977:80;12053:2;12042:9;12038:18;12029:6;11977:80;:::i;:::-;12067;12143:2;12132:9;12128:18;12119:6;12067:80;:::i;:::-;11680:474;;;;;;:::o;12160:585::-;12353:4;12391:3;12380:9;12376:19;12368:27;;12405:71;12473:1;12462:9;12458:17;12449:6;12405:71;:::i;:::-;12486:80;12562:2;12551:9;12547:18;12538:6;12486:80;:::i;:::-;12576;12652:2;12641:9;12637:18;12628:6;12576:80;:::i;:::-;12666:72;12734:2;12723:9;12719:18;12710:6;12666:72;:::i;:::-;12160:585;;;;;;;:::o;12751:220::-;12891:34;12887:1;12879:6;12875:14;12868:58;12960:3;12955:2;12947:6;12943:15;12936:28;12751:220;:::o;12977:366::-;13119:3;13140:67;13204:2;13199:3;13140:67;:::i;:::-;13133:74;;13216:93;13305:3;13216:93;:::i;:::-;13334:2;13329:3;13325:12;13318:19;;12977:366;;;:::o;13349:419::-;13515:4;13553:2;13542:9;13538:18;13530:26;;13602:9;13596:4;13592:20;13588:1;13577:9;13573:17;13566:47;13630:131;13756:4;13630:131;:::i;:::-;13622:139;;13349:419;;;:::o;13774:291::-;13914:34;13910:1;13902:6;13898:14;13891:58;13983:34;13978:2;13970:6;13966:15;13959:59;14052:5;14047:2;14039:6;14035:15;14028:30;13774:291;:::o;14071:366::-;14213:3;14234:67;14298:2;14293:3;14234:67;:::i;:::-;14227:74;;14310:93;14399:3;14310:93;:::i;:::-;14428:2;14423:3;14419:12;14412:19;;14071:366;;;:::o;14443:419::-;14609:4;14647:2;14636:9;14632:18;14624:26;;14696:9;14690:4;14686:20;14682:1;14671:9;14667:17;14660:47;14724:131;14850:4;14724:131;:::i;:::-;14716:139;;14443:419;;;:::o;14868:180::-;14916:77;14913:1;14906:88;15013:4;15010:1;15003:15;15037:4;15034:1;15027:15;15054:185;15094:1;15111:20;15129:1;15111:20;:::i;:::-;15106:25;;15145:20;15163:1;15145:20;:::i;:::-;15140:25;;15184:1;15174:35;;15189:18;;:::i;:::-;15174:35;15231:1;15228;15224:9;15219:14;;15054:185;;;;:::o;15245:348::-;15285:7;15308:20;15326:1;15308:20;:::i;:::-;15303:25;;15342:20;15360:1;15342:20;:::i;:::-;15337:25;;15530:1;15462:66;15458:74;15455:1;15452:81;15447:1;15440:9;15433:17;15429:105;15426:131;;;15537:18;;:::i;:::-;15426:131;15585:1;15582;15578:9;15567:20;;15245:348;;;;:::o;15599:305::-;15639:3;15658:20;15676:1;15658:20;:::i;:::-;15653:25;;15692:20;15710:1;15692:20;:::i;:::-;15687:25;;15846:1;15778:66;15774:74;15771:1;15768:81;15765:107;;;15852:18;;:::i;:::-;15765:107;15896:1;15893;15889:9;15882:16;;15599:305;;;;:::o;15910:332::-;16031:4;16069:2;16058:9;16054:18;16046:26;;16082:71;16150:1;16139:9;16135:17;16126:6;16082:71;:::i;:::-;16163:72;16231:2;16220:9;16216:18;16207:6;16163:72;:::i;:::-;15910:332;;;;;:::o;16248:179::-;16388:31;16384:1;16376:6;16372:14;16365:55;16248:179;:::o;16433:366::-;16575:3;16596:67;16660:2;16655:3;16596:67;:::i;:::-;16589:74;;16672:93;16761:3;16672:93;:::i;:::-;16790:2;16785:3;16781:12;16774:19;;16433:366;;;:::o;16805:419::-;16971:4;17009:2;16998:9;16994:18;16986:26;;17058:9;17052:4;17048:20;17044:1;17033:9;17029:17;17022:47;17086:131;17212:4;17086:131;:::i;:::-;17078:139;;16805:419;;;:::o",
  "source": "pragma solidity ^0.8.9;\n\ncontract Staking {\n    uint public requestCount = 0;\n    mapping(uint => Stake) public stakes;\n\n    enum StakeStatus {\n        Requested,\n        Filled,\n        Expired,\n        Cancelled,\n        AwaitingReturnPayment,\n        Completed\n    }\n\n    struct Stake {\n        uint id;\n        address payable horse;\n        address payable backer;\n        uint amount;\n        uint profitShare;\n        uint profit;\n        StakeStatus status;\n        bool horseWon;\n    }\n\n    // Get an individual stake\n\n    function getStake(uint id) external view returns (Stake memory) {\n        require(validId(id), \"This is not a valid stake id!\");\n\n        return stakes[id];\n    }\n\n    // Creating a new stake request\n\n    event StakeRequested(address horse, uint amount);\n\n    /// Profit share must be between 0 and 100\n    error InvalidProfitShare(uint profitShare);\n\n    function createRequest(uint amount, uint profitShare) external {\n        if (profitShare > 100) {\n            revert InvalidProfitShare(profitShare);\n        } \n        stakes[requestCount] = Stake(requestCount, payable(msg.sender), payable(address(0)), amount, profitShare, 0, StakeStatus.Requested,false);\n        requestCount++;\n\n        emit StakeRequested(msg.sender, amount);\n    }\n\n    // Staking a request\n    event StakeFilled(uint stakeId, address horse, address backer, uint amount);\n    /// Stake has already been filled/cancelled\n    error StakeNotFillable(uint id);\n    /// You cannot stake yourself\n    error StakingSelf(uint id, address horse, address backer);\n   \n    function stakeHorse(uint id) external payable {\n        require(validId(id), \"This is not a valid ID for a stake!\");\n    \n        Stake memory stake = stakes[id];\n        if (stake.status != StakeStatus.Requested) {\n            revert StakeNotFillable(id);\n        }\n\n        address payable horse = stake.horse;\n        address payable backer = payable(msg.sender);\n        if (horse == backer) {\n            revert StakingSelf(id, horse, backer);\n        }\n\n        // Update stake status and transfer funds\n        stake.status = StakeStatus.Filled;\n        stake.backer = backer;\n        horse.transfer(stake.amount);\n\n        stakes[id] = stake;\n        emit StakeFilled(id, horse, backer, stake.amount);\n    }\n\n    // Cancelling a reqested stake\n\n    event StakeCanceled(uint id);\n\n    function cancelStakeAsHorse(uint id) external payable {\n        require(validId(id), \"This is not a valid ID for a stake!\");\n        Stake memory stake = stakes[id];\n\n        require(msg.sender == stake.horse, \"You can only cancel your own stakes!\");\n        require(stake.status == StakeStatus.Requested, \"You can only cancel your stake if it has not been filled!\");\n\n        stake.backer.transfer(stake.amount);\n        stake.status = StakeStatus.Cancelled;\n\n        stakes[id] = stake;\n        emit StakeCanceled(id);\n    }\n    \n    // TODO: How might we allow this?\n    \n    // function cancelStakeAsBacker(uint id) external payable {\n    //     Stake memory stake = stakes[id];\n    //     require(msg.sender == stake.backer);\n    //     require(validId(id), \"This is not a valid ID for a stake!\");\n    // }\n\n    // Returning profits to backer after completing games\n\n    event ProfitsReturned(uint id, uint backerReturns);\n\n    // TODO: handle the case where no profit was made\n    function returnProfits(uint id, uint profit) external payable {\n        require(validId(id), \"This is not a valid ID for a stake!\");\n        Stake memory stake = stakes[id];\n\n        require(msg.sender == stake.horse, \"Only the horse can return profits\");\n        require(stake.status == StakeStatus.Filled, \"Can only return profits on a stake that has been filled and played.\");\n\n        // TODO: Check this calculation. Do we do it here or calculate it in the frontend?\n        stake.profit = profit;\n        uint backerReturns = stake.amount + (profit * (stake.profitShare / 100));\n\n        stake.backer.transfer(backerReturns);\n        stake.status = StakeStatus.Completed;\n\n        stakes[id] = stake;\n        emit ProfitsReturned(id, backerReturns);\n    }\n\n    function validId(uint id) internal view returns (bool) {\n        if(id < 0 || id >= requestCount) {\n            return false;\n        }\n        return true;\n    }\n\n}",
  "sourcePath": "/Users/casey/dev/uni/group_project/decentralized_poker_staking/contracts/Staking.sol",
  "ast": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "Staking": [
        412
      ]
    },
    "id": 413,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 412,
        "linearizedBaseContracts": [
          412
        ],
        "name": "Staking",
        "nameLocation": "34:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5badbe4c",
            "id": 4,
            "mutability": "mutable",
            "name": "requestCount",
            "nameLocation": "60:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 412,
            "src": "48:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "48:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "75:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5a44f86",
            "id": 9,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "112:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 412,
            "src": "82:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
              "typeString": "mapping(uint256 => struct Staking.Stake)"
            },
            "typeName": {
              "id": 8,
              "keyType": {
                "id": 5,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "90:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "82:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                "typeString": "mapping(uint256 => struct Staking.Stake)"
              },
              "valueType": {
                "id": 7,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "98:5:0"
                },
                "referencedDeclaration": 34,
                "src": "98:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                  "typeString": "struct Staking.Stake"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Staking.StakeStatus",
            "id": 16,
            "members": [
              {
                "id": 10,
                "name": "Requested",
                "nameLocation": "152:9:0",
                "nodeType": "EnumValue",
                "src": "152:9:0"
              },
              {
                "id": 11,
                "name": "Filled",
                "nameLocation": "171:6:0",
                "nodeType": "EnumValue",
                "src": "171:6:0"
              },
              {
                "id": 12,
                "name": "Expired",
                "nameLocation": "187:7:0",
                "nodeType": "EnumValue",
                "src": "187:7:0"
              },
              {
                "id": 13,
                "name": "Cancelled",
                "nameLocation": "204:9:0",
                "nodeType": "EnumValue",
                "src": "204:9:0"
              },
              {
                "id": 14,
                "name": "AwaitingReturnPayment",
                "nameLocation": "223:21:0",
                "nodeType": "EnumValue",
                "src": "223:21:0"
              },
              {
                "id": 15,
                "name": "Completed",
                "nameLocation": "254:9:0",
                "nodeType": "EnumValue",
                "src": "254:9:0"
              }
            ],
            "name": "StakeStatus",
            "nameLocation": "130:11:0",
            "nodeType": "EnumDefinition",
            "src": "125:144:0"
          },
          {
            "canonicalName": "Staking.Stake",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "303:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "298:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "horse",
                "nameLocation": "331:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "315:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 19,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "315:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "backer",
                "nameLocation": "362:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "346:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "383:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "378:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "profitShare",
                "nameLocation": "404:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "399:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "399:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "profit",
                "nameLocation": "430:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "425:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "458:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "446:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_StakeStatus_$16",
                  "typeString": "enum Staking.StakeStatus"
                },
                "typeName": {
                  "id": 30,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 29,
                    "name": "StakeStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16,
                    "src": "446:11:0"
                  },
                  "referencedDeclaration": 16,
                  "src": "446:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_StakeStatus_$16",
                    "typeString": "enum Staking.StakeStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "horseWon",
                "nameLocation": "479:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "474:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 32,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "282:5:0",
            "nodeType": "StructDefinition",
            "scope": 412,
            "src": "275:219:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "596:98:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "622:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 43,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "614:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "614:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c6964207374616b6520696421",
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
                          "typeString": "literal_string \"This is not a valid stake id!\""
                        },
                        "value": "This is not a valid stake id!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
                          "typeString": "literal_string \"This is not a valid stake id!\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "606:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "606:53:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 49,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "677:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 51,
                    "indexExpression": {
                      "id": 50,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "684:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "677:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 52,
                  "nodeType": "Return",
                  "src": "670:17:0"
                }
              ]
            },
            "functionSelector": "ce325bf8",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nameLocation": "541:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "555:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "550:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:9:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "582:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                    "typeString": "struct Staking.Stake"
                  },
                  "typeName": {
                    "id": 39,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34,
                      "src": "582:5:0"
                    },
                    "referencedDeclaration": 34,
                    "src": "582:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                      "typeString": "struct Staking.Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:14:0"
            },
            "scope": 412,
            "src": "532:162:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 60,
            "name": "StakeRequested",
            "nameLocation": "743:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "766:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "758:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "778:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "773:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:28:0"
            },
            "src": "737:49:0"
          },
          {
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "792:42:0",
              "text": "Profit share must be between 0 and 100"
            },
            "id": 65,
            "name": "InvalidProfitShare",
            "nameLocation": "845:18:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "869:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "864:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "863:18:0"
            },
            "src": "839:43:0"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "951:324:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 72,
                      "name": "profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "965:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "979:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "965:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80,
                  "nodeType": "IfStatement",
                  "src": "961:86:0",
                  "trueBody": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "984:63:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 76,
                              "name": "profitShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "1024:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 75,
                            "name": "InvalidProfitShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "1005:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1005:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "RevertStatement",
                        "src": "998:38:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 81,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1057:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 83,
                      "indexExpression": {
                        "id": 82,
                        "name": "requestCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1064:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1057:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 85,
                          "name": "requestCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1086:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 88,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1108:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1108:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1100:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 86,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1100:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1100:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 95,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1137:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 94,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1129:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 93,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1129:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1129:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1121:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 91,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1121:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1121:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 98,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1142:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 99,
                          "name": "profitShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1150:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1163:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 101,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1166:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "1166:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1188:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 84,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1080:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Stake_$34_storage_ptr_$",
                          "typeString": "type(struct Staking.Stake storage pointer)"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1080:114:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "1057:137:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:137:0"
                },
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1204:14:0",
                    "subExpression": {
                      "id": 107,
                      "name": "requestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1204:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:14:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1249:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1249:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 113,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1261:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 110,
                      "name": "StakeRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1234:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1234:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "EmitStatement",
                  "src": "1229:39:0"
                }
              ]
            },
            "functionSelector": "63c6ded3",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "897:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "916:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "911:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "929:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "924:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "910:31:0"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:0"
            },
            "scope": 412,
            "src": "888:387:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 127,
            "name": "StakeFilled",
            "nameLocation": "1312:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakeId",
                  "nameLocation": "1329:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1324:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1346:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1338:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1361:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1353:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1374:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1369:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1323:58:0"
            },
            "src": "1306:76:0"
          },
          {
            "documentation": {
              "id": 128,
              "nodeType": "StructuredDocumentation",
              "src": "1387:43:0",
              "text": "Stake has already been filled/cancelled"
            },
            "id": 132,
            "name": "StakeNotFillable",
            "nameLocation": "1441:16:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1463:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1458:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1457:9:0"
            },
            "src": "1435:32:0"
          },
          {
            "documentation": {
              "id": 133,
              "nodeType": "StructuredDocumentation",
              "src": "1472:29:0",
              "text": "You cannot stake yourself"
            },
            "id": 141,
            "name": "StakingSelf",
            "nameLocation": "1512:11:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1529:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1524:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1524:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1541:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1533:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1556:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1548:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1523:40:0"
            },
            "src": "1506:58:0"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "1619:669:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 148,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "1645:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 147,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "1637:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1637:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1650:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1629:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:59:0"
                },
                {
                  "assignments": [
                    155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 155,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "1716:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1703:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 154,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 153,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "1703:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "1703:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 159,
                  "initialValue": {
                    "baseExpression": {
                      "id": 156,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1724:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 158,
                    "indexExpression": {
                      "id": 157,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "1731:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1724:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1703:31:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 160,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "1748:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "1748:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 162,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1764:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Requested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1764:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "1748:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 170,
                  "nodeType": "IfStatement",
                  "src": "1744:95:0",
                  "trueBody": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "1787:52:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 166,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "1825:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 165,
                            "name": "StakeNotFillable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "1808:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "RevertStatement",
                        "src": "1801:27:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "horse",
                      "nameLocation": "1865:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1849:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1849:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 175,
                  "initialValue": {
                    "expression": {
                      "id": 173,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "1873:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "horse",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20,
                    "src": "1873:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1849:35:0"
                },
                {
                  "assignments": [
                    177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 177,
                      "mutability": "mutable",
                      "name": "backer",
                      "nameLocation": "1910:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1894:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 176,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1894:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 183,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1927:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1927:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1919:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1919:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1894:44:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 184,
                      "name": "horse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "1952:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 185,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "1961:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1952:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 194,
                  "nodeType": "IfStatement",
                  "src": "1948:83:0",
                  "trueBody": {
                    "id": 193,
                    "nodeType": "Block",
                    "src": "1969:62:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 188,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "2002:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 189,
                              "name": "horse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "2006:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 190,
                              "name": "backer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "2013:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 187,
                            "name": "StakingSelf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "1990:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address) pure"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1990:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 192,
                        "nodeType": "RevertStatement",
                        "src": "1983:37:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 195,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "2091:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "2091:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 198,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2106:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Filled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2106:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "2091:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2091:33:0"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 202,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "2134:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "backer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "2134:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 205,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "2149:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2134:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2134:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 211,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "2180:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2180:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 208,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2165:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2165:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2165:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2165:28:0"
                },
                {
                  "expression": {
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 215,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2204:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 217,
                      "indexExpression": {
                        "id": 216,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2211:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2204:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 218,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "2217:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "2204:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 222,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2249:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 223,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2253:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 224,
                        "name": "backer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "2260:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 225,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "2268:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2268:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 221,
                      "name": "StakeFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "2237:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2237:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "EmitStatement",
                  "src": "2232:49:0"
                }
              ]
            },
            "functionSelector": "a141efea",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeHorse",
            "nameLocation": "1582:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1598:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "1593:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1592:9:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1619:0:0"
            },
            "scope": 412,
            "src": "1573:715:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 234,
            "name": "StakeCanceled",
            "nameLocation": "2336:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2355:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2350:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2349:9:0"
            },
            "src": "2330:29:0"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "2419:472:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 241,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "2445:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 240,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "2437:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2437:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2450:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2429:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2429:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2429:59:0"
                },
                {
                  "assignments": [
                    248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 248,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "2511:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "2498:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 247,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 246,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "2498:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "2498:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "baseExpression": {
                      "id": 249,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2519:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 251,
                    "indexExpression": {
                      "id": 250,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "2526:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2519:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2498:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 254,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2548:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2548:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 256,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "2562:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "2562:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2548:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572206f776e207374616b657321",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2575:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        },
                        "value": "You can only cancel your own stakes!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        }
                      ],
                      "id": 253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2540:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2540:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2540:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_StakeStatus_$16",
                          "typeString": "enum Staking.StakeStatus"
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 263,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "2632:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 264,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2632:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 265,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "2648:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "2648:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "src": "2632:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572207374616b6520696620697420686173206e6f74206265656e2066696c6c656421",
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2671:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        },
                        "value": "You can only cancel your stake if it has not been filled!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        }
                      ],
                      "id": 262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2624:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "2624:107:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 276,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "2764:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2764:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 271,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "2742:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "2742:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2742:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2742:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "2742:35:0"
                },
                {
                  "expression": {
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 280,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "2787:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "2787:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 283,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2802:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2802:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "2787:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:36:0"
                },
                {
                  "expression": {
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 287,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2834:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 289,
                      "indexExpression": {
                        "id": 288,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "2841:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2834:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 290,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "2847:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "2834:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "2834:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 294,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "2881:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 293,
                      "name": "StakeCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "2867:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2867:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "EmitStatement",
                  "src": "2862:22:0"
                }
              ]
            },
            "functionSelector": "5f904775",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelStakeAsHorse",
            "nameLocation": "2374:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2398:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "2393:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2393:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2392:9:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2419:0:0"
            },
            "scope": 412,
            "src": "2365:526:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 304,
            "name": "ProfitsReturned",
            "nameLocation": "3247:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3268:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "3263:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3263:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "backerReturns",
                  "nameLocation": "3277:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "3272:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3262:29:0"
            },
            "src": "3241:51:0"
          },
          {
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "3414:699:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 313,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "3440:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 312,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "3432:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3432:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3445:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3424:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3424:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "3424:59:0"
                },
                {
                  "assignments": [
                    320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 320,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "3506:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "3493:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 319,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 318,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "3493:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "3493:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 324,
                  "initialValue": {
                    "baseExpression": {
                      "id": 321,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3514:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 323,
                    "indexExpression": {
                      "id": 322,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "3521:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3514:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3493:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 326,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3543:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3543:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 328,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "3557:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3557:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3543:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520686f7273652063616e2072657475726e2070726f66697473",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3570:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
                          "typeString": "literal_string \"Only the horse can return profits\""
                        },
                        "value": "Only the horse can return profits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
                          "typeString": "literal_string \"Only the horse can return profits\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3535:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3535:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3535:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_StakeStatus_$16",
                          "typeString": "enum Staking.StakeStatus"
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 335,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "3624:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "3624:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 337,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "3640:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Filled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "3640:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "src": "3624:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c792072657475726e2070726f66697473206f6e2061207374616b65207468617420686173206265656e2066696c6c656420616e6420706c617965642e",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3660:69:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
                          "typeString": "literal_string \"Can only return profits on a stake that has been filled and played.\""
                        },
                        "value": "Can only return profits on a stake that has been filled and played."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
                          "typeString": "literal_string \"Can only return profits on a stake that has been filled and played.\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3616:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3616:114:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3616:114:0"
                },
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 343,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3832:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "profit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "3832:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 346,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "3847:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3832:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "3832:21:0"
                },
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "backerReturns",
                      "nameLocation": "3868:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "3863:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3863:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 362,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 351,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3884:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3884:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 353,
                            "name": "profit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "3900:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 354,
                                    "name": "stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 320,
                                    "src": "3910:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                                      "typeString": "struct Staking.Stake memory"
                                    }
                                  },
                                  "id": 355,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "profitShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 26,
                                  "src": "3910:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3930:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "3910:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 358,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3909:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3900:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 360,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3899:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3884:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3863:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 368,
                        "name": "backerReturns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "3968:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 363,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 320,
                          "src": "3946:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "3946:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3946:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3946:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "3946:36:0"
                },
                {
                  "expression": {
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 371,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3992:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "3992:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 374,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4007:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "4007:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "3992:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "3992:36:0"
                },
                {
                  "expression": {
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 378,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "4039:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 380,
                      "indexExpression": {
                        "id": 379,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "4046:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4039:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 381,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "4052:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "4039:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "4039:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 385,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "4088:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 386,
                        "name": "backerReturns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "4092:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 384,
                      "name": "ProfitsReturned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "4072:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "EmitStatement",
                  "src": "4067:39:0"
                }
              ]
            },
            "functionSelector": "a2744250",
            "id": 390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnProfits",
            "nameLocation": "3361:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3380:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "3375:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3375:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "profit",
                  "nameLocation": "3389:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "3384:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3374:22:0"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3414:0:0"
            },
            "scope": 412,
            "src": "3352:761:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 410,
              "nodeType": "Block",
              "src": "4174:107:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 397,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "4187:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4192:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4187:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 400,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "4197:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 401,
                        "name": "requestCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "4203:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4197:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4187:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 407,
                  "nodeType": "IfStatement",
                  "src": "4184:70:0",
                  "trueBody": {
                    "id": 406,
                    "nodeType": "Block",
                    "src": "4217:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4238:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 396,
                        "id": 405,
                        "nodeType": "Return",
                        "src": "4231:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4270:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 396,
                  "id": 409,
                  "nodeType": "Return",
                  "src": "4263:11:0"
                }
              ]
            },
            "id": 411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validId",
            "nameLocation": "4128:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4141:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "4136:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4136:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4135:9:0"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "4168:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4168:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:6:0"
            },
            "scope": 412,
            "src": "4119:162:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 413,
        "src": "25:4259:0",
        "usedErrors": [
          65,
          132,
          141
        ]
      }
    ],
    "src": "0:4284:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "Staking": [
        412
      ]
    },
    "id": 413,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 412,
        "linearizedBaseContracts": [
          412
        ],
        "name": "Staking",
        "nameLocation": "34:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5badbe4c",
            "id": 4,
            "mutability": "mutable",
            "name": "requestCount",
            "nameLocation": "60:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 412,
            "src": "48:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "48:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "75:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5a44f86",
            "id": 9,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "112:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 412,
            "src": "82:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
              "typeString": "mapping(uint256 => struct Staking.Stake)"
            },
            "typeName": {
              "id": 8,
              "keyType": {
                "id": 5,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "90:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "82:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                "typeString": "mapping(uint256 => struct Staking.Stake)"
              },
              "valueType": {
                "id": 7,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "98:5:0"
                },
                "referencedDeclaration": 34,
                "src": "98:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                  "typeString": "struct Staking.Stake"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Staking.StakeStatus",
            "id": 16,
            "members": [
              {
                "id": 10,
                "name": "Requested",
                "nameLocation": "152:9:0",
                "nodeType": "EnumValue",
                "src": "152:9:0"
              },
              {
                "id": 11,
                "name": "Filled",
                "nameLocation": "171:6:0",
                "nodeType": "EnumValue",
                "src": "171:6:0"
              },
              {
                "id": 12,
                "name": "Expired",
                "nameLocation": "187:7:0",
                "nodeType": "EnumValue",
                "src": "187:7:0"
              },
              {
                "id": 13,
                "name": "Cancelled",
                "nameLocation": "204:9:0",
                "nodeType": "EnumValue",
                "src": "204:9:0"
              },
              {
                "id": 14,
                "name": "AwaitingReturnPayment",
                "nameLocation": "223:21:0",
                "nodeType": "EnumValue",
                "src": "223:21:0"
              },
              {
                "id": 15,
                "name": "Completed",
                "nameLocation": "254:9:0",
                "nodeType": "EnumValue",
                "src": "254:9:0"
              }
            ],
            "name": "StakeStatus",
            "nameLocation": "130:11:0",
            "nodeType": "EnumDefinition",
            "src": "125:144:0"
          },
          {
            "canonicalName": "Staking.Stake",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "303:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "298:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "horse",
                "nameLocation": "331:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "315:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 19,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "315:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "backer",
                "nameLocation": "362:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "346:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "383:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "378:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "profitShare",
                "nameLocation": "404:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "399:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "399:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "profit",
                "nameLocation": "430:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "425:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "458:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "446:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_StakeStatus_$16",
                  "typeString": "enum Staking.StakeStatus"
                },
                "typeName": {
                  "id": 30,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 29,
                    "name": "StakeStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16,
                    "src": "446:11:0"
                  },
                  "referencedDeclaration": 16,
                  "src": "446:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_StakeStatus_$16",
                    "typeString": "enum Staking.StakeStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "horseWon",
                "nameLocation": "479:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "474:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 32,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "282:5:0",
            "nodeType": "StructDefinition",
            "scope": 412,
            "src": "275:219:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "596:98:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "622:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 43,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "614:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "614:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c6964207374616b6520696421",
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
                          "typeString": "literal_string \"This is not a valid stake id!\""
                        },
                        "value": "This is not a valid stake id!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
                          "typeString": "literal_string \"This is not a valid stake id!\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "606:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "606:53:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 49,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "677:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 51,
                    "indexExpression": {
                      "id": 50,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "684:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "677:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 52,
                  "nodeType": "Return",
                  "src": "670:17:0"
                }
              ]
            },
            "functionSelector": "ce325bf8",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nameLocation": "541:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "555:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "550:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:9:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "582:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                    "typeString": "struct Staking.Stake"
                  },
                  "typeName": {
                    "id": 39,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34,
                      "src": "582:5:0"
                    },
                    "referencedDeclaration": 34,
                    "src": "582:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                      "typeString": "struct Staking.Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:14:0"
            },
            "scope": 412,
            "src": "532:162:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 60,
            "name": "StakeRequested",
            "nameLocation": "743:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "766:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "758:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "778:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "773:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:28:0"
            },
            "src": "737:49:0"
          },
          {
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "792:42:0",
              "text": "Profit share must be between 0 and 100"
            },
            "id": 65,
            "name": "InvalidProfitShare",
            "nameLocation": "845:18:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "869:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "864:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "863:18:0"
            },
            "src": "839:43:0"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "951:324:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 72,
                      "name": "profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "965:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "979:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "965:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80,
                  "nodeType": "IfStatement",
                  "src": "961:86:0",
                  "trueBody": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "984:63:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 76,
                              "name": "profitShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "1024:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 75,
                            "name": "InvalidProfitShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "1005:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1005:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "RevertStatement",
                        "src": "998:38:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 81,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1057:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 83,
                      "indexExpression": {
                        "id": 82,
                        "name": "requestCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1064:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1057:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 85,
                          "name": "requestCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1086:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 88,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1108:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1108:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1100:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 86,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1100:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1100:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 95,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1137:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 94,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1129:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 93,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1129:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1129:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1121:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 91,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1121:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1121:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 98,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1142:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 99,
                          "name": "profitShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1150:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1163:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 101,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1166:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "1166:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1188:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 84,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1080:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Stake_$34_storage_ptr_$",
                          "typeString": "type(struct Staking.Stake storage pointer)"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1080:114:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "1057:137:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:137:0"
                },
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1204:14:0",
                    "subExpression": {
                      "id": 107,
                      "name": "requestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1204:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:14:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1249:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1249:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 113,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1261:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 110,
                      "name": "StakeRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1234:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1234:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "EmitStatement",
                  "src": "1229:39:0"
                }
              ]
            },
            "functionSelector": "63c6ded3",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "897:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "916:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "911:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "929:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "924:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "910:31:0"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:0"
            },
            "scope": 412,
            "src": "888:387:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 127,
            "name": "StakeFilled",
            "nameLocation": "1312:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakeId",
                  "nameLocation": "1329:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1324:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1346:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1338:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1361:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1353:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1374:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1369:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1323:58:0"
            },
            "src": "1306:76:0"
          },
          {
            "documentation": {
              "id": 128,
              "nodeType": "StructuredDocumentation",
              "src": "1387:43:0",
              "text": "Stake has already been filled/cancelled"
            },
            "id": 132,
            "name": "StakeNotFillable",
            "nameLocation": "1441:16:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1463:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1458:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1457:9:0"
            },
            "src": "1435:32:0"
          },
          {
            "documentation": {
              "id": 133,
              "nodeType": "StructuredDocumentation",
              "src": "1472:29:0",
              "text": "You cannot stake yourself"
            },
            "id": 141,
            "name": "StakingSelf",
            "nameLocation": "1512:11:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1529:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1524:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1524:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1541:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1533:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1556:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1548:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1523:40:0"
            },
            "src": "1506:58:0"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "1619:669:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 148,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "1645:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 147,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "1637:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1637:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1650:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1629:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:59:0"
                },
                {
                  "assignments": [
                    155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 155,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "1716:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1703:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 154,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 153,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "1703:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "1703:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 159,
                  "initialValue": {
                    "baseExpression": {
                      "id": 156,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1724:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 158,
                    "indexExpression": {
                      "id": 157,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "1731:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1724:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1703:31:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 160,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "1748:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "1748:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 162,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1764:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Requested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1764:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "1748:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 170,
                  "nodeType": "IfStatement",
                  "src": "1744:95:0",
                  "trueBody": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "1787:52:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 166,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "1825:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 165,
                            "name": "StakeNotFillable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "1808:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "RevertStatement",
                        "src": "1801:27:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "horse",
                      "nameLocation": "1865:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1849:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1849:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 175,
                  "initialValue": {
                    "expression": {
                      "id": 173,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "1873:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "horse",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20,
                    "src": "1873:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1849:35:0"
                },
                {
                  "assignments": [
                    177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 177,
                      "mutability": "mutable",
                      "name": "backer",
                      "nameLocation": "1910:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1894:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 176,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1894:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 183,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1927:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1927:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1919:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1919:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1894:44:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 184,
                      "name": "horse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "1952:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 185,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "1961:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1952:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 194,
                  "nodeType": "IfStatement",
                  "src": "1948:83:0",
                  "trueBody": {
                    "id": 193,
                    "nodeType": "Block",
                    "src": "1969:62:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 188,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "2002:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 189,
                              "name": "horse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "2006:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 190,
                              "name": "backer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "2013:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 187,
                            "name": "StakingSelf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "1990:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address) pure"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1990:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 192,
                        "nodeType": "RevertStatement",
                        "src": "1983:37:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 195,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "2091:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "2091:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 198,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2106:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Filled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2106:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "2091:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2091:33:0"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 202,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "2134:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "backer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "2134:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 205,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "2149:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2134:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2134:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 211,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "2180:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2180:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 208,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2165:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2165:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2165:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2165:28:0"
                },
                {
                  "expression": {
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 215,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2204:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 217,
                      "indexExpression": {
                        "id": 216,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2211:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2204:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 218,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "2217:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "2204:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 222,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2249:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 223,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2253:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 224,
                        "name": "backer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "2260:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 225,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "2268:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2268:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 221,
                      "name": "StakeFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "2237:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2237:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "EmitStatement",
                  "src": "2232:49:0"
                }
              ]
            },
            "functionSelector": "a141efea",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeHorse",
            "nameLocation": "1582:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1598:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "1593:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1592:9:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1619:0:0"
            },
            "scope": 412,
            "src": "1573:715:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 234,
            "name": "StakeCanceled",
            "nameLocation": "2336:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2355:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2350:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2349:9:0"
            },
            "src": "2330:29:0"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "2419:472:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 241,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "2445:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 240,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "2437:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2437:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2450:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2429:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2429:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2429:59:0"
                },
                {
                  "assignments": [
                    248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 248,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "2511:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "2498:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 247,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 246,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "2498:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "2498:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "baseExpression": {
                      "id": 249,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2519:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 251,
                    "indexExpression": {
                      "id": 250,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "2526:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2519:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2498:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 254,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2548:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2548:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 256,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "2562:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "2562:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2548:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572206f776e207374616b657321",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2575:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        },
                        "value": "You can only cancel your own stakes!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        }
                      ],
                      "id": 253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2540:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2540:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2540:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_StakeStatus_$16",
                          "typeString": "enum Staking.StakeStatus"
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 263,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "2632:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 264,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2632:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 265,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "2648:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "2648:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "src": "2632:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572207374616b6520696620697420686173206e6f74206265656e2066696c6c656421",
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2671:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        },
                        "value": "You can only cancel your stake if it has not been filled!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        }
                      ],
                      "id": 262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2624:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "2624:107:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 276,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "2764:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2764:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 271,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "2742:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "2742:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2742:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2742:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "2742:35:0"
                },
                {
                  "expression": {
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 280,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "2787:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "2787:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 283,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2802:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2802:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "2787:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:36:0"
                },
                {
                  "expression": {
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 287,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2834:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 289,
                      "indexExpression": {
                        "id": 288,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "2841:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2834:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 290,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "2847:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "2834:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "2834:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 294,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "2881:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 293,
                      "name": "StakeCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "2867:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2867:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "EmitStatement",
                  "src": "2862:22:0"
                }
              ]
            },
            "functionSelector": "5f904775",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelStakeAsHorse",
            "nameLocation": "2374:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2398:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "2393:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2393:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2392:9:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2419:0:0"
            },
            "scope": 412,
            "src": "2365:526:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 304,
            "name": "ProfitsReturned",
            "nameLocation": "3247:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3268:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "3263:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3263:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "backerReturns",
                  "nameLocation": "3277:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "3272:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3262:29:0"
            },
            "src": "3241:51:0"
          },
          {
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "3414:699:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 313,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "3440:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 312,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "3432:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3432:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3445:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3424:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3424:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "3424:59:0"
                },
                {
                  "assignments": [
                    320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 320,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "3506:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "3493:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 319,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 318,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34,
                          "src": "3493:5:0"
                        },
                        "referencedDeclaration": 34,
                        "src": "3493:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 324,
                  "initialValue": {
                    "baseExpression": {
                      "id": 321,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3514:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 323,
                    "indexExpression": {
                      "id": 322,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "3521:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3514:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3493:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 326,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3543:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3543:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 328,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "3557:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3557:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3543:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520686f7273652063616e2072657475726e2070726f66697473",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3570:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
                          "typeString": "literal_string \"Only the horse can return profits\""
                        },
                        "value": "Only the horse can return profits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
                          "typeString": "literal_string \"Only the horse can return profits\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3535:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3535:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3535:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_StakeStatus_$16",
                          "typeString": "enum Staking.StakeStatus"
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 335,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "3624:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "3624:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 337,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "3640:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Filled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "3640:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$16",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "src": "3624:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c792072657475726e2070726f66697473206f6e2061207374616b65207468617420686173206265656e2066696c6c656420616e6420706c617965642e",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3660:69:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
                          "typeString": "literal_string \"Can only return profits on a stake that has been filled and played.\""
                        },
                        "value": "Can only return profits on a stake that has been filled and played."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
                          "typeString": "literal_string \"Can only return profits on a stake that has been filled and played.\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3616:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3616:114:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3616:114:0"
                },
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 343,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3832:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "profit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "3832:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 346,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "3847:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3832:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "3832:21:0"
                },
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "backerReturns",
                      "nameLocation": "3868:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "3863:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3863:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 362,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 351,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3884:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3884:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 353,
                            "name": "profit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "3900:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 354,
                                    "name": "stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 320,
                                    "src": "3910:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                                      "typeString": "struct Staking.Stake memory"
                                    }
                                  },
                                  "id": 355,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "profitShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 26,
                                  "src": "3910:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3930:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "3910:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 358,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3909:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3900:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 360,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3899:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3884:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3863:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 368,
                        "name": "backerReturns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "3968:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 363,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 320,
                          "src": "3946:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "3946:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3946:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3946:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "3946:36:0"
                },
                {
                  "expression": {
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 371,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3992:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "3992:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 374,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4007:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$16_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "4007:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$16",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "3992:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$16",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "3992:36:0"
                },
                {
                  "expression": {
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 378,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "4039:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$34_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 380,
                      "indexExpression": {
                        "id": 379,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "4046:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4039:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 381,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "4052:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$34_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "4039:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$34_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "4039:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 385,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "4088:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 386,
                        "name": "backerReturns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "4092:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 384,
                      "name": "ProfitsReturned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "4072:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "EmitStatement",
                  "src": "4067:39:0"
                }
              ]
            },
            "functionSelector": "a2744250",
            "id": 390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnProfits",
            "nameLocation": "3361:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3380:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "3375:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3375:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "profit",
                  "nameLocation": "3389:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "3384:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3374:22:0"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3414:0:0"
            },
            "scope": 412,
            "src": "3352:761:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 410,
              "nodeType": "Block",
              "src": "4174:107:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 397,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "4187:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4192:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4187:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 400,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "4197:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 401,
                        "name": "requestCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "4203:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4197:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4187:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 407,
                  "nodeType": "IfStatement",
                  "src": "4184:70:0",
                  "trueBody": {
                    "id": 406,
                    "nodeType": "Block",
                    "src": "4217:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4238:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 396,
                        "id": 405,
                        "nodeType": "Return",
                        "src": "4231:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4270:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 396,
                  "id": 409,
                  "nodeType": "Return",
                  "src": "4263:11:0"
                }
              ]
            },
            "id": 411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validId",
            "nameLocation": "4128:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4141:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "4136:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4136:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4135:9:0"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "4168:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4168:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:6:0"
            },
            "scope": 412,
            "src": "4119:162:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 413,
        "src": "25:4259:0",
        "usedErrors": [
          65,
          132,
          141
        ]
      }
    ],
    "src": "0:4284:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x27aAA486A8c84454a2d83BBffD75C383B08cA23D",
      "transactionHash": "0x1a0d9811da85822210795d743c7beb114230ec57536ae78627b59d2d1996b5f2"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-21T13:28:37.655Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidProfitShare(uint256)": [
        {
          "notice": "Profit share must be between 0 and 100"
        }
      ],
      "StakeNotFillable(uint256)": [
        {
          "notice": "Stake has already been filled/cancelled"
        }
      ],
      "StakingSelf(uint256,address,address)": [
        {
          "notice": "You cannot stake yourself"
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}