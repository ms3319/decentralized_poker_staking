{
  "contractName": "Staking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "profitShare",
          "type": "uint256"
        }
      ],
      "name": "InvalidProfitShare",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "InvalidStakeId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "StakeNotFillable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "horse",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "backer",
          "type": "address"
        }
      ],
      "name": "StakingSelf",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "backerReturns",
          "type": "uint256"
        }
      ],
      "name": "ProfitsReturned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "StakeCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "horse",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "backer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "horse",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeRequested",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "requestCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "horse",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "backer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profitShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "internalType": "enum Staking.StakeStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "horseWon",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "horse",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "backer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "profitShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            },
            {
              "internalType": "enum Staking.StakeStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "horseWon",
              "type": "bool"
            }
          ],
          "internalType": "struct Staking.Stake",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profitShare",
          "type": "uint256"
        }
      ],
      "name": "createRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "stakeHorse",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "cancelStakeAsHorse",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "name": "returnProfits",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"}],\"name\":\"InvalidProfitShare\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"InvalidStakeId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"StakeNotFillable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"horse\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"}],\"name\":\"StakingSelf\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"backerReturns\",\"type\":\"uint256\"}],\"name\":\"ProfitsReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"StakeCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"horse\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"horse\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeRequested\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancelStakeAsHorse\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"}],\"name\":\"createRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"horse\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"backer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakeStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"horseWon\",\"type\":\"bool\"}],\"internalType\":\"struct Staking.Stake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"returnProfits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"stakeHorse\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"horse\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"backer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakeStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"horseWon\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidProfitShare(uint256)\":[{\"notice\":\"Profit share must be between 0 and 100\"}],\"InvalidStakeId(uint256)\":[{\"notice\":\"Not a valid id for a stake request\"}],\"StakeNotFillable(uint256)\":[{\"notice\":\"Stake has already been filled/cancelled\"}],\"StakingSelf(uint256,address,address)\":[{\"notice\":\"You cannot stake yourself\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Staking.sol\":{\"keccak256\":\"0x821d28485368bd484bace196d099d6406c3d89492d92a134771e6e73aa74aff8\",\"urls\":[\"bzz-raw://7b16a59d91239aa4f6ed14e5dfa23086392068670f512e9b713c7517e0c12d71\",\"dweb:/ipfs/QmeQYmjgzARxHVgYU3k4bUCbDeyaxpsWQRLkDwNgmT8X98\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805534801561001457600080fd5b50611e5f806100246000396000f3fe6080604052600436106100705760003560e01c8063a141efea1161004e578063a141efea146100e5578063a274425014610101578063ce325bf81461011d578063d5a44f861461015a57610070565b80635badbe4c146100755780635f904775146100a057806363c6ded3146100bc575b600080fd5b34801561008157600080fd5b5061008a61019e565b60405161009791906114a3565b60405180910390f35b6100ba60048036038101906100b591906114ef565b6101a4565b005b3480156100c857600080fd5b506100e360048036038101906100de919061151c565b6105ee565b005b6100ff60048036038101906100fa91906114ef565b610898565b005b61011b6004803603810190610116919061151c565b610d33565b005b34801561012957600080fd5b50610144600480360381019061013f91906114ef565b6111b6565b60405161015191906116e0565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c91906114ef565b611356565b604051610195989796959493929190611729565b60405180910390f35b60005481565b6101ad816113f8565b6101ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e39061182a565b60405180910390fd5b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166005811115610306576103056115ac565b5b6005811115610318576103176115ac565b5b81526020016006820160019054906101000a900460ff1615151515815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a2906118bc565b60405180910390fd5b600060058111156103bf576103be6115ac565b5b8160c0015160058111156103d6576103d56115ac565b5b14610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d9061194e565b60405180910390fd5b806040015173ffffffffffffffffffffffffffffffffffffffff166108fc82606001519081150290604051600060405180830381858888f19350505050158015610464573d6000803e3d6000fd5b5060038160c00190600581111561047e5761047d6115ac565b5b90816005811115610492576104916115ac565b5b8152505080600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600581111561058b5761058a6115ac565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507f228683e8c8f1f5c38d2eae8f5b8e5ef47a084a41ffc5de8b9b38164870c0009f826040516105e291906114a3565b60405180910390a15050565b606481111561063457806040517f7a59383600000000000000000000000000000000000000000000000000000000815260040161062b91906114a3565b60405180910390fd5b60405180610100016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200160008152602001600060058111156106a8576106a76115ac565b5b81526020016000151581525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360058111156107a9576107a86115ac565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16600160008054815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108445761084361196e565b5b600080815480929190610856906119cc565b91905055507f49cee4f5002995b36067cf0f209184d84f0b3cc2eb9e0bd67dbde672694beb82338360405161088c929190611a36565b60405180910390a15050565b60005481106108de57806040517f664015160000000000000000000000000000000000000000000000000000000081526004016108d591906114a3565b60405180910390fd5b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660058111156109f8576109f76115ac565b5b6005811115610a0a57610a096115ac565b5b81526020016006820160019054906101000a900460ff161515151581525050905060006005811115610a3f57610a3e6115ac565b5b8160c001516005811115610a5657610a556115ac565b5b14610a9857816040517f63d82b43000000000000000000000000000000000000000000000000000000008152600401610a8f91906114a3565b60405180910390fd5b60008160200151905060003390508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b1b578382826040517fb6ccca7f000000000000000000000000000000000000000000000000000000008152600401610b1293929190611abe565b60405180910390fd5b60018360c001906005811115610b3457610b336115ac565b5b90816005811115610b4857610b476115ac565b5b8152505080836040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166108fc84606001519081150290604051600060405180830381858888f19350505050158015610bce573d6000803e3d6000fd5b5082600160008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836005811115610cc457610cc36115ac565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507fab1ccc3ac4f271f2e437d159236c5ceed2978a1949de79df70cf17069bac8e208483838660600151604051610d259493929190611af5565b60405180910390a150505050565b610d3c826113f8565b610d7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d729061182a565b60405180910390fd5b60006001600084815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166005811115610e9557610e946115ac565b5b6005811115610ea757610ea66115ac565b5b81526020016006820160019054906101000a900460ff1615151515815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3190611bac565b60405180910390fd5b60016005811115610f4e57610f4d6115ac565b5b8160c001516005811115610f6557610f646115ac565b5b14610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c90611c64565b60405180910390fd5b818160a0018181525050600060648260800151610fc29190611cb3565b83610fcd9190611ce4565b8260600151610fdc9190611d3e565b9050816040015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611028573d6000803e3d6000fd5b5060058260c001906005811115611042576110416115ac565b5b90816005811115611056576110556115ac565b5b8152505081600160008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600581111561114f5761114e6115ac565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507f120c71dc5e7cec3dab59d0ac108c8fcf42b7789d60d79cadf046b35476c321b984826040516111a8929190611d94565b60405180910390a150505050565b6111be611405565b6111c7826113f8565b611206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fd90611e09565b60405180910390fd5b6001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600581111561131e5761131d6115ac565b5b60058111156113305761132f6115ac565b5b81526020016006820160019054906101000a900460ff1615151515815250509050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b6000805482109050919050565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000600581111561147b5761147a6115ac565b5b81526020016000151581525090565b6000819050919050565b61149d8161148a565b82525050565b60006020820190506114b86000830184611494565b92915050565b600080fd5b6114cc8161148a565b81146114d757600080fd5b50565b6000813590506114e9816114c3565b92915050565b600060208284031215611505576115046114be565b5b6000611513848285016114da565b91505092915050565b60008060408385031215611533576115326114be565b5b6000611541858286016114da565b9250506020611552858286016114da565b9150509250929050565b6115658161148a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115968261156b565b9050919050565b6115a68161158b565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106115ec576115eb6115ac565b5b50565b60008190506115fd826115db565b919050565b600061160d826115ef565b9050919050565b61161d81611602565b82525050565b60008115159050919050565b61163881611623565b82525050565b61010082016000820151611655600085018261155c565b506020820151611668602085018261159d565b50604082015161167b604085018261159d565b50606082015161168e606085018261155c565b5060808201516116a1608085018261155c565b5060a08201516116b460a085018261155c565b5060c08201516116c760c0850182611614565b5060e08201516116da60e085018261162f565b50505050565b6000610100820190506116f6600083018461163e565b92915050565b6117058161158b565b82525050565b61171481611602565b82525050565b61172381611623565b82525050565b60006101008201905061173f600083018b611494565b61174c602083018a6116fc565b61175960408301896116fc565b6117666060830188611494565b6117736080830187611494565b61178060a0830186611494565b61178d60c083018561170b565b61179a60e083018461171a565b9998505050505050505050565b600082825260208201905092915050565b7f54686973206973206e6f7420612076616c696420494420666f7220612073746160008201527f6b65210000000000000000000000000000000000000000000000000000000000602082015250565b60006118146023836117a7565b915061181f826117b8565b604082019050919050565b6000602082019050818103600083015261184381611807565b9050919050565b7f596f752063616e206f6e6c792063616e63656c20796f7572206f776e2073746160008201527f6b65732100000000000000000000000000000000000000000000000000000000602082015250565b60006118a66024836117a7565b91506118b18261184a565b604082019050919050565b600060208201905081810360008301526118d581611899565b9050919050565b7f596f752063616e206f6e6c792063616e63656c20796f7572207374616b65206960008201527f6620697420686173206e6f74206265656e2066696c6c65642100000000000000602082015250565b60006119386039836117a7565b9150611943826118dc565b604082019050919050565b600060208201905081810360008301526119678161192b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119d78261148a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a0a57611a0961199d565b5b600182019050919050565b6000611a208261156b565b9050919050565b611a3081611a15565b82525050565b6000604082019050611a4b6000830185611a27565b611a586020830184611494565b9392505050565b6000819050919050565b6000611a84611a7f611a7a8461156b565b611a5f565b61156b565b9050919050565b6000611a9682611a69565b9050919050565b6000611aa882611a8b565b9050919050565b611ab881611a9d565b82525050565b6000606082019050611ad36000830186611494565b611ae06020830185611aaf565b611aed6040830184611aaf565b949350505050565b6000608082019050611b0a6000830187611494565b611b176020830186611aaf565b611b246040830185611aaf565b611b316060830184611494565b95945050505050565b7f4f6e6c792074686520686f7273652063616e2072657475726e2070726f66697460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b966021836117a7565b9150611ba182611b3a565b604082019050919050565b60006020820190508181036000830152611bc581611b89565b9050919050565b7f43616e206f6e6c792072657475726e2070726f66697473206f6e20612073746160008201527f6b65207468617420686173206265656e2066696c6c656420616e6420706c617960208201527f65642e0000000000000000000000000000000000000000000000000000000000604082015250565b6000611c4e6043836117a7565b9150611c5982611bcc565b606082019050919050565b60006020820190508181036000830152611c7d81611c41565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611cbe8261148a565b9150611cc98361148a565b925082611cd957611cd8611c84565b5b828204905092915050565b6000611cef8261148a565b9150611cfa8361148a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d3357611d3261199d565b5b828202905092915050565b6000611d498261148a565b9150611d548361148a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d8957611d8861199d565b5b828201905092915050565b6000604082019050611da96000830185611494565b611db66020830184611494565b9392505050565b7f54686973206973206e6f7420612076616c6964207374616b6520696421000000600082015250565b6000611df3601d836117a7565b9150611dfe82611dbd565b602082019050919050565b60006020820190508181036000830152611e2281611de6565b905091905056fea264697066735822122033357b27db9368e9e55d80283aed4fa291ff8e47e617c13469c1de8c22eb434f64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063a141efea1161004e578063a141efea146100e5578063a274425014610101578063ce325bf81461011d578063d5a44f861461015a57610070565b80635badbe4c146100755780635f904775146100a057806363c6ded3146100bc575b600080fd5b34801561008157600080fd5b5061008a61019e565b60405161009791906114a3565b60405180910390f35b6100ba60048036038101906100b591906114ef565b6101a4565b005b3480156100c857600080fd5b506100e360048036038101906100de919061151c565b6105ee565b005b6100ff60048036038101906100fa91906114ef565b610898565b005b61011b6004803603810190610116919061151c565b610d33565b005b34801561012957600080fd5b50610144600480360381019061013f91906114ef565b6111b6565b60405161015191906116e0565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c91906114ef565b611356565b604051610195989796959493929190611729565b60405180910390f35b60005481565b6101ad816113f8565b6101ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e39061182a565b60405180910390fd5b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166005811115610306576103056115ac565b5b6005811115610318576103176115ac565b5b81526020016006820160019054906101000a900460ff1615151515815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a2906118bc565b60405180910390fd5b600060058111156103bf576103be6115ac565b5b8160c0015160058111156103d6576103d56115ac565b5b14610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d9061194e565b60405180910390fd5b806040015173ffffffffffffffffffffffffffffffffffffffff166108fc82606001519081150290604051600060405180830381858888f19350505050158015610464573d6000803e3d6000fd5b5060038160c00190600581111561047e5761047d6115ac565b5b90816005811115610492576104916115ac565b5b8152505080600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600581111561058b5761058a6115ac565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507f228683e8c8f1f5c38d2eae8f5b8e5ef47a084a41ffc5de8b9b38164870c0009f826040516105e291906114a3565b60405180910390a15050565b606481111561063457806040517f7a59383600000000000000000000000000000000000000000000000000000000815260040161062b91906114a3565b60405180910390fd5b60405180610100016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200160008152602001600060058111156106a8576106a76115ac565b5b81526020016000151581525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360058111156107a9576107a86115ac565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16600160008054815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108445761084361196e565b5b600080815480929190610856906119cc565b91905055507f49cee4f5002995b36067cf0f209184d84f0b3cc2eb9e0bd67dbde672694beb82338360405161088c929190611a36565b60405180910390a15050565b60005481106108de57806040517f664015160000000000000000000000000000000000000000000000000000000081526004016108d591906114a3565b60405180910390fd5b60006001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660058111156109f8576109f76115ac565b5b6005811115610a0a57610a096115ac565b5b81526020016006820160019054906101000a900460ff161515151581525050905060006005811115610a3f57610a3e6115ac565b5b8160c001516005811115610a5657610a556115ac565b5b14610a9857816040517f63d82b43000000000000000000000000000000000000000000000000000000008152600401610a8f91906114a3565b60405180910390fd5b60008160200151905060003390508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b1b578382826040517fb6ccca7f000000000000000000000000000000000000000000000000000000008152600401610b1293929190611abe565b60405180910390fd5b60018360c001906005811115610b3457610b336115ac565b5b90816005811115610b4857610b476115ac565b5b8152505080836040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166108fc84606001519081150290604051600060405180830381858888f19350505050158015610bce573d6000803e3d6000fd5b5082600160008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836005811115610cc457610cc36115ac565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507fab1ccc3ac4f271f2e437d159236c5ceed2978a1949de79df70cf17069bac8e208483838660600151604051610d259493929190611af5565b60405180910390a150505050565b610d3c826113f8565b610d7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d729061182a565b60405180910390fd5b60006001600084815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166005811115610e9557610e946115ac565b5b6005811115610ea757610ea66115ac565b5b81526020016006820160019054906101000a900460ff1615151515815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3190611bac565b60405180910390fd5b60016005811115610f4e57610f4d6115ac565b5b8160c001516005811115610f6557610f646115ac565b5b14610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c90611c64565b60405180910390fd5b818160a0018181525050600060648260800151610fc29190611cb3565b83610fcd9190611ce4565b8260600151610fdc9190611d3e565b9050816040015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611028573d6000803e3d6000fd5b5060058260c001906005811115611042576110416115ac565b5b90816005811115611056576110556115ac565b5b8152505081600160008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600581111561114f5761114e6115ac565b5b021790555060e08201518160060160016101000a81548160ff0219169083151502179055509050507f120c71dc5e7cec3dab59d0ac108c8fcf42b7789d60d79cadf046b35476c321b984826040516111a8929190611d94565b60405180910390a150505050565b6111be611405565b6111c7826113f8565b611206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fd90611e09565b60405180910390fd5b6001600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600581111561131e5761131d6115ac565b5b60058111156113305761132f6115ac565b5b81526020016006820160019054906101000a900460ff1615151515815250509050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b6000805482109050919050565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000600581111561147b5761147a6115ac565b5b81526020016000151581525090565b6000819050919050565b61149d8161148a565b82525050565b60006020820190506114b86000830184611494565b92915050565b600080fd5b6114cc8161148a565b81146114d757600080fd5b50565b6000813590506114e9816114c3565b92915050565b600060208284031215611505576115046114be565b5b6000611513848285016114da565b91505092915050565b60008060408385031215611533576115326114be565b5b6000611541858286016114da565b9250506020611552858286016114da565b9150509250929050565b6115658161148a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115968261156b565b9050919050565b6115a68161158b565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106115ec576115eb6115ac565b5b50565b60008190506115fd826115db565b919050565b600061160d826115ef565b9050919050565b61161d81611602565b82525050565b60008115159050919050565b61163881611623565b82525050565b61010082016000820151611655600085018261155c565b506020820151611668602085018261159d565b50604082015161167b604085018261159d565b50606082015161168e606085018261155c565b5060808201516116a1608085018261155c565b5060a08201516116b460a085018261155c565b5060c08201516116c760c0850182611614565b5060e08201516116da60e085018261162f565b50505050565b6000610100820190506116f6600083018461163e565b92915050565b6117058161158b565b82525050565b61171481611602565b82525050565b61172381611623565b82525050565b60006101008201905061173f600083018b611494565b61174c602083018a6116fc565b61175960408301896116fc565b6117666060830188611494565b6117736080830187611494565b61178060a0830186611494565b61178d60c083018561170b565b61179a60e083018461171a565b9998505050505050505050565b600082825260208201905092915050565b7f54686973206973206e6f7420612076616c696420494420666f7220612073746160008201527f6b65210000000000000000000000000000000000000000000000000000000000602082015250565b60006118146023836117a7565b915061181f826117b8565b604082019050919050565b6000602082019050818103600083015261184381611807565b9050919050565b7f596f752063616e206f6e6c792063616e63656c20796f7572206f776e2073746160008201527f6b65732100000000000000000000000000000000000000000000000000000000602082015250565b60006118a66024836117a7565b91506118b18261184a565b604082019050919050565b600060208201905081810360008301526118d581611899565b9050919050565b7f596f752063616e206f6e6c792063616e63656c20796f7572207374616b65206960008201527f6620697420686173206e6f74206265656e2066696c6c65642100000000000000602082015250565b60006119386039836117a7565b9150611943826118dc565b604082019050919050565b600060208201905081810360008301526119678161192b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119d78261148a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a0a57611a0961199d565b5b600182019050919050565b6000611a208261156b565b9050919050565b611a3081611a15565b82525050565b6000604082019050611a4b6000830185611a27565b611a586020830184611494565b9392505050565b6000819050919050565b6000611a84611a7f611a7a8461156b565b611a5f565b61156b565b9050919050565b6000611a9682611a69565b9050919050565b6000611aa882611a8b565b9050919050565b611ab881611a9d565b82525050565b6000606082019050611ad36000830186611494565b611ae06020830185611aaf565b611aed6040830184611aaf565b949350505050565b6000608082019050611b0a6000830187611494565b611b176020830186611aaf565b611b246040830185611aaf565b611b316060830184611494565b95945050505050565b7f4f6e6c792074686520686f7273652063616e2072657475726e2070726f66697460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b966021836117a7565b9150611ba182611b3a565b604082019050919050565b60006020820190508181036000830152611bc581611b89565b9050919050565b7f43616e206f6e6c792072657475726e2070726f66697473206f6e20612073746160008201527f6b65207468617420686173206265656e2066696c6c656420616e6420706c617960208201527f65642e0000000000000000000000000000000000000000000000000000000000604082015250565b6000611c4e6043836117a7565b9150611c5982611bcc565b606082019050919050565b60006020820190508181036000830152611c7d81611c41565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611cbe8261148a565b9150611cc98361148a565b925082611cd957611cd8611c84565b5b828204905092915050565b6000611cef8261148a565b9150611cfa8361148a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d3357611d3261199d565b5b828202905092915050565b6000611d498261148a565b9150611d548361148a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d8957611d8861199d565b5b828201905092915050565b6000604082019050611da96000830185611494565b611db66020830184611494565b9392505050565b7f54686973206973206e6f7420612076616c6964207374616b6520696421000000600082015250565b6000611df3601d836117a7565b9150611dfe82611dbd565b602082019050919050565b60006020820190508181036000830152611e2281611de6565b905091905056fea264697066735822122033357b27db9368e9e55d80283aed4fa291ff8e47e617c13469c1de8c22eb434f64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:17413:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:3",
                "type": ""
              }
            ],
            "src": "7:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:3",
                "type": ""
              }
            ],
            "src": "90:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:3",
                "type": ""
              }
            ],
            "src": "214:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:3",
                "type": ""
              }
            ],
            "src": "442:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:3",
                "type": ""
              }
            ],
            "src": "769:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:3",
                "type": ""
              }
            ],
            "src": "897:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1154:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1156:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1156:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1156:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1129:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1118:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1247:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1262:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1291:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1326:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1337:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1346:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1301:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1291:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:3",
                "type": ""
              }
            ],
            "src": "1042:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1460:391:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1506:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1508:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1508:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1508:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1481:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1490:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1477:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1477:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1502:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1473:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1470:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1599:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1614:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1628:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1618:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1643:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1678:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1689:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1674:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1674:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1698:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1653:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1643:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1726:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1741:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1755:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1745:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1771:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1806:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1817:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1802:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1802:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1826:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1781:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1771:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1422:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1433:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1445:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1453:6:3",
                "type": ""
              }
            ],
            "src": "1377:474:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1912:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1929:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1952:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1934:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1934:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1922:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1922:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1900:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1907:3:3",
                "type": ""
              }
            ],
            "src": "1857:108:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2016:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2026:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2041:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2048:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2037:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2037:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2026:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1998:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2008:7:3",
                "type": ""
              }
            ],
            "src": "1971:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2156:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2166:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2195:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2177:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2177:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2166:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2138:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2148:7:3",
                "type": ""
              }
            ],
            "src": "2103:104:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2284:61:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2301:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2332:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2306:25:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2306:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2294:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:45:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2294:45:3"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2272:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2279:3:3",
                "type": ""
              }
            ],
            "src": "2213:132:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2379:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2396:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2399:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2389:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2389:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2389:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2493:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2496:4:3",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2486:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2486:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2486:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2517:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2520:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2510:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2510:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2510:15:3"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2351:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2594:62:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2628:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "2630:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2630:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2630:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2617:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2624:1:3",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2614:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2614:12:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2607:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2607:20:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2604:46:3"
                }
              ]
            },
            "name": "validator_assert_t_enum$_StakeStatus_$49",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2587:5:3",
                "type": ""
              }
            ],
            "src": "2537:119:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2721:80:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2731:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2742:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2731:7:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2789:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_StakeStatus_$49",
                      "nodeType": "YulIdentifier",
                      "src": "2748:40:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2748:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2748:47:3"
                }
              ]
            },
            "name": "cleanup_t_enum$_StakeStatus_$49",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2703:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2713:7:3",
                "type": ""
              }
            ],
            "src": "2662:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2879:67:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2889:51:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2934:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_StakeStatus_$49",
                      "nodeType": "YulIdentifier",
                      "src": "2902:31:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2902:38:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2889:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_StakeStatus_$49_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2859:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2869:9:3",
                "type": ""
              }
            ],
            "src": "2807:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3019:78:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3036:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3084:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_StakeStatus_$49_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3041:42:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3041:49:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3029:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3029:62:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3029:62:3"
                }
              ]
            },
            "name": "abi_encode_t_enum$_StakeStatus_$49_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3007:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3014:3:3",
                "type": ""
              }
            ],
            "src": "2952:145:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3145:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3155:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3180:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3173:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3173:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3166:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3166:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3155:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3127:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3137:7:3",
                "type": ""
              }
            ],
            "src": "3103:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3248:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3265:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3285:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3270:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3270:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3258:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3258:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3258:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3236:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3243:3:3",
                "type": ""
              }
            ],
            "src": "3199:99:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3464:1493:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3474:28:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3490:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3495:6:3",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3486:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3486:16:3"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "3478:4:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3512:162:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3545:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3575:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3582:4:3",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3571:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3571:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3565:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3565:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3549:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3635:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3653:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3658:4:3",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3649:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3649:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3601:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3601:63:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3601:63:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3684:181:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3720:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3750:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3757:4:3",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3746:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3746:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3740:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3740:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3724:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3826:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3844:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3849:4:3",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3840:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3840:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_payable_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3776:49:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3776:79:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3776:79:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3875:182:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3912:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3942:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3949:4:3",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3938:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3938:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3932:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3932:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3916:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4018:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4036:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4041:4:3",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4032:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4032:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_payable_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3968:49:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3968:79:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3968:79:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4067:166:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4104:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4134:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4141:4:3",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4130:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4130:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4124:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4124:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4108:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4194:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4212:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4217:4:3",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4208:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4208:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4160:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4160:63:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4160:63:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4243:171:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4285:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4315:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4322:4:3",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4311:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4311:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4305:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4305:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4289:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4375:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4393:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4398:4:3",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4389:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4389:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4341:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4341:63:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4341:63:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4424:166:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4461:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4491:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4498:4:3",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4487:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4487:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4481:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4481:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4465:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4551:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4569:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4574:4:3",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4565:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4565:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4517:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4517:63:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4517:63:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4600:178:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4637:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4667:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4674:4:3",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4663:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4663:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4657:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4657:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4641:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4739:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4757:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4762:4:3",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4753:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4753:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_enum$_StakeStatus_$49_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "4693:45:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4693:75:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4693:75:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4788:162:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4827:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4857:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4864:4:3",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4853:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4853:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4847:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4847:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4831:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4911:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4929:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4934:4:3",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4925:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4925:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4883:27:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4883:57:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4883:57:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Stake_$67_memory_ptr_to_t_struct$_Stake_$67_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3451:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3458:3:3",
                "type": ""
              }
            ],
            "src": "3356:1601:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5103:167:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5113:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5125:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5136:3:3",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5121:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5121:19:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5113:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5236:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5249:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5260:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5245:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5245:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Stake_$67_memory_ptr_to_t_struct$_Stake_$67_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5150:85:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5150:113:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5150:113:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Stake_$67_memory_ptr__to_t_struct$_Stake_$67_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5075:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5087:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5098:4:3",
                "type": ""
              }
            ],
            "src": "4963:307:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5357:61:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5374:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5405:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "5379:25:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5379:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5367:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5367:45:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5367:45:3"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5345:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5352:3:3",
                "type": ""
              }
            ],
            "src": "5276:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5501:78:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5518:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5566:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_StakeStatus_$49_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "5523:42:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5523:49:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5511:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5511:62:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5511:62:3"
                }
              ]
            },
            "name": "abi_encode_t_enum$_StakeStatus_$49_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5489:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5496:3:3",
                "type": ""
              }
            ],
            "src": "5424:155:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5644:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5661:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5681:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5666:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5666:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5654:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5654:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5654:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5632:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5639:3:3",
                "type": ""
              }
            ],
            "src": "5585:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6032:741:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6042:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6054:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6065:3:3",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6050:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6050:19:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6042:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6123:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6136:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6147:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6132:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6132:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6079:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6079:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6079:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6220:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6233:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6244:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6229:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6229:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6160:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6160:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6160:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6318:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6331:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6342:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6327:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6327:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6258:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6258:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6258:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6400:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6413:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6424:2:3",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6409:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6409:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6356:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6356:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6356:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "6482:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6495:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6506:3:3",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6491:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6491:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6438:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6438:73:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6438:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "6565:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6578:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6589:3:3",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6574:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6574:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6521:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6521:73:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6521:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "6660:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6673:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6684:3:3",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6669:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6669:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_StakeStatus_$49_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6604:55:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6604:85:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6604:85:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "6737:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6750:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6761:3:3",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6746:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6746:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6699:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6699:67:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6699:67:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_enum$_StakeStatus_$49_t_bool__to_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5948:9:3",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "5960:6:3",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "5968:6:3",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "5976:6:3",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5984:6:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5992:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6000:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6008:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6016:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6027:4:3",
                "type": ""
              }
            ],
            "src": "5700:1073:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6875:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6892:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6897:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6885:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6885:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6885:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6913:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6932:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6937:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6928:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6928:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6913:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6847:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6852:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6863:11:3",
                "type": ""
              }
            ],
            "src": "6779:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7060:116:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7082:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7090:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7078:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7078:14:3"
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f72206120737461",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7094:34:3",
                        "type": "",
                        "value": "This is not a valid ID for a sta"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7071:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7071:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7071:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7150:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7158:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7146:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7146:15:3"
                      },
                      {
                        "hexValue": "6b6521",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7163:5:3",
                        "type": "",
                        "value": "ke!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7139:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7139:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7139:30:3"
                }
              ]
            },
            "name": "store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7052:6:3",
                "type": ""
              }
            ],
            "src": "6954:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7328:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7338:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7404:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7409:2:3",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7345:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7345:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7338:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7510:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                      "nodeType": "YulIdentifier",
                      "src": "7421:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7421:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7421:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7523:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7534:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7539:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7530:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7530:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7523:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7316:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7324:3:3",
                "type": ""
              }
            ],
            "src": "7182:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7725:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7735:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7747:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7758:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7743:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7743:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7735:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7782:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7793:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7778:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7778:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7801:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7807:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7797:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7797:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7771:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7771:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7771:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7827:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7961:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7835:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7835:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7827:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7705:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7720:4:3",
                "type": ""
              }
            ],
            "src": "7554:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8085:117:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8107:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8115:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8103:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8103:14:3"
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572206f776e20737461",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8119:34:3",
                        "type": "",
                        "value": "You can only cancel your own sta"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8096:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8096:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8096:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8175:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8183:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8171:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8171:15:3"
                      },
                      {
                        "hexValue": "6b657321",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8188:6:3",
                        "type": "",
                        "value": "kes!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8164:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8164:31:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8164:31:3"
                }
              ]
            },
            "name": "store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8077:6:3",
                "type": ""
              }
            ],
            "src": "7979:223:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8354:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8364:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8430:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8435:2:3",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8371:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8371:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8364:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8536:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                      "nodeType": "YulIdentifier",
                      "src": "8447:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8447:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8447:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8549:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8560:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8565:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8556:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8556:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8549:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8342:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8350:3:3",
                "type": ""
              }
            ],
            "src": "8208:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8751:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8761:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8773:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8784:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8769:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8769:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8761:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8808:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8819:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8804:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8804:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8827:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8833:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8823:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8823:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8797:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8797:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8797:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8853:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8987:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8861:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8861:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8853:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8731:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8746:4:3",
                "type": ""
              }
            ],
            "src": "8580:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9111:138:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9133:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9141:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9129:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9129:14:3"
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572207374616b652069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9145:34:3",
                        "type": "",
                        "value": "You can only cancel your stake i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9122:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9122:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9122:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9201:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9209:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9197:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9197:15:3"
                      },
                      {
                        "hexValue": "6620697420686173206e6f74206265656e2066696c6c656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9214:27:3",
                        "type": "",
                        "value": "f it has not been filled!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9190:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9190:52:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9190:52:3"
                }
              ]
            },
            "name": "store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9103:6:3",
                "type": ""
              }
            ],
            "src": "9005:244:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9401:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9411:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9477:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9482:2:3",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9418:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9418:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9411:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9583:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                      "nodeType": "YulIdentifier",
                      "src": "9494:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9494:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9494:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9596:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9607:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9612:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9603:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9603:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9596:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9389:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9397:3:3",
                "type": ""
              }
            ],
            "src": "9255:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9798:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9808:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9820:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9831:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9816:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9816:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9808:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9855:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9866:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9851:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9851:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9874:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9880:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9870:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9870:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9844:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9844:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9844:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9900:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10034:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9908:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9908:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9900:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9778:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9793:4:3",
                "type": ""
              }
            ],
            "src": "9627:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10080:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10097:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10100:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10090:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10090:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10090:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10194:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10197:4:3",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10187:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10187:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10187:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10218:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10221:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10211:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10211:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10211:15:3"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "10052:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10266:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10283:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10286:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10276:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10276:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10276:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10380:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10383:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10373:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10373:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10373:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10404:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10407:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10397:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10397:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10397:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10238:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10467:190:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10477:33:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10504:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10486:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10486:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10477:5:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10600:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10602:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10602:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10602:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10525:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10532:66:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10522:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10522:77:3"
                  },
                  "nodeType": "YulIf",
                  "src": "10519:103:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10631:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10642:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10649:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10638:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10638:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10631:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10453:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10463:3:3",
                "type": ""
              }
            ],
            "src": "10424:233:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10708:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10718:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10747:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "10729:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10729:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10718:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10690:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10700:7:3",
                "type": ""
              }
            ],
            "src": "10663:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10830:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10847:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10870:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10852:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10852:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10840:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10840:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10840:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10818:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10825:3:3",
                "type": ""
              }
            ],
            "src": "10765:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11015:206:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11025:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11037:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11048:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11033:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11033:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11025:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11105:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11118:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11129:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11114:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11114:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11061:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11061:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11061:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11186:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11199:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11210:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11195:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11195:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11142:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11142:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11142:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10979:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10991:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10999:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11010:4:3",
                "type": ""
              }
            ],
            "src": "10889:332:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11259:28:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11269:12:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11276:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "11269:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11245:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "11255:3:3",
                "type": ""
              }
            ],
            "src": "11227:60:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11353:82:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11363:66:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11421:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "11403:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11403:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "11394:8:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11394:34:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11376:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11376:53:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11363:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11333:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11343:9:3",
                "type": ""
              }
            ],
            "src": "11293:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11501:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11511:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11555:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11524:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11524:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11511:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11481:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11491:9:3",
                "type": ""
              }
            ],
            "src": "11441:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11641:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11651:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11695:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "11664:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11664:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11651:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11621:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11631:9:3",
                "type": ""
              }
            ],
            "src": "11573:134:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11786:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11803:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11847:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "11808:38:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11808:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11796:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11796:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11796:58:3"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11774:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11781:3:3",
                "type": ""
              }
            ],
            "src": "11713:147:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12036:304:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12046:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12058:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12069:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12054:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12054:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12046:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12126:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12139:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12150:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12135:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12135:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12082:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12082:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12082:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12215:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12228:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12239:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12224:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12224:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12163:51:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12163:80:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12163:80:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12305:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12318:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12329:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12314:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12314:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12253:51:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12253:80:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12253:80:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address_payable__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11992:9:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12004:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12012:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12020:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12031:4:3",
                "type": ""
              }
            ],
            "src": "11866:474:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12544:387:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12554:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12566:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12577:3:3",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12562:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12562:19:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12554:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12635:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12648:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12659:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12644:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12644:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12591:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12591:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12591:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12724:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12737:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12748:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12733:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12733:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12672:51:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12672:80:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12672:80:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12814:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12827:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12838:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12823:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12823:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12762:51:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12762:80:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12762:80:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "12896:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12909:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12920:2:3",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12905:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12905:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12852:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12852:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12852:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12492:9:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12504:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12512:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12520:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12528:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12539:4:3",
                "type": ""
              }
            ],
            "src": "12346:585:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13043:114:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13065:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13073:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13061:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13061:14:3"
                      },
                      {
                        "hexValue": "4f6e6c792074686520686f7273652063616e2072657475726e2070726f666974",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13077:34:3",
                        "type": "",
                        "value": "Only the horse can return profit"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13054:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13054:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13054:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13133:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13141:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13129:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13129:15:3"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13146:3:3",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13122:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13122:28:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13122:28:3"
                }
              ]
            },
            "name": "store_literal_in_memory_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13035:6:3",
                "type": ""
              }
            ],
            "src": "12937:220:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13309:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13319:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13385:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13390:2:3",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13326:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13326:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13319:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13491:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
                      "nodeType": "YulIdentifier",
                      "src": "13402:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13402:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13402:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13504:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13515:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13520:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13511:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13511:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13504:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13297:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13305:3:3",
                "type": ""
              }
            ],
            "src": "13163:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13706:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13716:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13728:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13739:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13724:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13724:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13716:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13763:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13774:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13759:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13759:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13782:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13788:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13778:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13778:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13752:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13752:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13752:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13808:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13942:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13816:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13816:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13808:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13686:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13701:4:3",
                "type": ""
              }
            ],
            "src": "13535:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14066:185:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14088:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14096:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14084:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14084:14:3"
                      },
                      {
                        "hexValue": "43616e206f6e6c792072657475726e2070726f66697473206f6e206120737461",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14100:34:3",
                        "type": "",
                        "value": "Can only return profits on a sta"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14077:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14077:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14077:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14156:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14164:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14152:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14152:15:3"
                      },
                      {
                        "hexValue": "6b65207468617420686173206265656e2066696c6c656420616e6420706c6179",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14169:34:3",
                        "type": "",
                        "value": "ke that has been filled and play"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14145:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14145:59:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14145:59:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14225:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14233:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14221:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14221:15:3"
                      },
                      {
                        "hexValue": "65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14238:5:3",
                        "type": "",
                        "value": "ed."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14214:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14214:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14214:30:3"
                }
              ]
            },
            "name": "store_literal_in_memory_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14058:6:3",
                "type": ""
              }
            ],
            "src": "13960:291:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14403:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14413:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14479:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14484:2:3",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14420:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14420:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14413:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14585:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
                      "nodeType": "YulIdentifier",
                      "src": "14496:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14496:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14496:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14598:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14609:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14614:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14605:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14605:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14598:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14391:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14399:3:3",
                "type": ""
              }
            ],
            "src": "14257:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14800:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14810:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14822:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14833:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14818:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14818:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14810:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14857:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14868:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14853:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14853:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14876:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14882:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14872:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14872:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14846:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14846:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14846:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14902:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15036:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14910:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14910:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14902:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14780:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14795:4:3",
                "type": ""
              }
            ],
            "src": "14629:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15082:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15099:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15102:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15092:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15092:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15092:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15196:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15199:4:3",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15189:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15189:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15189:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15220:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15223:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15213:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15213:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15213:15:3"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "15054:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15282:143:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15292:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15315:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15297:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15297:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15292:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15326:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15349:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15331:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15331:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15326:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15373:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "15375:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15375:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15375:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15370:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15363:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15363:9:3"
                  },
                  "nodeType": "YulIf",
                  "src": "15360:35:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15405:14:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15414:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15417:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "15410:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15410:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "15405:1:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15271:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15274:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "15280:1:3",
                "type": ""
              }
            ],
            "src": "15240:185:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15479:300:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15489:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15512:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15494:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15494:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15489:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15523:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15546:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15528:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15528:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15523:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15721:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15723:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15723:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15723:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "15633:1:3"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "15626:6:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15626:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15619:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15619:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15641:1:3"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15648:66:3",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "15716:1:3"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "15644:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15644:74:3"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "15638:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15638:81:3"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15615:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15615:105:3"
                  },
                  "nodeType": "YulIf",
                  "src": "15612:131:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15753:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15768:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15771:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "15764:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15764:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "15753:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15462:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15465:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "15471:7:3",
                "type": ""
              }
            ],
            "src": "15431:348:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15829:261:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15839:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15862:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15844:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15844:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15839:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15873:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15896:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15878:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15878:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15873:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16036:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16038:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16038:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16038:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15957:1:3"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15964:66:3",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "16032:1:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15960:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15960:74:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15954:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15954:81:3"
                  },
                  "nodeType": "YulIf",
                  "src": "15951:107:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16068:16:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16079:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16082:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16075:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16075:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "16068:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15816:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15819:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "15825:3:3",
                "type": ""
              }
            ],
            "src": "15785:305:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16222:206:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16232:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16244:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16255:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16240:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16240:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16232:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16312:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16325:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16336:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16321:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16321:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16268:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16268:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16268:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16393:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16406:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16417:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16402:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16402:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16349:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16349:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16349:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16186:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16198:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16206:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16217:4:3",
                "type": ""
              }
            ],
            "src": "16096:332:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16540:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16562:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16570:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16558:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16558:14:3"
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c6964207374616b6520696421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16574:31:3",
                        "type": "",
                        "value": "This is not a valid stake id!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16551:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16551:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16551:55:3"
                }
              ]
            },
            "name": "store_literal_in_memory_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16532:6:3",
                "type": ""
              }
            ],
            "src": "16434:179:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16765:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16775:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16841:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16846:2:3",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16782:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16782:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16775:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16947:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
                      "nodeType": "YulIdentifier",
                      "src": "16858:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16858:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16858:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16960:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16971:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16976:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16967:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16967:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16960:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16753:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16761:3:3",
                "type": ""
              }
            ],
            "src": "16619:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17162:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17172:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17184:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17195:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17180:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17180:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17172:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17219:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17230:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17215:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17215:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17238:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17244:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17234:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17234:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17208:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17208:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17208:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17264:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17398:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17272:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17272:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17264:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17142:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17157:4:3",
                "type": ""
              }
            ],
            "src": "16991:419:3"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_StakeStatus_$49(value) {\n        if iszero(lt(value, 6)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_StakeStatus_$49(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_StakeStatus_$49(value)\n    }\n\n    function convert_t_enum$_StakeStatus_$49_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_StakeStatus_$49(value)\n    }\n\n    function abi_encode_t_enum$_StakeStatus_$49_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_StakeStatus_$49_to_t_uint8(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Staking.Stake -> struct Staking.Stake\n    function abi_encode_t_struct$_Stake_$67_memory_ptr_to_t_struct$_Stake_$67_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // horse\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // backer\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // profitShare\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // profit\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // status\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_enum$_StakeStatus_$49_to_t_uint8(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // horseWon\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Stake_$67_memory_ptr__to_t_struct$_Stake_$67_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_Stake_$67_memory_ptr_to_t_struct$_Stake_$67_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_enum$_StakeStatus_$49_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_StakeStatus_$49_to_t_uint8(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_enum$_StakeStatus_$49_t_bool__to_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_enum$_StakeStatus_$49_to_t_uint8_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84(memPtr) {\n\n        mstore(add(memPtr, 0), \"This is not a valid ID for a sta\")\n\n        mstore(add(memPtr, 32), \"ke!\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only cancel your own sta\")\n\n        mstore(add(memPtr, 32), \"kes!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only cancel your stake i\")\n\n        mstore(add(memPtr, 32), \"f it has not been filled!\")\n\n    }\n\n    function abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address_payable__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the horse can return profit\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can only return profits on a sta\")\n\n        mstore(add(memPtr, 32), \"ke that has been filled and play\")\n\n        mstore(add(memPtr, 64), \"ed.\")\n\n    }\n\n    function abi_encode_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 67)\n        store_literal_in_memory_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c(memPtr) {\n\n        mstore(add(memPtr, 0), \"This is not a valid stake id!\")\n\n    }\n\n    function abi_encode_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "25:4416:1:-:0;;;75:1;48:28;;25:4416;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "25:4416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2588:526;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;888:446;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1710:801;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3575:761;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;532:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;82:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;48:28;;;;:::o;2588:526::-;2660:11;2668:2;2660:7;:11::i;:::-;2652:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2721:18;2742:6;:10;2749:2;2742:10;;;;;;;;;;;2721:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2785:5;:11;;;2771:25;;:10;:25;;;2763:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2871:21;2855:37;;;;;;;;:::i;:::-;;:5;:12;;;:37;;;;;;;;:::i;:::-;;;2847:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;2965:5;:12;;;:21;;:35;2987:5;:12;;;2965:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3025:21;3010:5;:12;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;3070:5;3057:6;:10;3064:2;3057:10;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3090:17;3104:2;3090:17;;;;;;:::i;:::-;;;;;;;;2642:472;2588:526;:::o;888:446::-;979:3;965:11;:17;961:86;;;1024:11;1005:31;;;;;;;;;;;:::i;:::-;;;;;;;;961:86;1080:115;;;;;;;;1086:12;;1080:115;;;;1108:10;1080:115;;;;;;1137:1;1080:115;;;;;;1142:6;1080:115;;;;1150:11;1080:115;;;;1163:1;1080:115;;;;1166:21;1080:115;;;;;;;;:::i;:::-;;;;;;1189:5;1080:115;;;;;1057:6;:20;1064:12;;1057:20;;;;;;;;;;;:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:10;1212:40;;:6;:20;1219:12;;1212:20;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;1205:48;;;;:::i;:::-;;1263:12;;:14;;;;;;;;;:::i;:::-;;;;;;1293:34;1308:10;1320:6;1293:34;;;;;;;:::i;:::-;;;;;;;;888:446;;:::o;1710:801::-;1848:12;;1842:2;:18;1838:74;;1898:2;1883:18;;;;;;;;;;;:::i;:::-;;;;;;;;1838:74;1926:18;1947:6;:10;1954:2;1947:10;;;;;;;;;;;1926:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:21;1971:37;;;;;;;;:::i;:::-;;:5;:12;;;:37;;;;;;;;:::i;:::-;;;1967:95;;2048:2;2031:20;;;;;;;;;;;:::i;:::-;;;;;;;;1967:95;2072:21;2096:5;:11;;;2072:35;;2117:22;2150:10;2117:44;;2184:6;2175:15;;:5;:15;;;2171:83;;;2225:2;2229:5;2236:6;2213:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;2171:83;2329:18;2314:5;:12;;:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;2372:6;2357:5;:12;;:21;;;;;;;;;;;2388:5;:14;;:28;2403:5;:12;;;2388:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:5;2427:6;:10;2434:2;2427:10;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:44;2472:2;2476:5;2483:6;2491:5;:12;;;2460:44;;;;;;;;;:::i;:::-;;;;;;;;1756:755;;;1710:801;:::o;3575:761::-;3655:11;3663:2;3655:7;:11::i;:::-;3647:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3716:18;3737:6;:10;3744:2;3737:10;;;;;;;;;;;3716:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3780:5;:11;;;3766:25;;:10;:25;;;3758:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3863:18;3847:34;;;;;;;;:::i;:::-;;:5;:12;;;:34;;;;;;;;:::i;:::-;;;3839:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;4070:6;4055:5;:12;;:21;;;;;4086:18;4153:3;4133:5;:17;;;:23;;;;:::i;:::-;4123:6;:34;;;;:::i;:::-;4107:5;:12;;;:51;;;;:::i;:::-;4086:72;;4169:5;:12;;;:21;;:36;4191:13;4169:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4230:21;4215:5;:12;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;4275:5;4262:6;:10;4269:2;4262:10;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4295:34;4311:2;4315:13;4295:34;;;;;;;:::i;:::-;;;;;;;;3637:699;;3575:761;;:::o;532:162::-;582:12;;:::i;:::-;614:11;622:2;614:7;:11::i;:::-;606:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;677:6;:10;684:2;677:10;;;;;;;;;;;670:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:162;;;:::o;82:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4342:96::-;4391:4;4419:12;;4414:2;:17;4407:24;;4342:96;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:474::-;1445:6;1453;1502:2;1490:9;1481:7;1477:23;1473:32;1470:119;;;1508:79;;:::i;:::-;1470:119;1628:1;1653:53;1698:7;1689:6;1678:9;1674:22;1653:53;:::i;:::-;1643:63;;1599:117;1755:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1726:118;1377:474;;;;;:::o;1857:108::-;1934:24;1952:5;1934:24;:::i;:::-;1929:3;1922:37;1857:108;;:::o;1971:126::-;2008:7;2048:42;2041:5;2037:54;2026:65;;1971:126;;;:::o;2103:104::-;2148:7;2177:24;2195:5;2177:24;:::i;:::-;2166:35;;2103:104;;;:::o;2213:132::-;2306:32;2332:5;2306:32;:::i;:::-;2301:3;2294:45;2213:132;;:::o;2351:180::-;2399:77;2396:1;2389:88;2496:4;2493:1;2486:15;2520:4;2517:1;2510:15;2537:119;2624:1;2617:5;2614:12;2604:46;;2630:18;;:::i;:::-;2604:46;2537:119;:::o;2662:139::-;2713:7;2742:5;2731:16;;2748:47;2789:5;2748:47;:::i;:::-;2662:139;;;:::o;2807:::-;2869:9;2902:38;2934:5;2902:38;:::i;:::-;2889:51;;2807:139;;;:::o;2952:145::-;3041:49;3084:5;3041:49;:::i;:::-;3036:3;3029:62;2952:145;;:::o;3103:90::-;3137:7;3180:5;3173:13;3166:21;3155:32;;3103:90;;;:::o;3199:99::-;3270:21;3285:5;3270:21;:::i;:::-;3265:3;3258:34;3199:99;;:::o;3356:1601::-;3495:6;3490:3;3486:16;3582:4;3575:5;3571:16;3565:23;3601:63;3658:4;3653:3;3649:14;3635:12;3601:63;:::i;:::-;3512:162;3757:4;3750:5;3746:16;3740:23;3776:79;3849:4;3844:3;3840:14;3826:12;3776:79;:::i;:::-;3684:181;3949:4;3942:5;3938:16;3932:23;3968:79;4041:4;4036:3;4032:14;4018:12;3968:79;:::i;:::-;3875:182;4141:4;4134:5;4130:16;4124:23;4160:63;4217:4;4212:3;4208:14;4194:12;4160:63;:::i;:::-;4067:166;4322:4;4315:5;4311:16;4305:23;4341:63;4398:4;4393:3;4389:14;4375:12;4341:63;:::i;:::-;4243:171;4498:4;4491:5;4487:16;4481:23;4517:63;4574:4;4569:3;4565:14;4551:12;4517:63;:::i;:::-;4424:166;4674:4;4667:5;4663:16;4657:23;4693:75;4762:4;4757:3;4753:14;4739:12;4693:75;:::i;:::-;4600:178;4864:4;4857:5;4853:16;4847:23;4883:57;4934:4;4929:3;4925:14;4911:12;4883:57;:::i;:::-;4788:162;3464:1493;3356:1601;;:::o;4963:307::-;5098:4;5136:3;5125:9;5121:19;5113:27;;5150:113;5260:1;5249:9;5245:17;5236:6;5150:113;:::i;:::-;4963:307;;;;:::o;5276:142::-;5379:32;5405:5;5379:32;:::i;:::-;5374:3;5367:45;5276:142;;:::o;5424:155::-;5523:49;5566:5;5523:49;:::i;:::-;5518:3;5511:62;5424:155;;:::o;5585:109::-;5666:21;5681:5;5666:21;:::i;:::-;5661:3;5654:34;5585:109;;:::o;5700:1073::-;6027:4;6065:3;6054:9;6050:19;6042:27;;6079:71;6147:1;6136:9;6132:17;6123:6;6079:71;:::i;:::-;6160:88;6244:2;6233:9;6229:18;6220:6;6160:88;:::i;:::-;6258;6342:2;6331:9;6327:18;6318:6;6258:88;:::i;:::-;6356:72;6424:2;6413:9;6409:18;6400:6;6356:72;:::i;:::-;6438:73;6506:3;6495:9;6491:19;6482:6;6438:73;:::i;:::-;6521;6589:3;6578:9;6574:19;6565:6;6521:73;:::i;:::-;6604:85;6684:3;6673:9;6669:19;6660:6;6604:85;:::i;:::-;6699:67;6761:3;6750:9;6746:19;6737:6;6699:67;:::i;:::-;5700:1073;;;;;;;;;;;:::o;6779:169::-;6863:11;6897:6;6892:3;6885:19;6937:4;6932:3;6928:14;6913:29;;6779:169;;;;:::o;6954:222::-;7094:34;7090:1;7082:6;7078:14;7071:58;7163:5;7158:2;7150:6;7146:15;7139:30;6954:222;:::o;7182:366::-;7324:3;7345:67;7409:2;7404:3;7345:67;:::i;:::-;7338:74;;7421:93;7510:3;7421:93;:::i;:::-;7539:2;7534:3;7530:12;7523:19;;7182:366;;;:::o;7554:419::-;7720:4;7758:2;7747:9;7743:18;7735:26;;7807:9;7801:4;7797:20;7793:1;7782:9;7778:17;7771:47;7835:131;7961:4;7835:131;:::i;:::-;7827:139;;7554:419;;;:::o;7979:223::-;8119:34;8115:1;8107:6;8103:14;8096:58;8188:6;8183:2;8175:6;8171:15;8164:31;7979:223;:::o;8208:366::-;8350:3;8371:67;8435:2;8430:3;8371:67;:::i;:::-;8364:74;;8447:93;8536:3;8447:93;:::i;:::-;8565:2;8560:3;8556:12;8549:19;;8208:366;;;:::o;8580:419::-;8746:4;8784:2;8773:9;8769:18;8761:26;;8833:9;8827:4;8823:20;8819:1;8808:9;8804:17;8797:47;8861:131;8987:4;8861:131;:::i;:::-;8853:139;;8580:419;;;:::o;9005:244::-;9145:34;9141:1;9133:6;9129:14;9122:58;9214:27;9209:2;9201:6;9197:15;9190:52;9005:244;:::o;9255:366::-;9397:3;9418:67;9482:2;9477:3;9418:67;:::i;:::-;9411:74;;9494:93;9583:3;9494:93;:::i;:::-;9612:2;9607:3;9603:12;9596:19;;9255:366;;;:::o;9627:419::-;9793:4;9831:2;9820:9;9816:18;9808:26;;9880:9;9874:4;9870:20;9866:1;9855:9;9851:17;9844:47;9908:131;10034:4;9908:131;:::i;:::-;9900:139;;9627:419;;;:::o;10052:180::-;10100:77;10097:1;10090:88;10197:4;10194:1;10187:15;10221:4;10218:1;10211:15;10238:180;10286:77;10283:1;10276:88;10383:4;10380:1;10373:15;10407:4;10404:1;10397:15;10424:233;10463:3;10486:24;10504:5;10486:24;:::i;:::-;10477:33;;10532:66;10525:5;10522:77;10519:103;;;10602:18;;:::i;:::-;10519:103;10649:1;10642:5;10638:13;10631:20;;10424:233;;;:::o;10663:96::-;10700:7;10729:24;10747:5;10729:24;:::i;:::-;10718:35;;10663:96;;;:::o;10765:118::-;10852:24;10870:5;10852:24;:::i;:::-;10847:3;10840:37;10765:118;;:::o;10889:332::-;11010:4;11048:2;11037:9;11033:18;11025:26;;11061:71;11129:1;11118:9;11114:17;11105:6;11061:71;:::i;:::-;11142:72;11210:2;11199:9;11195:18;11186:6;11142:72;:::i;:::-;10889:332;;;;;:::o;11227:60::-;11255:3;11276:5;11269:12;;11227:60;;;:::o;11293:142::-;11343:9;11376:53;11394:34;11403:24;11421:5;11403:24;:::i;:::-;11394:34;:::i;:::-;11376:53;:::i;:::-;11363:66;;11293:142;;;:::o;11441:126::-;11491:9;11524:37;11555:5;11524:37;:::i;:::-;11511:50;;11441:126;;;:::o;11573:134::-;11631:9;11664:37;11695:5;11664:37;:::i;:::-;11651:50;;11573:134;;;:::o;11713:147::-;11808:45;11847:5;11808:45;:::i;:::-;11803:3;11796:58;11713:147;;:::o;11866:474::-;12031:4;12069:2;12058:9;12054:18;12046:26;;12082:71;12150:1;12139:9;12135:17;12126:6;12082:71;:::i;:::-;12163:80;12239:2;12228:9;12224:18;12215:6;12163:80;:::i;:::-;12253;12329:2;12318:9;12314:18;12305:6;12253:80;:::i;:::-;11866:474;;;;;;:::o;12346:585::-;12539:4;12577:3;12566:9;12562:19;12554:27;;12591:71;12659:1;12648:9;12644:17;12635:6;12591:71;:::i;:::-;12672:80;12748:2;12737:9;12733:18;12724:6;12672:80;:::i;:::-;12762;12838:2;12827:9;12823:18;12814:6;12762:80;:::i;:::-;12852:72;12920:2;12909:9;12905:18;12896:6;12852:72;:::i;:::-;12346:585;;;;;;;:::o;12937:220::-;13077:34;13073:1;13065:6;13061:14;13054:58;13146:3;13141:2;13133:6;13129:15;13122:28;12937:220;:::o;13163:366::-;13305:3;13326:67;13390:2;13385:3;13326:67;:::i;:::-;13319:74;;13402:93;13491:3;13402:93;:::i;:::-;13520:2;13515:3;13511:12;13504:19;;13163:366;;;:::o;13535:419::-;13701:4;13739:2;13728:9;13724:18;13716:26;;13788:9;13782:4;13778:20;13774:1;13763:9;13759:17;13752:47;13816:131;13942:4;13816:131;:::i;:::-;13808:139;;13535:419;;;:::o;13960:291::-;14100:34;14096:1;14088:6;14084:14;14077:58;14169:34;14164:2;14156:6;14152:15;14145:59;14238:5;14233:2;14225:6;14221:15;14214:30;13960:291;:::o;14257:366::-;14399:3;14420:67;14484:2;14479:3;14420:67;:::i;:::-;14413:74;;14496:93;14585:3;14496:93;:::i;:::-;14614:2;14609:3;14605:12;14598:19;;14257:366;;;:::o;14629:419::-;14795:4;14833:2;14822:9;14818:18;14810:26;;14882:9;14876:4;14872:20;14868:1;14857:9;14853:17;14846:47;14910:131;15036:4;14910:131;:::i;:::-;14902:139;;14629:419;;;:::o;15054:180::-;15102:77;15099:1;15092:88;15199:4;15196:1;15189:15;15223:4;15220:1;15213:15;15240:185;15280:1;15297:20;15315:1;15297:20;:::i;:::-;15292:25;;15331:20;15349:1;15331:20;:::i;:::-;15326:25;;15370:1;15360:35;;15375:18;;:::i;:::-;15360:35;15417:1;15414;15410:9;15405:14;;15240:185;;;;:::o;15431:348::-;15471:7;15494:20;15512:1;15494:20;:::i;:::-;15489:25;;15528:20;15546:1;15528:20;:::i;:::-;15523:25;;15716:1;15648:66;15644:74;15641:1;15638:81;15633:1;15626:9;15619:17;15615:105;15612:131;;;15723:18;;:::i;:::-;15612:131;15771:1;15768;15764:9;15753:20;;15431:348;;;;:::o;15785:305::-;15825:3;15844:20;15862:1;15844:20;:::i;:::-;15839:25;;15878:20;15896:1;15878:20;:::i;:::-;15873:25;;16032:1;15964:66;15960:74;15957:1;15954:81;15951:107;;;16038:18;;:::i;:::-;15951:107;16082:1;16079;16075:9;16068:16;;15785:305;;;;:::o;16096:332::-;16217:4;16255:2;16244:9;16240:18;16232:26;;16268:71;16336:1;16325:9;16321:17;16312:6;16268:71;:::i;:::-;16349:72;16417:2;16406:9;16402:18;16393:6;16349:72;:::i;:::-;16096:332;;;;;:::o;16434:179::-;16574:31;16570:1;16562:6;16558:14;16551:55;16434:179;:::o;16619:366::-;16761:3;16782:67;16846:2;16841:3;16782:67;:::i;:::-;16775:74;;16858:93;16947:3;16858:93;:::i;:::-;16976:2;16971:3;16967:12;16960:19;;16619:366;;;:::o;16991:419::-;17157:4;17195:2;17184:9;17180:18;17172:26;;17244:9;17238:4;17234:20;17230:1;17219:9;17215:17;17208:47;17272:131;17398:4;17272:131;:::i;:::-;17264:139;;16991:419;;;:::o",
  "source": "pragma solidity ^0.8.9;\n\ncontract Staking {\n    uint public requestCount = 0;\n    mapping(uint => Stake) public stakes;\n\n    enum StakeStatus {\n        Requested,\n        Filled,\n        Expired,\n        Cancelled,\n        AwaitingReturnPayment,\n        Completed\n    }\n\n    struct Stake {\n        uint id;\n        address payable horse;\n        address payable backer;\n        uint amount;\n        uint profitShare;\n        uint profit;\n        StakeStatus status;\n        bool horseWon;\n    }\n\n    // Get an individual stake\n\n    function getStake(uint id) external view returns (Stake memory) {\n        require(validId(id), \"This is not a valid stake id!\");\n\n        return stakes[id];\n    }\n\n    // Creating a new stake request\n\n    event StakeRequested(address horse, uint amount);\n\n    /// Profit share must be between 0 and 100\n    error InvalidProfitShare(uint profitShare);\n\n    function createRequest(uint amount, uint profitShare) external {\n        if (profitShare > 100) {\n            revert InvalidProfitShare(profitShare);\n        } \n        stakes[requestCount] = Stake(requestCount, payable(msg.sender), payable(address(0)), amount, profitShare, 0, StakeStatus.Requested, false);\n        assert(stakes[requestCount].horse == msg.sender);\n        requestCount++;\n\n        emit StakeRequested(msg.sender, amount);\n    }\n\n    // Staking a request\n    event StakeFilled(uint stakeId, address horse, address backer, uint amount);\n    /// Stake has already been filled/cancelled\n    error StakeNotFillable(uint id);\n    /// You cannot stake yourself\n    error StakingSelf(uint id, address horse, address backer);\n    /// Not a valid id for a stake request\n    error InvalidStakeId(uint id);\n   \n    function stakeHorse(uint id) external payable {\n        // require(validId(id), \"This is not a valid ID for a stake!\");\n        if (id >= requestCount) {\n            revert InvalidStakeId(id);\n        }\n    \n        Stake memory stake = stakes[id];\n        if (stake.status != StakeStatus.Requested) {\n            revert StakeNotFillable(id);\n        }\n\n        address payable horse = stake.horse;\n        address payable backer = payable(msg.sender);\n        if (horse == backer) {\n            revert StakingSelf(id, horse, backer);\n        }\n\n        // Update stake status and transfer funds\n        stake.status = StakeStatus.Filled;\n        stake.backer = backer;\n        horse.transfer(stake.amount);\n\n        stakes[id] = stake;\n        emit StakeFilled(id, horse, backer, stake.amount);\n    }\n\n    // Cancelling a reqested stake\n\n    event StakeCanceled(uint id);\n\n    function cancelStakeAsHorse(uint id) external payable {\n        require(validId(id), \"This is not a valid ID for a stake!\");\n        Stake memory stake = stakes[id];\n\n        require(msg.sender == stake.horse, \"You can only cancel your own stakes!\");\n        require(stake.status == StakeStatus.Requested, \"You can only cancel your stake if it has not been filled!\");\n\n        stake.backer.transfer(stake.amount);\n        stake.status = StakeStatus.Cancelled;\n\n        stakes[id] = stake;\n        emit StakeCanceled(id);\n    }\n    \n    // TODO: How might we allow this?\n    \n    // function cancelStakeAsBacker(uint id) external payable {\n    //     Stake memory stake = stakes[id];\n    //     require(msg.sender == stake.backer);\n    //     require(validId(id), \"This is not a valid ID for a stake!\");\n    // }\n\n    // Returning profits to backer after completing games\n\n    event ProfitsReturned(uint id, uint backerReturns);\n\n    // TODO: handle the case where no profit was made\n    function returnProfits(uint id, uint profit) external payable {\n        require(validId(id), \"This is not a valid ID for a stake!\");\n        Stake memory stake = stakes[id];\n\n        require(msg.sender == stake.horse, \"Only the horse can return profits\");\n        require(stake.status == StakeStatus.Filled, \"Can only return profits on a stake that has been filled and played.\");\n\n        // TODO: Check this calculation. Do we do it here or calculate it in the frontend?\n        stake.profit = profit;\n        uint backerReturns = stake.amount + (profit * (stake.profitShare / 100));\n\n        stake.backer.transfer(backerReturns);\n        stake.status = StakeStatus.Completed;\n\n        stakes[id] = stake;\n        emit ProfitsReturned(id, backerReturns);\n    }\n\n    function validId(uint id) internal view returns (bool) {\n        return id < requestCount;\n    }\n\n}",
  "sourcePath": "/Users/julesdehon/Documents/Uni/year-3/decentralized_poker_staking/contracts/Staking.sol",
  "ast": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "Staking": [
        453
      ]
    },
    "id": 454,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 453,
        "linearizedBaseContracts": [
          453
        ],
        "name": "Staking",
        "nameLocation": "34:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5badbe4c",
            "id": 37,
            "mutability": "mutable",
            "name": "requestCount",
            "nameLocation": "60:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "48:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "48:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "75:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5a44f86",
            "id": 42,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "112:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "82:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
              "typeString": "mapping(uint256 => struct Staking.Stake)"
            },
            "typeName": {
              "id": 41,
              "keyType": {
                "id": 38,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "90:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "82:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                "typeString": "mapping(uint256 => struct Staking.Stake)"
              },
              "valueType": {
                "id": 40,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 39,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "98:5:1"
                },
                "referencedDeclaration": 67,
                "src": "98:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$67_storage_ptr",
                  "typeString": "struct Staking.Stake"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Staking.StakeStatus",
            "id": 49,
            "members": [
              {
                "id": 43,
                "name": "Requested",
                "nameLocation": "152:9:1",
                "nodeType": "EnumValue",
                "src": "152:9:1"
              },
              {
                "id": 44,
                "name": "Filled",
                "nameLocation": "171:6:1",
                "nodeType": "EnumValue",
                "src": "171:6:1"
              },
              {
                "id": 45,
                "name": "Expired",
                "nameLocation": "187:7:1",
                "nodeType": "EnumValue",
                "src": "187:7:1"
              },
              {
                "id": 46,
                "name": "Cancelled",
                "nameLocation": "204:9:1",
                "nodeType": "EnumValue",
                "src": "204:9:1"
              },
              {
                "id": 47,
                "name": "AwaitingReturnPayment",
                "nameLocation": "223:21:1",
                "nodeType": "EnumValue",
                "src": "223:21:1"
              },
              {
                "id": 48,
                "name": "Completed",
                "nameLocation": "254:9:1",
                "nodeType": "EnumValue",
                "src": "254:9:1"
              }
            ],
            "name": "StakeStatus",
            "nameLocation": "130:11:1",
            "nodeType": "EnumDefinition",
            "src": "125:144:1"
          },
          {
            "canonicalName": "Staking.Stake",
            "id": 67,
            "members": [
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "303:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "298:7:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "horse",
                "nameLocation": "331:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "315:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 52,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "315:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "backer",
                "nameLocation": "362:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "346:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 54,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "383:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "378:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 56,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "profitShare",
                "nameLocation": "404:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "399:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 58,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "399:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "profit",
                "nameLocation": "430:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "425:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "458:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "446:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_StakeStatus_$49",
                  "typeString": "enum Staking.StakeStatus"
                },
                "typeName": {
                  "id": 63,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 62,
                    "name": "StakeStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 49,
                    "src": "446:11:1"
                  },
                  "referencedDeclaration": 49,
                  "src": "446:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_StakeStatus_$49",
                    "typeString": "enum Staking.StakeStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "horseWon",
                "nameLocation": "479:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "474:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 65,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "282:5:1",
            "nodeType": "StructDefinition",
            "scope": 453,
            "src": "275:219:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "596:98:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "622:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 76,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "614:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "614:11:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c6964207374616b6520696421",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
                          "typeString": "literal_string \"This is not a valid stake id!\""
                        },
                        "value": "This is not a valid stake id!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
                          "typeString": "literal_string \"This is not a valid stake id!\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "606:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "606:53:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 82,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "677:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 84,
                    "indexExpression": {
                      "id": 83,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "684:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "677:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "functionReturnParameters": 74,
                  "id": 85,
                  "nodeType": "Return",
                  "src": "670:17:1"
                }
              ]
            },
            "functionSelector": "ce325bf8",
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nameLocation": "541:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "555:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "550:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:9:1"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "582:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                    "typeString": "struct Staking.Stake"
                  },
                  "typeName": {
                    "id": 72,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 71,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67,
                      "src": "582:5:1"
                    },
                    "referencedDeclaration": 67,
                    "src": "582:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage_ptr",
                      "typeString": "struct Staking.Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:14:1"
            },
            "scope": 453,
            "src": "532:162:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 93,
            "name": "StakeRequested",
            "nameLocation": "743:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "766:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "758:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "778:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "773:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:28:1"
            },
            "src": "737:49:1"
          },
          {
            "documentation": {
              "id": 94,
              "nodeType": "StructuredDocumentation",
              "src": "792:42:1",
              "text": "Profit share must be between 0 and 100"
            },
            "id": 98,
            "name": "InvalidProfitShare",
            "nameLocation": "845:18:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "869:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "864:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "863:18:1"
            },
            "src": "839:43:1"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "951:383:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 105,
                      "name": "profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "965:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "979:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "965:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 113,
                  "nodeType": "IfStatement",
                  "src": "961:86:1",
                  "trueBody": {
                    "id": 112,
                    "nodeType": "Block",
                    "src": "984:63:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 109,
                              "name": "profitShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "1024:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 108,
                            "name": "InvalidProfitShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1005:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1005:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 111,
                        "nodeType": "RevertStatement",
                        "src": "998:38:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 114,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1057:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 116,
                      "indexExpression": {
                        "id": 115,
                        "name": "requestCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1064:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1057:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 118,
                          "name": "requestCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1086:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 121,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1108:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1108:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1100:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 119,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1100:8:1",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1100:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1137:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1129:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 126,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1129:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1129:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1121:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1121:8:1",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1121:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 131,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "1142:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 132,
                          "name": "profitShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1150:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1163:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 134,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "1166:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "1166:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1189:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 117,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1080:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Stake_$67_storage_ptr_$",
                          "typeString": "type(struct Staking.Stake storage pointer)"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1080:115:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "1057:138:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:138:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 141,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1212:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                                "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                              }
                            },
                            "id": 143,
                            "indexExpression": {
                              "id": 142,
                              "name": "requestCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "1219:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1212:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$67_storage",
                              "typeString": "struct Staking.Stake storage ref"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "1212:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 145,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1242:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1242:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1212:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 140,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1205:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:48:1"
                },
                {
                  "expression": {
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1263:14:1",
                    "subExpression": {
                      "id": 150,
                      "name": "requestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1263:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:14:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 154,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1308:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1308:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 156,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1320:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 153,
                      "name": "StakeRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1293:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "EmitStatement",
                  "src": "1288:39:1"
                }
              ]
            },
            "functionSelector": "63c6ded3",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "897:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "916:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "911:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "929:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "924:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "910:31:1"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:1"
            },
            "scope": 453,
            "src": "888:446:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 170,
            "name": "StakeFilled",
            "nameLocation": "1371:11:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakeId",
                  "nameLocation": "1388:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1383:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1405:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1397:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1420:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1412:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1433:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1428:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:58:1"
            },
            "src": "1365:76:1"
          },
          {
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
              "src": "1446:43:1",
              "text": "Stake has already been filled/cancelled"
            },
            "id": 175,
            "name": "StakeNotFillable",
            "nameLocation": "1500:16:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1522:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "1517:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1516:9:1"
            },
            "src": "1494:32:1"
          },
          {
            "documentation": {
              "id": 176,
              "nodeType": "StructuredDocumentation",
              "src": "1531:29:1",
              "text": "You cannot stake yourself"
            },
            "id": 184,
            "name": "StakingSelf",
            "nameLocation": "1571:11:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1588:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1583:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1600:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1592:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1615:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1607:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:40:1"
            },
            "src": "1565:58:1"
          },
          {
            "documentation": {
              "id": 185,
              "nodeType": "StructuredDocumentation",
              "src": "1628:38:1",
              "text": "Not a valid id for a stake request"
            },
            "id": 189,
            "name": "InvalidStakeId",
            "nameLocation": "1677:14:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1697:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1692:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1691:9:1"
            },
            "src": "1671:30:1"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "1756:755:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 194,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "1842:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 195,
                      "name": "requestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1848:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1842:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 202,
                  "nodeType": "IfStatement",
                  "src": "1838:74:1",
                  "trueBody": {
                    "id": 201,
                    "nodeType": "Block",
                    "src": "1862:50:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 198,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "1898:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 197,
                            "name": "InvalidStakeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "1883:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1883:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 200,
                        "nodeType": "RevertStatement",
                        "src": "1876:25:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 205,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "1939:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "1926:18:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 204,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 203,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "1926:5:1"
                        },
                        "referencedDeclaration": 67,
                        "src": "1926:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 209,
                  "initialValue": {
                    "baseExpression": {
                      "id": 206,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1947:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 208,
                    "indexExpression": {
                      "id": 207,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "1954:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1947:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1926:31:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_StakeStatus_$49",
                      "typeString": "enum Staking.StakeStatus"
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 210,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "1971:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "1971:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 212,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1987:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Requested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "1987:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "1971:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 220,
                  "nodeType": "IfStatement",
                  "src": "1967:95:1",
                  "trueBody": {
                    "id": 219,
                    "nodeType": "Block",
                    "src": "2010:52:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 216,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "2048:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 215,
                            "name": "StakeNotFillable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "2031:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2031:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 218,
                        "nodeType": "RevertStatement",
                        "src": "2024:27:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 222,
                      "mutability": "mutable",
                      "name": "horse",
                      "nameLocation": "2088:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "2072:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 221,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2072:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "expression": {
                      "id": 223,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "2096:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "horse",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 53,
                    "src": "2096:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2072:35:1"
                },
                {
                  "assignments": [
                    227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 227,
                      "mutability": "mutable",
                      "name": "backer",
                      "nameLocation": "2133:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "2117:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 226,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2117:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 230,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2150:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2150:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2142:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 228,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2142:8:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2117:44:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 234,
                      "name": "horse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "2175:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 235,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "2184:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2175:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 244,
                  "nodeType": "IfStatement",
                  "src": "2171:83:1",
                  "trueBody": {
                    "id": 243,
                    "nodeType": "Block",
                    "src": "2192:62:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 238,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "2225:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 239,
                              "name": "horse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "2229:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 240,
                              "name": "backer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "2236:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 237,
                            "name": "StakingSelf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "2213:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address) pure"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2213:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 242,
                        "nodeType": "RevertStatement",
                        "src": "2206:37:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 245,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "2314:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "2314:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 248,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "2329:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Filled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2329:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "2314:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$49",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:33:1"
                },
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 252,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "2357:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "backer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "2357:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 255,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "2372:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2357:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 261,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "2403:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "2403:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 258,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2388:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2388:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:28:1"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 265,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "2427:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 267,
                      "indexExpression": {
                        "id": 266,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "2434:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2427:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 268,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "2440:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "2427:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:18:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 272,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "2472:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 273,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2476:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 274,
                        "name": "backer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "2483:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 275,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "2491:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "2491:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 271,
                      "name": "StakeFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "2460:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2460:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "EmitStatement",
                  "src": "2455:49:1"
                }
              ]
            },
            "functionSelector": "a141efea",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeHorse",
            "nameLocation": "1719:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1735:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "1730:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1729:9:1"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1756:0:1"
            },
            "scope": 453,
            "src": "1710:801:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 284,
            "name": "StakeCanceled",
            "nameLocation": "2559:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2578:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2573:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2572:9:1"
            },
            "src": "2553:29:1"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "2642:472:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 291,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "2668:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 290,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "2660:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2660:11:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2673:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2652:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2652:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "2652:59:1"
                },
                {
                  "assignments": [
                    298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 298,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "2734:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "2721:18:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 297,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 296,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "2721:5:1"
                        },
                        "referencedDeclaration": 67,
                        "src": "2721:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 302,
                  "initialValue": {
                    "baseExpression": {
                      "id": 299,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2742:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 301,
                    "indexExpression": {
                      "id": 300,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "2749:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2742:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2721:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 304,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2771:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2771:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 306,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "2785:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "2785:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2771:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572206f776e207374616b657321",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2798:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        },
                        "value": "You can only cancel your own stakes!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        }
                      ],
                      "id": 303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2763:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2763:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:74:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_StakeStatus_$49",
                          "typeString": "enum Staking.StakeStatus"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 313,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "2855:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64,
                          "src": "2855:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 315,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "2871:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "2871:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "src": "2855:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572207374616b6520696620697420686173206e6f74206265656e2066696c6c656421",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2894:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        },
                        "value": "You can only cancel your stake if it has not been filled!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2847:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2847:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:107:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 326,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "2987:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "2987:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 321,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "2965:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "2965:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2965:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "2965:35:1"
                },
                {
                  "expression": {
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 330,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "3010:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "3010:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 333,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "3025:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "3025:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "3010:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$49",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3010:36:1"
                },
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 337,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "3057:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 339,
                      "indexExpression": {
                        "id": 338,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3064:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3057:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 340,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "3070:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "3057:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:18:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 344,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3104:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 343,
                      "name": "StakeCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "3090:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3090:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "EmitStatement",
                  "src": "3085:22:1"
                }
              ]
            },
            "functionSelector": "5f904775",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelStakeAsHorse",
            "nameLocation": "2597:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2621:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "2616:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2615:9:1"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2642:0:1"
            },
            "scope": 453,
            "src": "2588:526:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 354,
            "name": "ProfitsReturned",
            "nameLocation": "3470:15:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3491:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "3486:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "backerReturns",
                  "nameLocation": "3500:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "3495:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3485:29:1"
            },
            "src": "3464:51:1"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "3637:699:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 363,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3663:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 362,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "3655:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3655:11:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3668:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3647:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3647:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "3647:59:1"
                },
                {
                  "assignments": [
                    370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 370,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "3729:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "3716:18:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 369,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 368,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "3716:5:1"
                        },
                        "referencedDeclaration": 67,
                        "src": "3716:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "baseExpression": {
                      "id": 371,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3737:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 373,
                    "indexExpression": {
                      "id": 372,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "3744:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3737:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3716:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 376,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3766:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3766:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 378,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "3780:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "3780:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3766:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520686f7273652063616e2072657475726e2070726f66697473",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3793:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
                          "typeString": "literal_string \"Only the horse can return profits\""
                        },
                        "value": "Only the horse can return profits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
                          "typeString": "literal_string \"Only the horse can return profits\""
                        }
                      ],
                      "id": 375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3758:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3758:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_StakeStatus_$49",
                          "typeString": "enum Staking.StakeStatus"
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 385,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "3847:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64,
                          "src": "3847:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 387,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "3863:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Filled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "3863:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "src": "3847:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c792072657475726e2070726f66697473206f6e2061207374616b65207468617420686173206265656e2066696c6c656420616e6420706c617965642e",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3883:69:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
                          "typeString": "literal_string \"Can only return profits on a stake that has been filled and played.\""
                        },
                        "value": "Can only return profits on a stake that has been filled and played."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
                          "typeString": "literal_string \"Can only return profits on a stake that has been filled and played.\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3839:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3839:114:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "3839:114:1"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 393,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "4055:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "profit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61,
                      "src": "4055:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 396,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "4070:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4055:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "4055:21:1"
                },
                {
                  "assignments": [
                    400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "backerReturns",
                      "nameLocation": "4091:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "4086:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4086:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 401,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "4107:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "4107:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 403,
                            "name": "profit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 358,
                            "src": "4123:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 404,
                                    "name": "stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 370,
                                    "src": "4133:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                                      "typeString": "struct Staking.Stake memory"
                                    }
                                  },
                                  "id": 405,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "profitShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 59,
                                  "src": "4133:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4153:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "4133:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 408,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4132:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4123:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 410,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4122:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4107:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4086:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 418,
                        "name": "backerReturns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "4191:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 413,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "4169:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "4169:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4169:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4169:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "4169:36:1"
                },
                {
                  "expression": {
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 421,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "4215:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "4215:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 424,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "4230:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "4230:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "4215:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$49",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "4215:36:1"
                },
                {
                  "expression": {
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 428,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "4262:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 430,
                      "indexExpression": {
                        "id": 429,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4269:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4262:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 431,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "4275:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "4262:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "4262:18:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 435,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4311:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 436,
                        "name": "backerReturns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "4315:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 434,
                      "name": "ProfitsReturned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "4295:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4295:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "EmitStatement",
                  "src": "4290:39:1"
                }
              ]
            },
            "functionSelector": "a2744250",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnProfits",
            "nameLocation": "3584:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3603:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3598:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3598:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "profit",
                  "nameLocation": "3612:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3607:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3607:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3597:22:1"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3637:0:1"
            },
            "scope": 453,
            "src": "3575:761:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "4397:41:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 447,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "4414:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 448,
                      "name": "requestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4419:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4414:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 446,
                  "id": 450,
                  "nodeType": "Return",
                  "src": "4407:24:1"
                }
              ]
            },
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validId",
            "nameLocation": "4351:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4364:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "4359:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4359:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4358:9:1"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "4391:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4390:6:1"
            },
            "scope": 453,
            "src": "4342:96:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 454,
        "src": "25:4416:1",
        "usedErrors": [
          98,
          175,
          184,
          189
        ]
      }
    ],
    "src": "0:4441:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "Staking": [
        453
      ]
    },
    "id": 454,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 453,
        "linearizedBaseContracts": [
          453
        ],
        "name": "Staking",
        "nameLocation": "34:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5badbe4c",
            "id": 37,
            "mutability": "mutable",
            "name": "requestCount",
            "nameLocation": "60:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "48:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "48:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "75:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5a44f86",
            "id": 42,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "112:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "82:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
              "typeString": "mapping(uint256 => struct Staking.Stake)"
            },
            "typeName": {
              "id": 41,
              "keyType": {
                "id": 38,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "90:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "82:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                "typeString": "mapping(uint256 => struct Staking.Stake)"
              },
              "valueType": {
                "id": 40,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 39,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "98:5:1"
                },
                "referencedDeclaration": 67,
                "src": "98:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$67_storage_ptr",
                  "typeString": "struct Staking.Stake"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Staking.StakeStatus",
            "id": 49,
            "members": [
              {
                "id": 43,
                "name": "Requested",
                "nameLocation": "152:9:1",
                "nodeType": "EnumValue",
                "src": "152:9:1"
              },
              {
                "id": 44,
                "name": "Filled",
                "nameLocation": "171:6:1",
                "nodeType": "EnumValue",
                "src": "171:6:1"
              },
              {
                "id": 45,
                "name": "Expired",
                "nameLocation": "187:7:1",
                "nodeType": "EnumValue",
                "src": "187:7:1"
              },
              {
                "id": 46,
                "name": "Cancelled",
                "nameLocation": "204:9:1",
                "nodeType": "EnumValue",
                "src": "204:9:1"
              },
              {
                "id": 47,
                "name": "AwaitingReturnPayment",
                "nameLocation": "223:21:1",
                "nodeType": "EnumValue",
                "src": "223:21:1"
              },
              {
                "id": 48,
                "name": "Completed",
                "nameLocation": "254:9:1",
                "nodeType": "EnumValue",
                "src": "254:9:1"
              }
            ],
            "name": "StakeStatus",
            "nameLocation": "130:11:1",
            "nodeType": "EnumDefinition",
            "src": "125:144:1"
          },
          {
            "canonicalName": "Staking.Stake",
            "id": 67,
            "members": [
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "303:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "298:7:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "horse",
                "nameLocation": "331:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "315:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 52,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "315:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "backer",
                "nameLocation": "362:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "346:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 54,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "383:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "378:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 56,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "profitShare",
                "nameLocation": "404:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "399:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 58,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "399:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "profit",
                "nameLocation": "430:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "425:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "458:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "446:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_StakeStatus_$49",
                  "typeString": "enum Staking.StakeStatus"
                },
                "typeName": {
                  "id": 63,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 62,
                    "name": "StakeStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 49,
                    "src": "446:11:1"
                  },
                  "referencedDeclaration": 49,
                  "src": "446:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_StakeStatus_$49",
                    "typeString": "enum Staking.StakeStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "horseWon",
                "nameLocation": "479:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "474:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 65,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "282:5:1",
            "nodeType": "StructDefinition",
            "scope": 453,
            "src": "275:219:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "596:98:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "622:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 76,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "614:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "614:11:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c6964207374616b6520696421",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
                          "typeString": "literal_string \"This is not a valid stake id!\""
                        },
                        "value": "This is not a valid stake id!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51a6e16c9c3855c780d193d8ad4f02fccbfca32d5d918ad42c4574ad66bb652c",
                          "typeString": "literal_string \"This is not a valid stake id!\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "606:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "606:53:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 82,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "677:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 84,
                    "indexExpression": {
                      "id": 83,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "684:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "677:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "functionReturnParameters": 74,
                  "id": 85,
                  "nodeType": "Return",
                  "src": "670:17:1"
                }
              ]
            },
            "functionSelector": "ce325bf8",
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nameLocation": "541:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "555:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "550:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:9:1"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "582:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                    "typeString": "struct Staking.Stake"
                  },
                  "typeName": {
                    "id": 72,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 71,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67,
                      "src": "582:5:1"
                    },
                    "referencedDeclaration": 67,
                    "src": "582:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage_ptr",
                      "typeString": "struct Staking.Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:14:1"
            },
            "scope": 453,
            "src": "532:162:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 93,
            "name": "StakeRequested",
            "nameLocation": "743:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "766:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "758:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "778:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "773:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:28:1"
            },
            "src": "737:49:1"
          },
          {
            "documentation": {
              "id": 94,
              "nodeType": "StructuredDocumentation",
              "src": "792:42:1",
              "text": "Profit share must be between 0 and 100"
            },
            "id": 98,
            "name": "InvalidProfitShare",
            "nameLocation": "845:18:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "869:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "864:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "863:18:1"
            },
            "src": "839:43:1"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "951:383:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 105,
                      "name": "profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "965:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "979:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "965:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 113,
                  "nodeType": "IfStatement",
                  "src": "961:86:1",
                  "trueBody": {
                    "id": 112,
                    "nodeType": "Block",
                    "src": "984:63:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 109,
                              "name": "profitShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "1024:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 108,
                            "name": "InvalidProfitShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1005:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1005:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 111,
                        "nodeType": "RevertStatement",
                        "src": "998:38:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 114,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1057:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 116,
                      "indexExpression": {
                        "id": 115,
                        "name": "requestCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1064:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1057:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 118,
                          "name": "requestCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1086:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 121,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1108:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1108:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1100:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 119,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1100:8:1",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1100:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1137:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1129:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 126,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1129:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1129:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1121:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1121:8:1",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1121:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 131,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "1142:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 132,
                          "name": "profitShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1150:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1163:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 134,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "1166:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "1166:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1189:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 117,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1080:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Stake_$67_storage_ptr_$",
                          "typeString": "type(struct Staking.Stake storage pointer)"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1080:115:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "1057:138:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:138:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 141,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1212:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                                "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                              }
                            },
                            "id": 143,
                            "indexExpression": {
                              "id": 142,
                              "name": "requestCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "1219:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1212:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$67_storage",
                              "typeString": "struct Staking.Stake storage ref"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "1212:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 145,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1242:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1242:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1212:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 140,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1205:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:48:1"
                },
                {
                  "expression": {
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1263:14:1",
                    "subExpression": {
                      "id": 150,
                      "name": "requestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1263:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:14:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 154,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1308:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1308:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 156,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1320:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 153,
                      "name": "StakeRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1293:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "EmitStatement",
                  "src": "1288:39:1"
                }
              ]
            },
            "functionSelector": "63c6ded3",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "897:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "916:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "911:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "profitShare",
                  "nameLocation": "929:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "924:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "910:31:1"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:1"
            },
            "scope": 453,
            "src": "888:446:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 170,
            "name": "StakeFilled",
            "nameLocation": "1371:11:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakeId",
                  "nameLocation": "1388:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1383:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1405:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1397:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1420:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1412:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1433:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1428:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:58:1"
            },
            "src": "1365:76:1"
          },
          {
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
              "src": "1446:43:1",
              "text": "Stake has already been filled/cancelled"
            },
            "id": 175,
            "name": "StakeNotFillable",
            "nameLocation": "1500:16:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1522:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "1517:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1516:9:1"
            },
            "src": "1494:32:1"
          },
          {
            "documentation": {
              "id": 176,
              "nodeType": "StructuredDocumentation",
              "src": "1531:29:1",
              "text": "You cannot stake yourself"
            },
            "id": 184,
            "name": "StakingSelf",
            "nameLocation": "1571:11:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1588:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1583:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "horse",
                  "nameLocation": "1600:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1592:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "backer",
                  "nameLocation": "1615:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1607:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:40:1"
            },
            "src": "1565:58:1"
          },
          {
            "documentation": {
              "id": 185,
              "nodeType": "StructuredDocumentation",
              "src": "1628:38:1",
              "text": "Not a valid id for a stake request"
            },
            "id": 189,
            "name": "InvalidStakeId",
            "nameLocation": "1677:14:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1697:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1692:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1691:9:1"
            },
            "src": "1671:30:1"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "1756:755:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 194,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "1842:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 195,
                      "name": "requestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1848:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1842:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 202,
                  "nodeType": "IfStatement",
                  "src": "1838:74:1",
                  "trueBody": {
                    "id": 201,
                    "nodeType": "Block",
                    "src": "1862:50:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 198,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "1898:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 197,
                            "name": "InvalidStakeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "1883:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1883:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 200,
                        "nodeType": "RevertStatement",
                        "src": "1876:25:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 205,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "1939:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "1926:18:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 204,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 203,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "1926:5:1"
                        },
                        "referencedDeclaration": 67,
                        "src": "1926:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 209,
                  "initialValue": {
                    "baseExpression": {
                      "id": 206,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1947:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 208,
                    "indexExpression": {
                      "id": 207,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "1954:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1947:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1926:31:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_StakeStatus_$49",
                      "typeString": "enum Staking.StakeStatus"
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 210,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "1971:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "1971:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 212,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1987:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Requested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "1987:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "1971:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 220,
                  "nodeType": "IfStatement",
                  "src": "1967:95:1",
                  "trueBody": {
                    "id": 219,
                    "nodeType": "Block",
                    "src": "2010:52:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 216,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "2048:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 215,
                            "name": "StakeNotFillable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "2031:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2031:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 218,
                        "nodeType": "RevertStatement",
                        "src": "2024:27:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 222,
                      "mutability": "mutable",
                      "name": "horse",
                      "nameLocation": "2088:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "2072:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 221,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2072:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "expression": {
                      "id": 223,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "2096:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "horse",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 53,
                    "src": "2096:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2072:35:1"
                },
                {
                  "assignments": [
                    227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 227,
                      "mutability": "mutable",
                      "name": "backer",
                      "nameLocation": "2133:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "2117:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 226,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2117:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 230,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2150:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2150:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2142:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 228,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2142:8:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2117:44:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 234,
                      "name": "horse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "2175:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 235,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "2184:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2175:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 244,
                  "nodeType": "IfStatement",
                  "src": "2171:83:1",
                  "trueBody": {
                    "id": 243,
                    "nodeType": "Block",
                    "src": "2192:62:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 238,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "2225:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 239,
                              "name": "horse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "2229:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 240,
                              "name": "backer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "2236:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 237,
                            "name": "StakingSelf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "2213:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address) pure"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2213:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 242,
                        "nodeType": "RevertStatement",
                        "src": "2206:37:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 245,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "2314:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "2314:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 248,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "2329:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Filled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2329:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "2314:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$49",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:33:1"
                },
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 252,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "2357:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "backer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "2357:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 255,
                      "name": "backer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "2372:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2357:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 261,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "2403:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "2403:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 258,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2388:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2388:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:28:1"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 265,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "2427:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 267,
                      "indexExpression": {
                        "id": 266,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "2434:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2427:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 268,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "2440:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "2427:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:18:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 272,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "2472:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 273,
                        "name": "horse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2476:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 274,
                        "name": "backer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "2483:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 275,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "2491:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "2491:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 271,
                      "name": "StakeFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "2460:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2460:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "EmitStatement",
                  "src": "2455:49:1"
                }
              ]
            },
            "functionSelector": "a141efea",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeHorse",
            "nameLocation": "1719:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1735:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "1730:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1729:9:1"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1756:0:1"
            },
            "scope": 453,
            "src": "1710:801:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 284,
            "name": "StakeCanceled",
            "nameLocation": "2559:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2578:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2573:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2572:9:1"
            },
            "src": "2553:29:1"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "2642:472:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 291,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "2668:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 290,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "2660:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2660:11:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2673:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2652:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2652:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "2652:59:1"
                },
                {
                  "assignments": [
                    298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 298,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "2734:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "2721:18:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 297,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 296,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "2721:5:1"
                        },
                        "referencedDeclaration": 67,
                        "src": "2721:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 302,
                  "initialValue": {
                    "baseExpression": {
                      "id": 299,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2742:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 301,
                    "indexExpression": {
                      "id": 300,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "2749:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2742:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2721:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 304,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2771:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2771:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 306,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "2785:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "2785:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2771:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572206f776e207374616b657321",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2798:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        },
                        "value": "You can only cancel your own stakes!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e117c754135d219ef0b0eb3d8b7eba809371756e88907e7e10e930e9acc8bb7c",
                          "typeString": "literal_string \"You can only cancel your own stakes!\""
                        }
                      ],
                      "id": 303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2763:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2763:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:74:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_StakeStatus_$49",
                          "typeString": "enum Staking.StakeStatus"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 313,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "2855:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64,
                          "src": "2855:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 315,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "2871:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "2871:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "src": "2855:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c792063616e63656c20796f7572207374616b6520696620697420686173206e6f74206265656e2066696c6c656421",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2894:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        },
                        "value": "You can only cancel your stake if it has not been filled!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abc2c9fda8e59d870fd766a978ac1bca125cba2345be08e7224d0e5cf1433a5e",
                          "typeString": "literal_string \"You can only cancel your stake if it has not been filled!\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2847:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2847:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:107:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 326,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "2987:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "2987:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 321,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "2965:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "2965:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2965:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "2965:35:1"
                },
                {
                  "expression": {
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 330,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "3010:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "3010:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 333,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "3025:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "3025:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "3010:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$49",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3010:36:1"
                },
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 337,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "3057:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 339,
                      "indexExpression": {
                        "id": 338,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3064:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3057:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 340,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "3070:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "3057:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:18:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 344,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3104:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 343,
                      "name": "StakeCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "3090:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3090:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "EmitStatement",
                  "src": "3085:22:1"
                }
              ]
            },
            "functionSelector": "5f904775",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelStakeAsHorse",
            "nameLocation": "2597:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2621:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "2616:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2615:9:1"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2642:0:1"
            },
            "scope": 453,
            "src": "2588:526:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 354,
            "name": "ProfitsReturned",
            "nameLocation": "3470:15:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3491:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "3486:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "backerReturns",
                  "nameLocation": "3500:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "3495:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3485:29:1"
            },
            "src": "3464:51:1"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "3637:699:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 363,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3663:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 362,
                          "name": "validId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "3655:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3655:11:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420612076616c696420494420666f722061207374616b6521",
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3668:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        },
                        "value": "This is not a valid ID for a stake!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe63321fca8c619c8a16e3396747f34d9ddf292f402db9ebb0097f1dab46cf84",
                          "typeString": "literal_string \"This is not a valid ID for a stake!\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3647:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3647:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "3647:59:1"
                },
                {
                  "assignments": [
                    370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 370,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "3729:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "3716:18:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake"
                      },
                      "typeName": {
                        "id": 369,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 368,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "3716:5:1"
                        },
                        "referencedDeclaration": 67,
                        "src": "3716:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_storage_ptr",
                          "typeString": "struct Staking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "baseExpression": {
                      "id": 371,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3737:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                        "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                      }
                    },
                    "id": 373,
                    "indexExpression": {
                      "id": 372,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "3744:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3737:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3716:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 376,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3766:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3766:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 378,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "3780:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "horse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "3780:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3766:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520686f7273652063616e2072657475726e2070726f66697473",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3793:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
                          "typeString": "literal_string \"Only the horse can return profits\""
                        },
                        "value": "Only the horse can return profits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e39579eb96059f2cb73e490c513d11938e1a078816fa814e0b90a9a8614cf5d",
                          "typeString": "literal_string \"Only the horse can return profits\""
                        }
                      ],
                      "id": 375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3758:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3758:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_StakeStatus_$49",
                          "typeString": "enum Staking.StakeStatus"
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 385,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "3847:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                              "typeString": "struct Staking.Stake memory"
                            }
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64,
                          "src": "3847:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 387,
                            "name": "StakeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "3863:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                              "typeString": "type(enum Staking.StakeStatus)"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Filled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "3863:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StakeStatus_$49",
                            "typeString": "enum Staking.StakeStatus"
                          }
                        },
                        "src": "3847:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c792072657475726e2070726f66697473206f6e2061207374616b65207468617420686173206265656e2066696c6c656420616e6420706c617965642e",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3883:69:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
                          "typeString": "literal_string \"Can only return profits on a stake that has been filled and played.\""
                        },
                        "value": "Can only return profits on a stake that has been filled and played."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7120efc6b5a502b13b1c451ff46b5fef5c61942ae214865fa2ca7c6bce5af074",
                          "typeString": "literal_string \"Can only return profits on a stake that has been filled and played.\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3839:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3839:114:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "3839:114:1"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 393,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "4055:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "profit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61,
                      "src": "4055:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 396,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "4070:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4055:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "4055:21:1"
                },
                {
                  "assignments": [
                    400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "backerReturns",
                      "nameLocation": "4091:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "4086:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4086:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 401,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "4107:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "4107:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 403,
                            "name": "profit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 358,
                            "src": "4123:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 404,
                                    "name": "stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 370,
                                    "src": "4133:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                                      "typeString": "struct Staking.Stake memory"
                                    }
                                  },
                                  "id": 405,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "profitShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 59,
                                  "src": "4133:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4153:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "4133:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 408,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4132:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4123:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 410,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4122:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4107:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4086:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 418,
                        "name": "backerReturns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "4191:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 413,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "4169:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                            "typeString": "struct Staking.Stake memory"
                          }
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "backer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "4169:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4169:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4169:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "4169:36:1"
                },
                {
                  "expression": {
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 421,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "4215:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                          "typeString": "struct Staking.Stake memory"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "4215:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 424,
                        "name": "StakeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "4230:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeStatus_$49_$",
                          "typeString": "type(enum Staking.StakeStatus)"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "4230:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeStatus_$49",
                        "typeString": "enum Staking.StakeStatus"
                      }
                    },
                    "src": "4215:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeStatus_$49",
                      "typeString": "enum Staking.StakeStatus"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "4215:36:1"
                },
                {
                  "expression": {
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 428,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "4262:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$67_storage_$",
                          "typeString": "mapping(uint256 => struct Staking.Stake storage ref)"
                        }
                      },
                      "id": 430,
                      "indexExpression": {
                        "id": 429,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4269:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4262:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_storage",
                        "typeString": "struct Staking.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 431,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "4275:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$67_memory_ptr",
                        "typeString": "struct Staking.Stake memory"
                      }
                    },
                    "src": "4262:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$67_storage",
                      "typeString": "struct Staking.Stake storage ref"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "4262:18:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 435,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4311:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 436,
                        "name": "backerReturns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "4315:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 434,
                      "name": "ProfitsReturned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "4295:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4295:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "EmitStatement",
                  "src": "4290:39:1"
                }
              ]
            },
            "functionSelector": "a2744250",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnProfits",
            "nameLocation": "3584:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3603:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3598:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3598:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "profit",
                  "nameLocation": "3612:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3607:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3607:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3597:22:1"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3637:0:1"
            },
            "scope": 453,
            "src": "3575:761:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "4397:41:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 447,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "4414:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 448,
                      "name": "requestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4419:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4414:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 446,
                  "id": 450,
                  "nodeType": "Return",
                  "src": "4407:24:1"
                }
              ]
            },
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validId",
            "nameLocation": "4351:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4364:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "4359:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4359:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4358:9:1"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "4391:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4390:6:1"
            },
            "scope": 453,
            "src": "4342:96:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 454,
        "src": "25:4416:1",
        "usedErrors": [
          98,
          175,
          184,
          189
        ]
      }
    ],
    "src": "0:4441:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x94C7298Ea7C207Fc158005cACac5268FFE180c22",
      "transactionHash": "0x009e3753018d3728d3527d0f12403059e00f132ed0da6f6b49d835409b10a631"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-22T07:27:35.673Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidProfitShare(uint256)": [
        {
          "notice": "Profit share must be between 0 and 100"
        }
      ],
      "InvalidStakeId(uint256)": [
        {
          "notice": "Not a valid id for a stake request"
        }
      ],
      "StakeNotFillable(uint256)": [
        {
          "notice": "Stake has already been filled/cancelled"
        }
      ],
      "StakingSelf(uint256,address,address)": [
        {
          "notice": "You cannot stake yourself"
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}